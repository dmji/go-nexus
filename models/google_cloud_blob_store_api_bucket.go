// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GoogleCloudBlobStoreAPIBucket google cloud blob store Api bucket
//
// swagger:model GoogleCloudBlobStoreApiBucket
type GoogleCloudBlobStoreAPIBucket struct {

	// The name of the GC Storage bucket
	// Required: true
	Name *string `json:"name"`

	// The GC Storage blob store (i.e GC Storage object) key prefix
	// Read Only: true
	Prefix string `json:"prefix,omitempty"`

	// GCP Project ID
	// Example: project_123
	// Read Only: true
	ProjectID string `json:"projectId,omitempty"`

	// The GCP region to create a new GC Storage bucket in or an existing GC Storage bucket's region. Should be the same as Nexus deployment region.
	// Example: us-central1
	Region string `json:"region,omitempty"`
}

// Validate validates this google cloud blob store Api bucket
func (m *GoogleCloudBlobStoreAPIBucket) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GoogleCloudBlobStoreAPIBucket) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this google cloud blob store Api bucket based on the context it is used
func (m *GoogleCloudBlobStoreAPIBucket) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidatePrefix(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateProjectID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GoogleCloudBlobStoreAPIBucket) contextValidatePrefix(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "prefix", "body", string(m.Prefix)); err != nil {
		return err
	}

	return nil
}

func (m *GoogleCloudBlobStoreAPIBucket) contextValidateProjectID(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "projectId", "body", string(m.ProjectID)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GoogleCloudBlobStoreAPIBucket) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GoogleCloudBlobStoreAPIBucket) UnmarshalBinary(b []byte) error {
	var res GoogleCloudBlobStoreAPIBucket
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
