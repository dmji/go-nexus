// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContentSelectorAPICreateRequest content selector Api create request
//
// swagger:model ContentSelectorApiCreateRequest
type ContentSelectorAPICreateRequest struct {

	// A human-readable description
	Description string `json:"description,omitempty"`

	// The expression used to identify content
	// Example: format == \"maven2\" and path =^ \"/org/sonatype/nexus\
	Expression string `json:"expression,omitempty"`

	// The content selector name cannot be changed after creation
	// Pattern: ^[a-zA-Z0-9\-]{1}[a-zA-Z0-9_\-\.]*$
	Name string `json:"name,omitempty"`
}

// Validate validates this content selector Api create request
func (m *ContentSelectorAPICreateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContentSelectorAPICreateRequest) validateName(formats strfmt.Registry) error {
	if swag.IsZero(m.Name) { // not required
		return nil
	}

	if err := validate.Pattern("name", "body", m.Name, `^[a-zA-Z0-9\-]{1}[a-zA-Z0-9_\-\.]*$`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this content selector Api create request based on context it is used
func (m *ContentSelectorAPICreateRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ContentSelectorAPICreateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContentSelectorAPICreateRequest) UnmarshalBinary(b []byte) error {
	var res ContentSelectorAPICreateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
