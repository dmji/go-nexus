// Code generated by go-swagger; DO NOT EDIT.

package security_management_l_d_a_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetSecurityLdapReader is a Reader for the GetSecurityLdap structure.
type GetSecurityLdapReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecurityLdapReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSecurityLdapOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSecurityLdapUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSecurityLdapForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/security/ldap] GetSecurityLdap", response, response.Code())
	}
}

// NewGetSecurityLdapOK creates a GetSecurityLdapOK with default headers values
func NewGetSecurityLdapOK() *GetSecurityLdapOK {
	return &GetSecurityLdapOK{}
}

/*
GetSecurityLdapOK describes a response with status code 200, with default header values.

LDAP server list returned
*/
type GetSecurityLdapOK struct {
}

// IsSuccess returns true when this get security ldap o k response has a 2xx status code
func (o *GetSecurityLdapOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get security ldap o k response has a 3xx status code
func (o *GetSecurityLdapOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security ldap o k response has a 4xx status code
func (o *GetSecurityLdapOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get security ldap o k response has a 5xx status code
func (o *GetSecurityLdapOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get security ldap o k response a status code equal to that given
func (o *GetSecurityLdapOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get security ldap o k response
func (o *GetSecurityLdapOK) Code() int {
	return 200
}

func (o *GetSecurityLdapOK) Error() string {
	return fmt.Sprintf("[GET /v1/security/ldap][%d] getSecurityLdapOK", 200)
}

func (o *GetSecurityLdapOK) String() string {
	return fmt.Sprintf("[GET /v1/security/ldap][%d] getSecurityLdapOK", 200)
}

func (o *GetSecurityLdapOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecurityLdapUnauthorized creates a GetSecurityLdapUnauthorized with default headers values
func NewGetSecurityLdapUnauthorized() *GetSecurityLdapUnauthorized {
	return &GetSecurityLdapUnauthorized{}
}

/*
GetSecurityLdapUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type GetSecurityLdapUnauthorized struct {
}

// IsSuccess returns true when this get security ldap unauthorized response has a 2xx status code
func (o *GetSecurityLdapUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security ldap unauthorized response has a 3xx status code
func (o *GetSecurityLdapUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security ldap unauthorized response has a 4xx status code
func (o *GetSecurityLdapUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security ldap unauthorized response has a 5xx status code
func (o *GetSecurityLdapUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get security ldap unauthorized response a status code equal to that given
func (o *GetSecurityLdapUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get security ldap unauthorized response
func (o *GetSecurityLdapUnauthorized) Code() int {
	return 401
}

func (o *GetSecurityLdapUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/security/ldap][%d] getSecurityLdapUnauthorized", 401)
}

func (o *GetSecurityLdapUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/security/ldap][%d] getSecurityLdapUnauthorized", 401)
}

func (o *GetSecurityLdapUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecurityLdapForbidden creates a GetSecurityLdapForbidden with default headers values
func NewGetSecurityLdapForbidden() *GetSecurityLdapForbidden {
	return &GetSecurityLdapForbidden{}
}

/*
GetSecurityLdapForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type GetSecurityLdapForbidden struct {
}

// IsSuccess returns true when this get security ldap forbidden response has a 2xx status code
func (o *GetSecurityLdapForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security ldap forbidden response has a 3xx status code
func (o *GetSecurityLdapForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security ldap forbidden response has a 4xx status code
func (o *GetSecurityLdapForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security ldap forbidden response has a 5xx status code
func (o *GetSecurityLdapForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get security ldap forbidden response a status code equal to that given
func (o *GetSecurityLdapForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get security ldap forbidden response
func (o *GetSecurityLdapForbidden) Code() int {
	return 403
}

func (o *GetSecurityLdapForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/security/ldap][%d] getSecurityLdapForbidden", 403)
}

func (o *GetSecurityLdapForbidden) String() string {
	return fmt.Sprintf("[GET /v1/security/ldap][%d] getSecurityLdapForbidden", 403)
}

func (o *GetSecurityLdapForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
