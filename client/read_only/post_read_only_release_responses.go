// Code generated by go-swagger; DO NOT EDIT.

package read_only

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostReadOnlyReleaseReader is a Reader for the PostReadOnlyRelease structure.
type PostReadOnlyReleaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostReadOnlyReleaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostReadOnlyReleaseNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostReadOnlyReleaseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostReadOnlyReleaseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/read-only/release] PostReadOnlyRelease", response, response.Code())
	}
}

// NewPostReadOnlyReleaseNoContent creates a PostReadOnlyReleaseNoContent with default headers values
func NewPostReadOnlyReleaseNoContent() *PostReadOnlyReleaseNoContent {
	return &PostReadOnlyReleaseNoContent{}
}

/*
PostReadOnlyReleaseNoContent describes a response with status code 204, with default header values.

Database is no longer read-only
*/
type PostReadOnlyReleaseNoContent struct {
}

// IsSuccess returns true when this post read only release no content response has a 2xx status code
func (o *PostReadOnlyReleaseNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post read only release no content response has a 3xx status code
func (o *PostReadOnlyReleaseNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post read only release no content response has a 4xx status code
func (o *PostReadOnlyReleaseNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this post read only release no content response has a 5xx status code
func (o *PostReadOnlyReleaseNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this post read only release no content response a status code equal to that given
func (o *PostReadOnlyReleaseNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the post read only release no content response
func (o *PostReadOnlyReleaseNoContent) Code() int {
	return 204
}

func (o *PostReadOnlyReleaseNoContent) Error() string {
	return fmt.Sprintf("[POST /v1/read-only/release][%d] postReadOnlyReleaseNoContent", 204)
}

func (o *PostReadOnlyReleaseNoContent) String() string {
	return fmt.Sprintf("[POST /v1/read-only/release][%d] postReadOnlyReleaseNoContent", 204)
}

func (o *PostReadOnlyReleaseNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostReadOnlyReleaseForbidden creates a PostReadOnlyReleaseForbidden with default headers values
func NewPostReadOnlyReleaseForbidden() *PostReadOnlyReleaseForbidden {
	return &PostReadOnlyReleaseForbidden{}
}

/*
PostReadOnlyReleaseForbidden describes a response with status code 403, with default header values.

Authentication required
*/
type PostReadOnlyReleaseForbidden struct {
}

// IsSuccess returns true when this post read only release forbidden response has a 2xx status code
func (o *PostReadOnlyReleaseForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post read only release forbidden response has a 3xx status code
func (o *PostReadOnlyReleaseForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post read only release forbidden response has a 4xx status code
func (o *PostReadOnlyReleaseForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post read only release forbidden response has a 5xx status code
func (o *PostReadOnlyReleaseForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post read only release forbidden response a status code equal to that given
func (o *PostReadOnlyReleaseForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post read only release forbidden response
func (o *PostReadOnlyReleaseForbidden) Code() int {
	return 403
}

func (o *PostReadOnlyReleaseForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/read-only/release][%d] postReadOnlyReleaseForbidden", 403)
}

func (o *PostReadOnlyReleaseForbidden) String() string {
	return fmt.Sprintf("[POST /v1/read-only/release][%d] postReadOnlyReleaseForbidden", 403)
}

func (o *PostReadOnlyReleaseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostReadOnlyReleaseNotFound creates a PostReadOnlyReleaseNotFound with default headers values
func NewPostReadOnlyReleaseNotFound() *PostReadOnlyReleaseNotFound {
	return &PostReadOnlyReleaseNotFound{}
}

/*
PostReadOnlyReleaseNotFound describes a response with status code 404, with default header values.

No change to read-only state
*/
type PostReadOnlyReleaseNotFound struct {
}

// IsSuccess returns true when this post read only release not found response has a 2xx status code
func (o *PostReadOnlyReleaseNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post read only release not found response has a 3xx status code
func (o *PostReadOnlyReleaseNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post read only release not found response has a 4xx status code
func (o *PostReadOnlyReleaseNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post read only release not found response has a 5xx status code
func (o *PostReadOnlyReleaseNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post read only release not found response a status code equal to that given
func (o *PostReadOnlyReleaseNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post read only release not found response
func (o *PostReadOnlyReleaseNotFound) Code() int {
	return 404
}

func (o *PostReadOnlyReleaseNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/read-only/release][%d] postReadOnlyReleaseNotFound", 404)
}

func (o *PostReadOnlyReleaseNotFound) String() string {
	return fmt.Sprintf("[POST /v1/read-only/release][%d] postReadOnlyReleaseNotFound", 404)
}

func (o *PostReadOnlyReleaseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
