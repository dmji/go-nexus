// Code generated by go-swagger; DO NOT EDIT.

package security_management_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// PostSecurityUsersReader is a Reader for the PostSecurityUsers structure.
type PostSecurityUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSecurityUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSecurityUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSecurityUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostSecurityUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/security/users] PostSecurityUsers", response, response.Code())
	}
}

// NewPostSecurityUsersOK creates a PostSecurityUsersOK with default headers values
func NewPostSecurityUsersOK() *PostSecurityUsersOK {
	return &PostSecurityUsersOK{}
}

/*
PostSecurityUsersOK describes a response with status code 200, with default header values.

successful operation
*/
type PostSecurityUsersOK struct {
	Payload *models.APIUser
}

// IsSuccess returns true when this post security users o k response has a 2xx status code
func (o *PostSecurityUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post security users o k response has a 3xx status code
func (o *PostSecurityUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post security users o k response has a 4xx status code
func (o *PostSecurityUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post security users o k response has a 5xx status code
func (o *PostSecurityUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post security users o k response a status code equal to that given
func (o *PostSecurityUsersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post security users o k response
func (o *PostSecurityUsersOK) Code() int {
	return 200
}

func (o *PostSecurityUsersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/security/users][%d] postSecurityUsersOK %s", 200, payload)
}

func (o *PostSecurityUsersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/security/users][%d] postSecurityUsersOK %s", 200, payload)
}

func (o *PostSecurityUsersOK) GetPayload() *models.APIUser {
	return o.Payload
}

func (o *PostSecurityUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSecurityUsersBadRequest creates a PostSecurityUsersBadRequest with default headers values
func NewPostSecurityUsersBadRequest() *PostSecurityUsersBadRequest {
	return &PostSecurityUsersBadRequest{}
}

/*
PostSecurityUsersBadRequest describes a response with status code 400, with default header values.

Password was not supplied in the body of the request
*/
type PostSecurityUsersBadRequest struct {
}

// IsSuccess returns true when this post security users bad request response has a 2xx status code
func (o *PostSecurityUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post security users bad request response has a 3xx status code
func (o *PostSecurityUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post security users bad request response has a 4xx status code
func (o *PostSecurityUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post security users bad request response has a 5xx status code
func (o *PostSecurityUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post security users bad request response a status code equal to that given
func (o *PostSecurityUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post security users bad request response
func (o *PostSecurityUsersBadRequest) Code() int {
	return 400
}

func (o *PostSecurityUsersBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/security/users][%d] postSecurityUsersBadRequest", 400)
}

func (o *PostSecurityUsersBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/security/users][%d] postSecurityUsersBadRequest", 400)
}

func (o *PostSecurityUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSecurityUsersForbidden creates a PostSecurityUsersForbidden with default headers values
func NewPostSecurityUsersForbidden() *PostSecurityUsersForbidden {
	return &PostSecurityUsersForbidden{}
}

/*
PostSecurityUsersForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type PostSecurityUsersForbidden struct {
}

// IsSuccess returns true when this post security users forbidden response has a 2xx status code
func (o *PostSecurityUsersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post security users forbidden response has a 3xx status code
func (o *PostSecurityUsersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post security users forbidden response has a 4xx status code
func (o *PostSecurityUsersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post security users forbidden response has a 5xx status code
func (o *PostSecurityUsersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post security users forbidden response a status code equal to that given
func (o *PostSecurityUsersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post security users forbidden response
func (o *PostSecurityUsersForbidden) Code() int {
	return 403
}

func (o *PostSecurityUsersForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/security/users][%d] postSecurityUsersForbidden", 403)
}

func (o *PostSecurityUsersForbidden) String() string {
	return fmt.Sprintf("[POST /v1/security/users][%d] postSecurityUsersForbidden", 403)
}

func (o *PostSecurityUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
