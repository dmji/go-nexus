// Code generated by go-swagger; DO NOT EDIT.

package security_management_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// GetSecurityUsersReader is a Reader for the GetSecurityUsers structure.
type GetSecurityUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecurityUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSecurityUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSecurityUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSecurityUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/security/users] GetSecurityUsers", response, response.Code())
	}
}

// NewGetSecurityUsersOK creates a GetSecurityUsersOK with default headers values
func NewGetSecurityUsersOK() *GetSecurityUsersOK {
	return &GetSecurityUsersOK{}
}

/*
GetSecurityUsersOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSecurityUsersOK struct {
	Payload []*models.APIUser
}

// IsSuccess returns true when this get security users o k response has a 2xx status code
func (o *GetSecurityUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get security users o k response has a 3xx status code
func (o *GetSecurityUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security users o k response has a 4xx status code
func (o *GetSecurityUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get security users o k response has a 5xx status code
func (o *GetSecurityUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get security users o k response a status code equal to that given
func (o *GetSecurityUsersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get security users o k response
func (o *GetSecurityUsersOK) Code() int {
	return 200
}

func (o *GetSecurityUsersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/users][%d] getSecurityUsersOK %s", 200, payload)
}

func (o *GetSecurityUsersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/users][%d] getSecurityUsersOK %s", 200, payload)
}

func (o *GetSecurityUsersOK) GetPayload() []*models.APIUser {
	return o.Payload
}

func (o *GetSecurityUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityUsersBadRequest creates a GetSecurityUsersBadRequest with default headers values
func NewGetSecurityUsersBadRequest() *GetSecurityUsersBadRequest {
	return &GetSecurityUsersBadRequest{}
}

/*
GetSecurityUsersBadRequest describes a response with status code 400, with default header values.

Password was not supplied in the body of the request
*/
type GetSecurityUsersBadRequest struct {
}

// IsSuccess returns true when this get security users bad request response has a 2xx status code
func (o *GetSecurityUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security users bad request response has a 3xx status code
func (o *GetSecurityUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security users bad request response has a 4xx status code
func (o *GetSecurityUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security users bad request response has a 5xx status code
func (o *GetSecurityUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get security users bad request response a status code equal to that given
func (o *GetSecurityUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get security users bad request response
func (o *GetSecurityUsersBadRequest) Code() int {
	return 400
}

func (o *GetSecurityUsersBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/security/users][%d] getSecurityUsersBadRequest", 400)
}

func (o *GetSecurityUsersBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/security/users][%d] getSecurityUsersBadRequest", 400)
}

func (o *GetSecurityUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecurityUsersForbidden creates a GetSecurityUsersForbidden with default headers values
func NewGetSecurityUsersForbidden() *GetSecurityUsersForbidden {
	return &GetSecurityUsersForbidden{}
}

/*
GetSecurityUsersForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type GetSecurityUsersForbidden struct {
}

// IsSuccess returns true when this get security users forbidden response has a 2xx status code
func (o *GetSecurityUsersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security users forbidden response has a 3xx status code
func (o *GetSecurityUsersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security users forbidden response has a 4xx status code
func (o *GetSecurityUsersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security users forbidden response has a 5xx status code
func (o *GetSecurityUsersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get security users forbidden response a status code equal to that given
func (o *GetSecurityUsersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get security users forbidden response
func (o *GetSecurityUsersForbidden) Code() int {
	return 403
}

func (o *GetSecurityUsersForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/security/users][%d] getSecurityUsersForbidden", 403)
}

func (o *GetSecurityUsersForbidden) String() string {
	return fmt.Sprintf("[GET /v1/security/users][%d] getSecurityUsersForbidden", 403)
}

func (o *GetSecurityUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
