// Code generated by go-swagger; DO NOT EDIT.

package system_nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetSystemInformationReader is a Reader for the GetSystemInformation structure.
type GetSystemInformationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSystemInformationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSystemInformationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetSystemInformationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /beta/system/information] GetSystemInformation", response, response.Code())
	}
}

// NewGetSystemInformationOK creates a GetSystemInformationOK with default headers values
func NewGetSystemInformationOK() *GetSystemInformationOK {
	return &GetSystemInformationOK{}
}

/*
GetSystemInformationOK describes a response with status code 200, with default header values.

System information for all running nodes grouped by nodeID
*/
type GetSystemInformationOK struct {
}

// IsSuccess returns true when this get system information o k response has a 2xx status code
func (o *GetSystemInformationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get system information o k response has a 3xx status code
func (o *GetSystemInformationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get system information o k response has a 4xx status code
func (o *GetSystemInformationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get system information o k response has a 5xx status code
func (o *GetSystemInformationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get system information o k response a status code equal to that given
func (o *GetSystemInformationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get system information o k response
func (o *GetSystemInformationOK) Code() int {
	return 200
}

func (o *GetSystemInformationOK) Error() string {
	return fmt.Sprintf("[GET /beta/system/information][%d] getSystemInformationOK", 200)
}

func (o *GetSystemInformationOK) String() string {
	return fmt.Sprintf("[GET /beta/system/information][%d] getSystemInformationOK", 200)
}

func (o *GetSystemInformationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSystemInformationForbidden creates a GetSystemInformationForbidden with default headers values
func NewGetSystemInformationForbidden() *GetSystemInformationForbidden {
	return &GetSystemInformationForbidden{}
}

/*
GetSystemInformationForbidden describes a response with status code 403, with default header values.

Insufficient permissions to request this data
*/
type GetSystemInformationForbidden struct {
}

// IsSuccess returns true when this get system information forbidden response has a 2xx status code
func (o *GetSystemInformationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get system information forbidden response has a 3xx status code
func (o *GetSystemInformationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get system information forbidden response has a 4xx status code
func (o *GetSystemInformationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get system information forbidden response has a 5xx status code
func (o *GetSystemInformationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get system information forbidden response a status code equal to that given
func (o *GetSystemInformationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get system information forbidden response
func (o *GetSystemInformationForbidden) Code() int {
	return 403
}

func (o *GetSystemInformationForbidden) Error() string {
	return fmt.Sprintf("[GET /beta/system/information][%d] getSystemInformationForbidden", 403)
}

func (o *GetSystemInformationForbidden) String() string {
	return fmt.Sprintf("[GET /beta/system/information][%d] getSystemInformationForbidden", 403)
}

func (o *GetSystemInformationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
