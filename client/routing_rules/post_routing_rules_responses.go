// Code generated by go-swagger; DO NOT EDIT.

package routing_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostRoutingRulesReader is a Reader for the PostRoutingRules structure.
type PostRoutingRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRoutingRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostRoutingRulesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRoutingRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRoutingRulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/routing-rules] PostRoutingRules", response, response.Code())
	}
}

// NewPostRoutingRulesNoContent creates a PostRoutingRulesNoContent with default headers values
func NewPostRoutingRulesNoContent() *PostRoutingRulesNoContent {
	return &PostRoutingRulesNoContent{}
}

/*
PostRoutingRulesNoContent describes a response with status code 204, with default header values.

Routing rule was successfully created
*/
type PostRoutingRulesNoContent struct {
}

// IsSuccess returns true when this post routing rules no content response has a 2xx status code
func (o *PostRoutingRulesNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post routing rules no content response has a 3xx status code
func (o *PostRoutingRulesNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing rules no content response has a 4xx status code
func (o *PostRoutingRulesNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing rules no content response has a 5xx status code
func (o *PostRoutingRulesNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing rules no content response a status code equal to that given
func (o *PostRoutingRulesNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the post routing rules no content response
func (o *PostRoutingRulesNoContent) Code() int {
	return 204
}

func (o *PostRoutingRulesNoContent) Error() string {
	return fmt.Sprintf("[POST /v1/routing-rules][%d] postRoutingRulesNoContent", 204)
}

func (o *PostRoutingRulesNoContent) String() string {
	return fmt.Sprintf("[POST /v1/routing-rules][%d] postRoutingRulesNoContent", 204)
}

func (o *PostRoutingRulesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRoutingRulesBadRequest creates a PostRoutingRulesBadRequest with default headers values
func NewPostRoutingRulesBadRequest() *PostRoutingRulesBadRequest {
	return &PostRoutingRulesBadRequest{}
}

/*
PostRoutingRulesBadRequest describes a response with status code 400, with default header values.

A routing rule with the same name already exists or required parameters missing
*/
type PostRoutingRulesBadRequest struct {
}

// IsSuccess returns true when this post routing rules bad request response has a 2xx status code
func (o *PostRoutingRulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing rules bad request response has a 3xx status code
func (o *PostRoutingRulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing rules bad request response has a 4xx status code
func (o *PostRoutingRulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing rules bad request response has a 5xx status code
func (o *PostRoutingRulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing rules bad request response a status code equal to that given
func (o *PostRoutingRulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post routing rules bad request response
func (o *PostRoutingRulesBadRequest) Code() int {
	return 400
}

func (o *PostRoutingRulesBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/routing-rules][%d] postRoutingRulesBadRequest", 400)
}

func (o *PostRoutingRulesBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/routing-rules][%d] postRoutingRulesBadRequest", 400)
}

func (o *PostRoutingRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRoutingRulesForbidden creates a PostRoutingRulesForbidden with default headers values
func NewPostRoutingRulesForbidden() *PostRoutingRulesForbidden {
	return &PostRoutingRulesForbidden{}
}

/*
PostRoutingRulesForbidden describes a response with status code 403, with default header values.

Insufficient permissions to create routing rule
*/
type PostRoutingRulesForbidden struct {
}

// IsSuccess returns true when this post routing rules forbidden response has a 2xx status code
func (o *PostRoutingRulesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing rules forbidden response has a 3xx status code
func (o *PostRoutingRulesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing rules forbidden response has a 4xx status code
func (o *PostRoutingRulesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing rules forbidden response has a 5xx status code
func (o *PostRoutingRulesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing rules forbidden response a status code equal to that given
func (o *PostRoutingRulesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post routing rules forbidden response
func (o *PostRoutingRulesForbidden) Code() int {
	return 403
}

func (o *PostRoutingRulesForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/routing-rules][%d] postRoutingRulesForbidden", 403)
}

func (o *PostRoutingRulesForbidden) String() string {
	return fmt.Sprintf("[POST /v1/routing-rules][%d] postRoutingRulesForbidden", 403)
}

func (o *PostRoutingRulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
