// Code generated by go-swagger; DO NOT EDIT.

package routing_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRoutingRulesByNameReader is a Reader for the PutRoutingRulesByName structure.
type PutRoutingRulesByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRoutingRulesByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRoutingRulesByNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRoutingRulesByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRoutingRulesByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRoutingRulesByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/routing-rules/{name}] PutRoutingRulesByName", response, response.Code())
	}
}

// NewPutRoutingRulesByNameNoContent creates a PutRoutingRulesByNameNoContent with default headers values
func NewPutRoutingRulesByNameNoContent() *PutRoutingRulesByNameNoContent {
	return &PutRoutingRulesByNameNoContent{}
}

/*
PutRoutingRulesByNameNoContent describes a response with status code 204, with default header values.

Routing rule was successfully updated
*/
type PutRoutingRulesByNameNoContent struct {
}

// IsSuccess returns true when this put routing rules by name no content response has a 2xx status code
func (o *PutRoutingRulesByNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put routing rules by name no content response has a 3xx status code
func (o *PutRoutingRulesByNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing rules by name no content response has a 4xx status code
func (o *PutRoutingRulesByNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing rules by name no content response has a 5xx status code
func (o *PutRoutingRulesByNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing rules by name no content response a status code equal to that given
func (o *PutRoutingRulesByNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put routing rules by name no content response
func (o *PutRoutingRulesByNameNoContent) Code() int {
	return 204
}

func (o *PutRoutingRulesByNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/routing-rules/{name}][%d] putRoutingRulesByNameNoContent", 204)
}

func (o *PutRoutingRulesByNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/routing-rules/{name}][%d] putRoutingRulesByNameNoContent", 204)
}

func (o *PutRoutingRulesByNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRoutingRulesByNameBadRequest creates a PutRoutingRulesByNameBadRequest with default headers values
func NewPutRoutingRulesByNameBadRequest() *PutRoutingRulesByNameBadRequest {
	return &PutRoutingRulesByNameBadRequest{}
}

/*
PutRoutingRulesByNameBadRequest describes a response with status code 400, with default header values.

Another routing rule with the same name already exists or required parameters missing
*/
type PutRoutingRulesByNameBadRequest struct {
}

// IsSuccess returns true when this put routing rules by name bad request response has a 2xx status code
func (o *PutRoutingRulesByNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing rules by name bad request response has a 3xx status code
func (o *PutRoutingRulesByNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing rules by name bad request response has a 4xx status code
func (o *PutRoutingRulesByNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing rules by name bad request response has a 5xx status code
func (o *PutRoutingRulesByNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing rules by name bad request response a status code equal to that given
func (o *PutRoutingRulesByNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put routing rules by name bad request response
func (o *PutRoutingRulesByNameBadRequest) Code() int {
	return 400
}

func (o *PutRoutingRulesByNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/routing-rules/{name}][%d] putRoutingRulesByNameBadRequest", 400)
}

func (o *PutRoutingRulesByNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/routing-rules/{name}][%d] putRoutingRulesByNameBadRequest", 400)
}

func (o *PutRoutingRulesByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRoutingRulesByNameForbidden creates a PutRoutingRulesByNameForbidden with default headers values
func NewPutRoutingRulesByNameForbidden() *PutRoutingRulesByNameForbidden {
	return &PutRoutingRulesByNameForbidden{}
}

/*
PutRoutingRulesByNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions to edit routing rules
*/
type PutRoutingRulesByNameForbidden struct {
}

// IsSuccess returns true when this put routing rules by name forbidden response has a 2xx status code
func (o *PutRoutingRulesByNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing rules by name forbidden response has a 3xx status code
func (o *PutRoutingRulesByNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing rules by name forbidden response has a 4xx status code
func (o *PutRoutingRulesByNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing rules by name forbidden response has a 5xx status code
func (o *PutRoutingRulesByNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing rules by name forbidden response a status code equal to that given
func (o *PutRoutingRulesByNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put routing rules by name forbidden response
func (o *PutRoutingRulesByNameForbidden) Code() int {
	return 403
}

func (o *PutRoutingRulesByNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/routing-rules/{name}][%d] putRoutingRulesByNameForbidden", 403)
}

func (o *PutRoutingRulesByNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/routing-rules/{name}][%d] putRoutingRulesByNameForbidden", 403)
}

func (o *PutRoutingRulesByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRoutingRulesByNameNotFound creates a PutRoutingRulesByNameNotFound with default headers values
func NewPutRoutingRulesByNameNotFound() *PutRoutingRulesByNameNotFound {
	return &PutRoutingRulesByNameNotFound{}
}

/*
PutRoutingRulesByNameNotFound describes a response with status code 404, with default header values.

Routing rule not found
*/
type PutRoutingRulesByNameNotFound struct {
}

// IsSuccess returns true when this put routing rules by name not found response has a 2xx status code
func (o *PutRoutingRulesByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing rules by name not found response has a 3xx status code
func (o *PutRoutingRulesByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing rules by name not found response has a 4xx status code
func (o *PutRoutingRulesByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing rules by name not found response has a 5xx status code
func (o *PutRoutingRulesByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing rules by name not found response a status code equal to that given
func (o *PutRoutingRulesByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put routing rules by name not found response
func (o *PutRoutingRulesByNameNotFound) Code() int {
	return 404
}

func (o *PutRoutingRulesByNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/routing-rules/{name}][%d] putRoutingRulesByNameNotFound", 404)
}

func (o *PutRoutingRulesByNameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/routing-rules/{name}][%d] putRoutingRulesByNameNotFound", 404)
}

func (o *PutRoutingRulesByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
