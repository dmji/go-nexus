// Code generated by go-swagger; DO NOT EDIT.

package routing_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteRoutingRulesByNameReader is a Reader for the DeleteRoutingRulesByName structure.
type DeleteRoutingRulesByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRoutingRulesByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteRoutingRulesByNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteRoutingRulesByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRoutingRulesByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/routing-rules/{name}] DeleteRoutingRulesByName", response, response.Code())
	}
}

// NewDeleteRoutingRulesByNameNoContent creates a DeleteRoutingRulesByNameNoContent with default headers values
func NewDeleteRoutingRulesByNameNoContent() *DeleteRoutingRulesByNameNoContent {
	return &DeleteRoutingRulesByNameNoContent{}
}

/*
DeleteRoutingRulesByNameNoContent describes a response with status code 204, with default header values.

Routing rule was successfully deleted
*/
type DeleteRoutingRulesByNameNoContent struct {
}

// IsSuccess returns true when this delete routing rules by name no content response has a 2xx status code
func (o *DeleteRoutingRulesByNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete routing rules by name no content response has a 3xx status code
func (o *DeleteRoutingRulesByNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing rules by name no content response has a 4xx status code
func (o *DeleteRoutingRulesByNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete routing rules by name no content response has a 5xx status code
func (o *DeleteRoutingRulesByNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing rules by name no content response a status code equal to that given
func (o *DeleteRoutingRulesByNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete routing rules by name no content response
func (o *DeleteRoutingRulesByNameNoContent) Code() int {
	return 204
}

func (o *DeleteRoutingRulesByNameNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/routing-rules/{name}][%d] deleteRoutingRulesByNameNoContent", 204)
}

func (o *DeleteRoutingRulesByNameNoContent) String() string {
	return fmt.Sprintf("[DELETE /v1/routing-rules/{name}][%d] deleteRoutingRulesByNameNoContent", 204)
}

func (o *DeleteRoutingRulesByNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoutingRulesByNameForbidden creates a DeleteRoutingRulesByNameForbidden with default headers values
func NewDeleteRoutingRulesByNameForbidden() *DeleteRoutingRulesByNameForbidden {
	return &DeleteRoutingRulesByNameForbidden{}
}

/*
DeleteRoutingRulesByNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions to delete routing rules
*/
type DeleteRoutingRulesByNameForbidden struct {
}

// IsSuccess returns true when this delete routing rules by name forbidden response has a 2xx status code
func (o *DeleteRoutingRulesByNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing rules by name forbidden response has a 3xx status code
func (o *DeleteRoutingRulesByNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing rules by name forbidden response has a 4xx status code
func (o *DeleteRoutingRulesByNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing rules by name forbidden response has a 5xx status code
func (o *DeleteRoutingRulesByNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing rules by name forbidden response a status code equal to that given
func (o *DeleteRoutingRulesByNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete routing rules by name forbidden response
func (o *DeleteRoutingRulesByNameForbidden) Code() int {
	return 403
}

func (o *DeleteRoutingRulesByNameForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/routing-rules/{name}][%d] deleteRoutingRulesByNameForbidden", 403)
}

func (o *DeleteRoutingRulesByNameForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/routing-rules/{name}][%d] deleteRoutingRulesByNameForbidden", 403)
}

func (o *DeleteRoutingRulesByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoutingRulesByNameNotFound creates a DeleteRoutingRulesByNameNotFound with default headers values
func NewDeleteRoutingRulesByNameNotFound() *DeleteRoutingRulesByNameNotFound {
	return &DeleteRoutingRulesByNameNotFound{}
}

/*
DeleteRoutingRulesByNameNotFound describes a response with status code 404, with default header values.

Routing rule not found
*/
type DeleteRoutingRulesByNameNotFound struct {
}

// IsSuccess returns true when this delete routing rules by name not found response has a 2xx status code
func (o *DeleteRoutingRulesByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing rules by name not found response has a 3xx status code
func (o *DeleteRoutingRulesByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing rules by name not found response has a 4xx status code
func (o *DeleteRoutingRulesByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing rules by name not found response has a 5xx status code
func (o *DeleteRoutingRulesByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing rules by name not found response a status code equal to that given
func (o *DeleteRoutingRulesByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete routing rules by name not found response
func (o *DeleteRoutingRulesByNameNotFound) Code() int {
	return 404
}

func (o *DeleteRoutingRulesByNameNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/routing-rules/{name}][%d] deleteRoutingRulesByNameNotFound", 404)
}

func (o *DeleteRoutingRulesByNameNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/routing-rules/{name}][%d] deleteRoutingRulesByNameNotFound", 404)
}

func (o *DeleteRoutingRulesByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
