// Code generated by go-swagger; DO NOT EDIT.

package routing_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"nexus/models"
)

// GetRoutingRulesReader is a Reader for the GetRoutingRules structure.
type GetRoutingRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetRoutingRulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/routing-rules] getRoutingRules", response, response.Code())
	}
}

// NewGetRoutingRulesOK creates a GetRoutingRulesOK with default headers values
func NewGetRoutingRulesOK() *GetRoutingRulesOK {
	return &GetRoutingRulesOK{}
}

/*
GetRoutingRulesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRoutingRulesOK struct {
	Payload []*models.RoutingRuleXO
}

// IsSuccess returns true when this get routing rules o k response has a 2xx status code
func (o *GetRoutingRulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get routing rules o k response has a 3xx status code
func (o *GetRoutingRulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing rules o k response has a 4xx status code
func (o *GetRoutingRulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing rules o k response has a 5xx status code
func (o *GetRoutingRulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing rules o k response a status code equal to that given
func (o *GetRoutingRulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get routing rules o k response
func (o *GetRoutingRulesOK) Code() int {
	return 200
}

func (o *GetRoutingRulesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/routing-rules][%d] getRoutingRulesOK %s", 200, payload)
}

func (o *GetRoutingRulesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/routing-rules][%d] getRoutingRulesOK %s", 200, payload)
}

func (o *GetRoutingRulesOK) GetPayload() []*models.RoutingRuleXO {
	return o.Payload
}

func (o *GetRoutingRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingRulesForbidden creates a GetRoutingRulesForbidden with default headers values
func NewGetRoutingRulesForbidden() *GetRoutingRulesForbidden {
	return &GetRoutingRulesForbidden{}
}

/*
GetRoutingRulesForbidden describes a response with status code 403, with default header values.

Insufficient permissions to read routing rules
*/
type GetRoutingRulesForbidden struct {
}

// IsSuccess returns true when this get routing rules forbidden response has a 2xx status code
func (o *GetRoutingRulesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing rules forbidden response has a 3xx status code
func (o *GetRoutingRulesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing rules forbidden response has a 4xx status code
func (o *GetRoutingRulesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing rules forbidden response has a 5xx status code
func (o *GetRoutingRulesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing rules forbidden response a status code equal to that given
func (o *GetRoutingRulesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get routing rules forbidden response
func (o *GetRoutingRulesForbidden) Code() int {
	return 403
}

func (o *GetRoutingRulesForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/routing-rules][%d] getRoutingRulesForbidden", 403)
}

func (o *GetRoutingRulesForbidden) String() string {
	return fmt.Sprintf("[GET /v1/routing-rules][%d] getRoutingRulesForbidden", 403)
}

func (o *GetRoutingRulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
