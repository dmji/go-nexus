// Code generated by go-swagger; DO NOT EDIT.

package security_management_roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutSecurityRolesByIDReader is a Reader for the PutSecurityRolesByID structure.
type PutSecurityRolesByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSecurityRolesByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 403:
		result := NewPutSecurityRolesByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSecurityRolesByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/security/roles/{id}] PutSecurityRolesById", response, response.Code())
	}
}

// NewPutSecurityRolesByIDForbidden creates a PutSecurityRolesByIDForbidden with default headers values
func NewPutSecurityRolesByIDForbidden() *PutSecurityRolesByIDForbidden {
	return &PutSecurityRolesByIDForbidden{}
}

/*
PutSecurityRolesByIDForbidden describes a response with status code 403, with default header values.

Insufficient permissions to update role
*/
type PutSecurityRolesByIDForbidden struct {
}

// IsSuccess returns true when this put security roles by Id forbidden response has a 2xx status code
func (o *PutSecurityRolesByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security roles by Id forbidden response has a 3xx status code
func (o *PutSecurityRolesByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security roles by Id forbidden response has a 4xx status code
func (o *PutSecurityRolesByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security roles by Id forbidden response has a 5xx status code
func (o *PutSecurityRolesByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put security roles by Id forbidden response a status code equal to that given
func (o *PutSecurityRolesByIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put security roles by Id forbidden response
func (o *PutSecurityRolesByIDForbidden) Code() int {
	return 403
}

func (o *PutSecurityRolesByIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/security/roles/{id}][%d] putSecurityRolesByIdForbidden", 403)
}

func (o *PutSecurityRolesByIDForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/security/roles/{id}][%d] putSecurityRolesByIdForbidden", 403)
}

func (o *PutSecurityRolesByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityRolesByIDNotFound creates a PutSecurityRolesByIDNotFound with default headers values
func NewPutSecurityRolesByIDNotFound() *PutSecurityRolesByIDNotFound {
	return &PutSecurityRolesByIDNotFound{}
}

/*
PutSecurityRolesByIDNotFound describes a response with status code 404, with default header values.

Role not found
*/
type PutSecurityRolesByIDNotFound struct {
}

// IsSuccess returns true when this put security roles by Id not found response has a 2xx status code
func (o *PutSecurityRolesByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security roles by Id not found response has a 3xx status code
func (o *PutSecurityRolesByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security roles by Id not found response has a 4xx status code
func (o *PutSecurityRolesByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security roles by Id not found response has a 5xx status code
func (o *PutSecurityRolesByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put security roles by Id not found response a status code equal to that given
func (o *PutSecurityRolesByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put security roles by Id not found response
func (o *PutSecurityRolesByIDNotFound) Code() int {
	return 404
}

func (o *PutSecurityRolesByIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/security/roles/{id}][%d] putSecurityRolesByIdNotFound", 404)
}

func (o *PutSecurityRolesByIDNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/security/roles/{id}][%d] putSecurityRolesByIdNotFound", 404)
}

func (o *PutSecurityRolesByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
