// Code generated by go-swagger; DO NOT EDIT.

package security_management_roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// PostSecurityRolesReader is a Reader for the PostSecurityRoles structure.
type PostSecurityRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSecurityRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSecurityRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostSecurityRolesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/security/roles] PostSecurityRoles", response, response.Code())
	}
}

// NewPostSecurityRolesOK creates a PostSecurityRolesOK with default headers values
func NewPostSecurityRolesOK() *PostSecurityRolesOK {
	return &PostSecurityRolesOK{}
}

/*
PostSecurityRolesOK describes a response with status code 200, with default header values.

successful operation
*/
type PostSecurityRolesOK struct {
	Payload *models.RoleXOResponse
}

// IsSuccess returns true when this post security roles o k response has a 2xx status code
func (o *PostSecurityRolesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post security roles o k response has a 3xx status code
func (o *PostSecurityRolesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post security roles o k response has a 4xx status code
func (o *PostSecurityRolesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post security roles o k response has a 5xx status code
func (o *PostSecurityRolesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post security roles o k response a status code equal to that given
func (o *PostSecurityRolesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post security roles o k response
func (o *PostSecurityRolesOK) Code() int {
	return 200
}

func (o *PostSecurityRolesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/security/roles][%d] postSecurityRolesOK %s", 200, payload)
}

func (o *PostSecurityRolesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/security/roles][%d] postSecurityRolesOK %s", 200, payload)
}

func (o *PostSecurityRolesOK) GetPayload() *models.RoleXOResponse {
	return o.Payload
}

func (o *PostSecurityRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoleXOResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSecurityRolesForbidden creates a PostSecurityRolesForbidden with default headers values
func NewPostSecurityRolesForbidden() *PostSecurityRolesForbidden {
	return &PostSecurityRolesForbidden{}
}

/*
PostSecurityRolesForbidden describes a response with status code 403, with default header values.

Insufficient permissions to create role
*/
type PostSecurityRolesForbidden struct {
}

// IsSuccess returns true when this post security roles forbidden response has a 2xx status code
func (o *PostSecurityRolesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post security roles forbidden response has a 3xx status code
func (o *PostSecurityRolesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post security roles forbidden response has a 4xx status code
func (o *PostSecurityRolesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post security roles forbidden response has a 5xx status code
func (o *PostSecurityRolesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post security roles forbidden response a status code equal to that given
func (o *PostSecurityRolesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post security roles forbidden response
func (o *PostSecurityRolesForbidden) Code() int {
	return 403
}

func (o *PostSecurityRolesForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/security/roles][%d] postSecurityRolesForbidden", 403)
}

func (o *PostSecurityRolesForbidden) String() string {
	return fmt.Sprintf("[POST /v1/security/roles][%d] postSecurityRolesForbidden", 403)
}

func (o *PostSecurityRolesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
