// Code generated by go-swagger; DO NOT EDIT.

package security_management_roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// GetSecurityRolesByIDReader is a Reader for the GetSecurityRolesByID structure.
type GetSecurityRolesByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecurityRolesByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSecurityRolesByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSecurityRolesByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSecurityRolesByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSecurityRolesByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/security/roles/{id}] GetSecurityRolesById", response, response.Code())
	}
}

// NewGetSecurityRolesByIDOK creates a GetSecurityRolesByIDOK with default headers values
func NewGetSecurityRolesByIDOK() *GetSecurityRolesByIDOK {
	return &GetSecurityRolesByIDOK{}
}

/*
GetSecurityRolesByIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSecurityRolesByIDOK struct {
	Payload *models.RoleXOResponse
}

// IsSuccess returns true when this get security roles by Id o k response has a 2xx status code
func (o *GetSecurityRolesByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get security roles by Id o k response has a 3xx status code
func (o *GetSecurityRolesByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security roles by Id o k response has a 4xx status code
func (o *GetSecurityRolesByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get security roles by Id o k response has a 5xx status code
func (o *GetSecurityRolesByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get security roles by Id o k response a status code equal to that given
func (o *GetSecurityRolesByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get security roles by Id o k response
func (o *GetSecurityRolesByIDOK) Code() int {
	return 200
}

func (o *GetSecurityRolesByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/roles/{id}][%d] getSecurityRolesByIdOK %s", 200, payload)
}

func (o *GetSecurityRolesByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/roles/{id}][%d] getSecurityRolesByIdOK %s", 200, payload)
}

func (o *GetSecurityRolesByIDOK) GetPayload() *models.RoleXOResponse {
	return o.Payload
}

func (o *GetSecurityRolesByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoleXOResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityRolesByIDBadRequest creates a GetSecurityRolesByIDBadRequest with default headers values
func NewGetSecurityRolesByIDBadRequest() *GetSecurityRolesByIDBadRequest {
	return &GetSecurityRolesByIDBadRequest{}
}

/*
GetSecurityRolesByIDBadRequest describes a response with status code 400, with default header values.

The specified source does not exist
*/
type GetSecurityRolesByIDBadRequest struct {
}

// IsSuccess returns true when this get security roles by Id bad request response has a 2xx status code
func (o *GetSecurityRolesByIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security roles by Id bad request response has a 3xx status code
func (o *GetSecurityRolesByIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security roles by Id bad request response has a 4xx status code
func (o *GetSecurityRolesByIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security roles by Id bad request response has a 5xx status code
func (o *GetSecurityRolesByIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get security roles by Id bad request response a status code equal to that given
func (o *GetSecurityRolesByIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get security roles by Id bad request response
func (o *GetSecurityRolesByIDBadRequest) Code() int {
	return 400
}

func (o *GetSecurityRolesByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/security/roles/{id}][%d] getSecurityRolesByIdBadRequest", 400)
}

func (o *GetSecurityRolesByIDBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/security/roles/{id}][%d] getSecurityRolesByIdBadRequest", 400)
}

func (o *GetSecurityRolesByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecurityRolesByIDForbidden creates a GetSecurityRolesByIDForbidden with default headers values
func NewGetSecurityRolesByIDForbidden() *GetSecurityRolesByIDForbidden {
	return &GetSecurityRolesByIDForbidden{}
}

/*
GetSecurityRolesByIDForbidden describes a response with status code 403, with default header values.

Insufficient permissions to read roles
*/
type GetSecurityRolesByIDForbidden struct {
}

// IsSuccess returns true when this get security roles by Id forbidden response has a 2xx status code
func (o *GetSecurityRolesByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security roles by Id forbidden response has a 3xx status code
func (o *GetSecurityRolesByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security roles by Id forbidden response has a 4xx status code
func (o *GetSecurityRolesByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security roles by Id forbidden response has a 5xx status code
func (o *GetSecurityRolesByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get security roles by Id forbidden response a status code equal to that given
func (o *GetSecurityRolesByIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get security roles by Id forbidden response
func (o *GetSecurityRolesByIDForbidden) Code() int {
	return 403
}

func (o *GetSecurityRolesByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/security/roles/{id}][%d] getSecurityRolesByIdForbidden", 403)
}

func (o *GetSecurityRolesByIDForbidden) String() string {
	return fmt.Sprintf("[GET /v1/security/roles/{id}][%d] getSecurityRolesByIdForbidden", 403)
}

func (o *GetSecurityRolesByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecurityRolesByIDNotFound creates a GetSecurityRolesByIDNotFound with default headers values
func NewGetSecurityRolesByIDNotFound() *GetSecurityRolesByIDNotFound {
	return &GetSecurityRolesByIDNotFound{}
}

/*
GetSecurityRolesByIDNotFound describes a response with status code 404, with default header values.

Role not found
*/
type GetSecurityRolesByIDNotFound struct {
}

// IsSuccess returns true when this get security roles by Id not found response has a 2xx status code
func (o *GetSecurityRolesByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security roles by Id not found response has a 3xx status code
func (o *GetSecurityRolesByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security roles by Id not found response has a 4xx status code
func (o *GetSecurityRolesByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security roles by Id not found response has a 5xx status code
func (o *GetSecurityRolesByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get security roles by Id not found response a status code equal to that given
func (o *GetSecurityRolesByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get security roles by Id not found response
func (o *GetSecurityRolesByIDNotFound) Code() int {
	return 404
}

func (o *GetSecurityRolesByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/security/roles/{id}][%d] getSecurityRolesByIdNotFound", 404)
}

func (o *GetSecurityRolesByIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/security/roles/{id}][%d] getSecurityRolesByIdNotFound", 404)
}

func (o *GetSecurityRolesByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
