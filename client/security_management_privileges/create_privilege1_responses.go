// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreatePrivilege1Reader is a Reader for the CreatePrivilege1 structure.
type CreatePrivilege1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePrivilege1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewCreatePrivilege1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreatePrivilege1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/security/privileges/repository-view] createPrivilege_1", response, response.Code())
	}
}

// NewCreatePrivilege1BadRequest creates a CreatePrivilege1BadRequest with default headers values
func NewCreatePrivilege1BadRequest() *CreatePrivilege1BadRequest {
	return &CreatePrivilege1BadRequest{}
}

/*
CreatePrivilege1BadRequest describes a response with status code 400, with default header values.

Privilege object not configured properly.
*/
type CreatePrivilege1BadRequest struct {
}

// IsSuccess returns true when this create privilege1 bad request response has a 2xx status code
func (o *CreatePrivilege1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create privilege1 bad request response has a 3xx status code
func (o *CreatePrivilege1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create privilege1 bad request response has a 4xx status code
func (o *CreatePrivilege1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create privilege1 bad request response has a 5xx status code
func (o *CreatePrivilege1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create privilege1 bad request response a status code equal to that given
func (o *CreatePrivilege1BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create privilege1 bad request response
func (o *CreatePrivilege1BadRequest) Code() int {
	return 400
}

func (o *CreatePrivilege1BadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/security/privileges/repository-view][%d] createPrivilege1BadRequest", 400)
}

func (o *CreatePrivilege1BadRequest) String() string {
	return fmt.Sprintf("[POST /v1/security/privileges/repository-view][%d] createPrivilege1BadRequest", 400)
}

func (o *CreatePrivilege1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreatePrivilege1Forbidden creates a CreatePrivilege1Forbidden with default headers values
func NewCreatePrivilege1Forbidden() *CreatePrivilege1Forbidden {
	return &CreatePrivilege1Forbidden{}
}

/*
CreatePrivilege1Forbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type CreatePrivilege1Forbidden struct {
}

// IsSuccess returns true when this create privilege1 forbidden response has a 2xx status code
func (o *CreatePrivilege1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create privilege1 forbidden response has a 3xx status code
func (o *CreatePrivilege1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create privilege1 forbidden response has a 4xx status code
func (o *CreatePrivilege1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create privilege1 forbidden response has a 5xx status code
func (o *CreatePrivilege1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create privilege1 forbidden response a status code equal to that given
func (o *CreatePrivilege1Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create privilege1 forbidden response
func (o *CreatePrivilege1Forbidden) Code() int {
	return 403
}

func (o *CreatePrivilege1Forbidden) Error() string {
	return fmt.Sprintf("[POST /v1/security/privileges/repository-view][%d] createPrivilege1Forbidden", 403)
}

func (o *CreatePrivilege1Forbidden) String() string {
	return fmt.Sprintf("[POST /v1/security/privileges/repository-view][%d] createPrivilege1Forbidden", 403)
}

func (o *CreatePrivilege1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
