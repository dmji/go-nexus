// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostSecurityPrivilegesRepositoryAdminReader is a Reader for the PostSecurityPrivilegesRepositoryAdmin structure.
type PostSecurityPrivilegesRepositoryAdminReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSecurityPrivilegesRepositoryAdminReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewPostSecurityPrivilegesRepositoryAdminBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostSecurityPrivilegesRepositoryAdminForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/security/privileges/repository-admin] PostSecurityPrivilegesRepositoryAdmin", response, response.Code())
	}
}

// NewPostSecurityPrivilegesRepositoryAdminBadRequest creates a PostSecurityPrivilegesRepositoryAdminBadRequest with default headers values
func NewPostSecurityPrivilegesRepositoryAdminBadRequest() *PostSecurityPrivilegesRepositoryAdminBadRequest {
	return &PostSecurityPrivilegesRepositoryAdminBadRequest{}
}

/*
PostSecurityPrivilegesRepositoryAdminBadRequest describes a response with status code 400, with default header values.

Privilege object not configured properly.
*/
type PostSecurityPrivilegesRepositoryAdminBadRequest struct {
}

// IsSuccess returns true when this post security privileges repository admin bad request response has a 2xx status code
func (o *PostSecurityPrivilegesRepositoryAdminBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post security privileges repository admin bad request response has a 3xx status code
func (o *PostSecurityPrivilegesRepositoryAdminBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post security privileges repository admin bad request response has a 4xx status code
func (o *PostSecurityPrivilegesRepositoryAdminBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post security privileges repository admin bad request response has a 5xx status code
func (o *PostSecurityPrivilegesRepositoryAdminBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post security privileges repository admin bad request response a status code equal to that given
func (o *PostSecurityPrivilegesRepositoryAdminBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post security privileges repository admin bad request response
func (o *PostSecurityPrivilegesRepositoryAdminBadRequest) Code() int {
	return 400
}

func (o *PostSecurityPrivilegesRepositoryAdminBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/security/privileges/repository-admin][%d] postSecurityPrivilegesRepositoryAdminBadRequest", 400)
}

func (o *PostSecurityPrivilegesRepositoryAdminBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/security/privileges/repository-admin][%d] postSecurityPrivilegesRepositoryAdminBadRequest", 400)
}

func (o *PostSecurityPrivilegesRepositoryAdminBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSecurityPrivilegesRepositoryAdminForbidden creates a PostSecurityPrivilegesRepositoryAdminForbidden with default headers values
func NewPostSecurityPrivilegesRepositoryAdminForbidden() *PostSecurityPrivilegesRepositoryAdminForbidden {
	return &PostSecurityPrivilegesRepositoryAdminForbidden{}
}

/*
PostSecurityPrivilegesRepositoryAdminForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type PostSecurityPrivilegesRepositoryAdminForbidden struct {
}

// IsSuccess returns true when this post security privileges repository admin forbidden response has a 2xx status code
func (o *PostSecurityPrivilegesRepositoryAdminForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post security privileges repository admin forbidden response has a 3xx status code
func (o *PostSecurityPrivilegesRepositoryAdminForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post security privileges repository admin forbidden response has a 4xx status code
func (o *PostSecurityPrivilegesRepositoryAdminForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post security privileges repository admin forbidden response has a 5xx status code
func (o *PostSecurityPrivilegesRepositoryAdminForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post security privileges repository admin forbidden response a status code equal to that given
func (o *PostSecurityPrivilegesRepositoryAdminForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post security privileges repository admin forbidden response
func (o *PostSecurityPrivilegesRepositoryAdminForbidden) Code() int {
	return 403
}

func (o *PostSecurityPrivilegesRepositoryAdminForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/security/privileges/repository-admin][%d] postSecurityPrivilegesRepositoryAdminForbidden", 403)
}

func (o *PostSecurityPrivilegesRepositoryAdminForbidden) String() string {
	return fmt.Sprintf("[POST /v1/security/privileges/repository-admin][%d] postSecurityPrivilegesRepositoryAdminForbidden", 403)
}

func (o *PostSecurityPrivilegesRepositoryAdminForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
