// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutSecurityPrivilegesRepositoryViewByPrivilegenameReader is a Reader for the PutSecurityPrivilegesRepositoryViewByPrivilegename structure.
type PutSecurityPrivilegesRepositoryViewByPrivilegenameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewPutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/security/privileges/repository-view/{privilegeName}] PutSecurityPrivilegesRepositoryViewByPrivilegename", response, response.Code())
	}
}

// NewPutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest creates a PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest with default headers values
func NewPutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest() *PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest {
	return &PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest{}
}

/*
PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest describes a response with status code 400, with default header values.

Privilege object not configured properly.
*/
type PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest struct {
}

// IsSuccess returns true when this put security privileges repository view by privilegename bad request response has a 2xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges repository view by privilegename bad request response has a 3xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges repository view by privilegename bad request response has a 4xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges repository view by privilegename bad request response has a 5xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges repository view by privilegename bad request response a status code equal to that given
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put security privileges repository view by privilegename bad request response
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest) Code() int {
	return 400
}

func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-view/{privilegeName}][%d] putSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest", 400)
}

func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-view/{privilegeName}][%d] putSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest", 400)
}

func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden creates a PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden with default headers values
func NewPutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden() *PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden {
	return &PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden{}
}

/*
PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden struct {
}

// IsSuccess returns true when this put security privileges repository view by privilegename forbidden response has a 2xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges repository view by privilegename forbidden response has a 3xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges repository view by privilegename forbidden response has a 4xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges repository view by privilegename forbidden response has a 5xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges repository view by privilegename forbidden response a status code equal to that given
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put security privileges repository view by privilegename forbidden response
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden) Code() int {
	return 403
}

func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-view/{privilegeName}][%d] putSecurityPrivilegesRepositoryViewByPrivilegenameForbidden", 403)
}

func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-view/{privilegeName}][%d] putSecurityPrivilegesRepositoryViewByPrivilegenameForbidden", 403)
}

func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound creates a PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound with default headers values
func NewPutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound() *PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound {
	return &PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound{}
}

/*
PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound describes a response with status code 404, with default header values.

Privilege not found in the system.
*/
type PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound struct {
}

// IsSuccess returns true when this put security privileges repository view by privilegename not found response has a 2xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges repository view by privilegename not found response has a 3xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges repository view by privilegename not found response has a 4xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges repository view by privilegename not found response has a 5xx status code
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges repository view by privilegename not found response a status code equal to that given
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put security privileges repository view by privilegename not found response
func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound) Code() int {
	return 404
}

func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-view/{privilegeName}][%d] putSecurityPrivilegesRepositoryViewByPrivilegenameNotFound", 404)
}

func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-view/{privilegeName}][%d] putSecurityPrivilegesRepositoryViewByPrivilegenameNotFound", 404)
}

func (o *PutSecurityPrivilegesRepositoryViewByPrivilegenameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
