// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// GetSecurityPrivilegesByPrivilegeNameReader is a Reader for the GetSecurityPrivilegesByPrivilegeName structure.
type GetSecurityPrivilegesByPrivilegeNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecurityPrivilegesByPrivilegeNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSecurityPrivilegesByPrivilegeNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetSecurityPrivilegesByPrivilegeNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSecurityPrivilegesByPrivilegeNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/security/privileges/{privilegeName}] GetSecurityPrivilegesByPrivilegeName", response, response.Code())
	}
}

// NewGetSecurityPrivilegesByPrivilegeNameOK creates a GetSecurityPrivilegesByPrivilegeNameOK with default headers values
func NewGetSecurityPrivilegesByPrivilegeNameOK() *GetSecurityPrivilegesByPrivilegeNameOK {
	return &GetSecurityPrivilegesByPrivilegeNameOK{}
}

/*
GetSecurityPrivilegesByPrivilegeNameOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSecurityPrivilegesByPrivilegeNameOK struct {
	Payload *models.APIPrivilege
}

// IsSuccess returns true when this get security privileges by privilege name o k response has a 2xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get security privileges by privilege name o k response has a 3xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security privileges by privilege name o k response has a 4xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get security privileges by privilege name o k response has a 5xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get security privileges by privilege name o k response a status code equal to that given
func (o *GetSecurityPrivilegesByPrivilegeNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get security privileges by privilege name o k response
func (o *GetSecurityPrivilegesByPrivilegeNameOK) Code() int {
	return 200
}

func (o *GetSecurityPrivilegesByPrivilegeNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegeNameOK %s", 200, payload)
}

func (o *GetSecurityPrivilegesByPrivilegeNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegeNameOK %s", 200, payload)
}

func (o *GetSecurityPrivilegesByPrivilegeNameOK) GetPayload() *models.APIPrivilege {
	return o.Payload
}

func (o *GetSecurityPrivilegesByPrivilegeNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIPrivilege)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityPrivilegesByPrivilegeNameForbidden creates a GetSecurityPrivilegesByPrivilegeNameForbidden with default headers values
func NewGetSecurityPrivilegesByPrivilegeNameForbidden() *GetSecurityPrivilegesByPrivilegeNameForbidden {
	return &GetSecurityPrivilegesByPrivilegeNameForbidden{}
}

/*
GetSecurityPrivilegesByPrivilegeNameForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type GetSecurityPrivilegesByPrivilegeNameForbidden struct {
}

// IsSuccess returns true when this get security privileges by privilege name forbidden response has a 2xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security privileges by privilege name forbidden response has a 3xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security privileges by privilege name forbidden response has a 4xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security privileges by privilege name forbidden response has a 5xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get security privileges by privilege name forbidden response a status code equal to that given
func (o *GetSecurityPrivilegesByPrivilegeNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get security privileges by privilege name forbidden response
func (o *GetSecurityPrivilegesByPrivilegeNameForbidden) Code() int {
	return 403
}

func (o *GetSecurityPrivilegesByPrivilegeNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegeNameForbidden", 403)
}

func (o *GetSecurityPrivilegesByPrivilegeNameForbidden) String() string {
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegeNameForbidden", 403)
}

func (o *GetSecurityPrivilegesByPrivilegeNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecurityPrivilegesByPrivilegeNameNotFound creates a GetSecurityPrivilegesByPrivilegeNameNotFound with default headers values
func NewGetSecurityPrivilegesByPrivilegeNameNotFound() *GetSecurityPrivilegesByPrivilegeNameNotFound {
	return &GetSecurityPrivilegesByPrivilegeNameNotFound{}
}

/*
GetSecurityPrivilegesByPrivilegeNameNotFound describes a response with status code 404, with default header values.

Privilege not found in the system.
*/
type GetSecurityPrivilegesByPrivilegeNameNotFound struct {
}

// IsSuccess returns true when this get security privileges by privilege name not found response has a 2xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security privileges by privilege name not found response has a 3xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security privileges by privilege name not found response has a 4xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security privileges by privilege name not found response has a 5xx status code
func (o *GetSecurityPrivilegesByPrivilegeNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get security privileges by privilege name not found response a status code equal to that given
func (o *GetSecurityPrivilegesByPrivilegeNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get security privileges by privilege name not found response
func (o *GetSecurityPrivilegesByPrivilegeNameNotFound) Code() int {
	return 404
}

func (o *GetSecurityPrivilegesByPrivilegeNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegeNameNotFound", 404)
}

func (o *GetSecurityPrivilegesByPrivilegeNameNotFound) String() string {
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegeNameNotFound", 404)
}

func (o *GetSecurityPrivilegesByPrivilegeNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
