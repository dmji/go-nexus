// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdatePrivilege5Reader is a Reader for the UpdatePrivilege5 structure.
type UpdatePrivilege5Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePrivilege5Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewUpdatePrivilege5BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePrivilege5Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePrivilege5NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/security/privileges/script/{privilegeName}] updatePrivilege_5", response, response.Code())
	}
}

// NewUpdatePrivilege5BadRequest creates a UpdatePrivilege5BadRequest with default headers values
func NewUpdatePrivilege5BadRequest() *UpdatePrivilege5BadRequest {
	return &UpdatePrivilege5BadRequest{}
}

/*
UpdatePrivilege5BadRequest describes a response with status code 400, with default header values.

Privilege object not configured properly.
*/
type UpdatePrivilege5BadRequest struct {
}

// IsSuccess returns true when this update privilege5 bad request response has a 2xx status code
func (o *UpdatePrivilege5BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update privilege5 bad request response has a 3xx status code
func (o *UpdatePrivilege5BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update privilege5 bad request response has a 4xx status code
func (o *UpdatePrivilege5BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update privilege5 bad request response has a 5xx status code
func (o *UpdatePrivilege5BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update privilege5 bad request response a status code equal to that given
func (o *UpdatePrivilege5BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update privilege5 bad request response
func (o *UpdatePrivilege5BadRequest) Code() int {
	return 400
}

func (o *UpdatePrivilege5BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] updatePrivilege5BadRequest", 400)
}

func (o *UpdatePrivilege5BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] updatePrivilege5BadRequest", 400)
}

func (o *UpdatePrivilege5BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePrivilege5Forbidden creates a UpdatePrivilege5Forbidden with default headers values
func NewUpdatePrivilege5Forbidden() *UpdatePrivilege5Forbidden {
	return &UpdatePrivilege5Forbidden{}
}

/*
UpdatePrivilege5Forbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type UpdatePrivilege5Forbidden struct {
}

// IsSuccess returns true when this update privilege5 forbidden response has a 2xx status code
func (o *UpdatePrivilege5Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update privilege5 forbidden response has a 3xx status code
func (o *UpdatePrivilege5Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update privilege5 forbidden response has a 4xx status code
func (o *UpdatePrivilege5Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update privilege5 forbidden response has a 5xx status code
func (o *UpdatePrivilege5Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update privilege5 forbidden response a status code equal to that given
func (o *UpdatePrivilege5Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update privilege5 forbidden response
func (o *UpdatePrivilege5Forbidden) Code() int {
	return 403
}

func (o *UpdatePrivilege5Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] updatePrivilege5Forbidden", 403)
}

func (o *UpdatePrivilege5Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] updatePrivilege5Forbidden", 403)
}

func (o *UpdatePrivilege5Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePrivilege5NotFound creates a UpdatePrivilege5NotFound with default headers values
func NewUpdatePrivilege5NotFound() *UpdatePrivilege5NotFound {
	return &UpdatePrivilege5NotFound{}
}

/*
UpdatePrivilege5NotFound describes a response with status code 404, with default header values.

Privilege not found in the system.
*/
type UpdatePrivilege5NotFound struct {
}

// IsSuccess returns true when this update privilege5 not found response has a 2xx status code
func (o *UpdatePrivilege5NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update privilege5 not found response has a 3xx status code
func (o *UpdatePrivilege5NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update privilege5 not found response has a 4xx status code
func (o *UpdatePrivilege5NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update privilege5 not found response has a 5xx status code
func (o *UpdatePrivilege5NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update privilege5 not found response a status code equal to that given
func (o *UpdatePrivilege5NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update privilege5 not found response
func (o *UpdatePrivilege5NotFound) Code() int {
	return 404
}

func (o *UpdatePrivilege5NotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] updatePrivilege5NotFound", 404)
}

func (o *UpdatePrivilege5NotFound) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] updatePrivilege5NotFound", 404)
}

func (o *UpdatePrivilege5NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
