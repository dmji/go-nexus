// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutSecurityPrivilegesScriptByPrivilegeNameReader is a Reader for the PutSecurityPrivilegesScriptByPrivilegeName structure.
type PutSecurityPrivilegesScriptByPrivilegeNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSecurityPrivilegesScriptByPrivilegeNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewPutSecurityPrivilegesScriptByPrivilegeNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutSecurityPrivilegesScriptByPrivilegeNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSecurityPrivilegesScriptByPrivilegeNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/security/privileges/script/{privilegeName}] PutSecurityPrivilegesScriptByPrivilegeName", response, response.Code())
	}
}

// NewPutSecurityPrivilegesScriptByPrivilegeNameBadRequest creates a PutSecurityPrivilegesScriptByPrivilegeNameBadRequest with default headers values
func NewPutSecurityPrivilegesScriptByPrivilegeNameBadRequest() *PutSecurityPrivilegesScriptByPrivilegeNameBadRequest {
	return &PutSecurityPrivilegesScriptByPrivilegeNameBadRequest{}
}

/*
PutSecurityPrivilegesScriptByPrivilegeNameBadRequest describes a response with status code 400, with default header values.

Privilege object not configured properly.
*/
type PutSecurityPrivilegesScriptByPrivilegeNameBadRequest struct {
}

// IsSuccess returns true when this put security privileges script by privilege name bad request response has a 2xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges script by privilege name bad request response has a 3xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges script by privilege name bad request response has a 4xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges script by privilege name bad request response has a 5xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges script by privilege name bad request response a status code equal to that given
func (o *PutSecurityPrivilegesScriptByPrivilegeNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put security privileges script by privilege name bad request response
func (o *PutSecurityPrivilegesScriptByPrivilegeNameBadRequest) Code() int {
	return 400
}

func (o *PutSecurityPrivilegesScriptByPrivilegeNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegeNameBadRequest", 400)
}

func (o *PutSecurityPrivilegesScriptByPrivilegeNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegeNameBadRequest", 400)
}

func (o *PutSecurityPrivilegesScriptByPrivilegeNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesScriptByPrivilegeNameForbidden creates a PutSecurityPrivilegesScriptByPrivilegeNameForbidden with default headers values
func NewPutSecurityPrivilegesScriptByPrivilegeNameForbidden() *PutSecurityPrivilegesScriptByPrivilegeNameForbidden {
	return &PutSecurityPrivilegesScriptByPrivilegeNameForbidden{}
}

/*
PutSecurityPrivilegesScriptByPrivilegeNameForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type PutSecurityPrivilegesScriptByPrivilegeNameForbidden struct {
}

// IsSuccess returns true when this put security privileges script by privilege name forbidden response has a 2xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges script by privilege name forbidden response has a 3xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges script by privilege name forbidden response has a 4xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges script by privilege name forbidden response has a 5xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges script by privilege name forbidden response a status code equal to that given
func (o *PutSecurityPrivilegesScriptByPrivilegeNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put security privileges script by privilege name forbidden response
func (o *PutSecurityPrivilegesScriptByPrivilegeNameForbidden) Code() int {
	return 403
}

func (o *PutSecurityPrivilegesScriptByPrivilegeNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegeNameForbidden", 403)
}

func (o *PutSecurityPrivilegesScriptByPrivilegeNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegeNameForbidden", 403)
}

func (o *PutSecurityPrivilegesScriptByPrivilegeNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesScriptByPrivilegeNameNotFound creates a PutSecurityPrivilegesScriptByPrivilegeNameNotFound with default headers values
func NewPutSecurityPrivilegesScriptByPrivilegeNameNotFound() *PutSecurityPrivilegesScriptByPrivilegeNameNotFound {
	return &PutSecurityPrivilegesScriptByPrivilegeNameNotFound{}
}

/*
PutSecurityPrivilegesScriptByPrivilegeNameNotFound describes a response with status code 404, with default header values.

Privilege not found in the system.
*/
type PutSecurityPrivilegesScriptByPrivilegeNameNotFound struct {
}

// IsSuccess returns true when this put security privileges script by privilege name not found response has a 2xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges script by privilege name not found response has a 3xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges script by privilege name not found response has a 4xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges script by privilege name not found response has a 5xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegeNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges script by privilege name not found response a status code equal to that given
func (o *PutSecurityPrivilegesScriptByPrivilegeNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put security privileges script by privilege name not found response
func (o *PutSecurityPrivilegesScriptByPrivilegeNameNotFound) Code() int {
	return 404
}

func (o *PutSecurityPrivilegesScriptByPrivilegeNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegeNameNotFound", 404)
}

func (o *PutSecurityPrivilegesScriptByPrivilegeNameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegeNameNotFound", 404)
}

func (o *PutSecurityPrivilegesScriptByPrivilegeNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
