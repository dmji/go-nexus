// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutSecurityPrivilegesApplicationByPrivilegeNameReader is a Reader for the PutSecurityPrivilegesApplicationByPrivilegeName structure.
type PutSecurityPrivilegesApplicationByPrivilegeNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewPutSecurityPrivilegesApplicationByPrivilegeNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutSecurityPrivilegesApplicationByPrivilegeNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSecurityPrivilegesApplicationByPrivilegeNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/security/privileges/application/{privilegeName}] PutSecurityPrivilegesApplicationByPrivilegeName", response, response.Code())
	}
}

// NewPutSecurityPrivilegesApplicationByPrivilegeNameBadRequest creates a PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest with default headers values
func NewPutSecurityPrivilegesApplicationByPrivilegeNameBadRequest() *PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest {
	return &PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest{}
}

/*
PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest describes a response with status code 400, with default header values.

Privilege object not configured properly.
*/
type PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest struct {
}

// IsSuccess returns true when this put security privileges application by privilege name bad request response has a 2xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges application by privilege name bad request response has a 3xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges application by privilege name bad request response has a 4xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges application by privilege name bad request response has a 5xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges application by privilege name bad request response a status code equal to that given
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put security privileges application by privilege name bad request response
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest) Code() int {
	return 400
}

func (o *PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/application/{privilegeName}][%d] putSecurityPrivilegesApplicationByPrivilegeNameBadRequest", 400)
}

func (o *PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/application/{privilegeName}][%d] putSecurityPrivilegesApplicationByPrivilegeNameBadRequest", 400)
}

func (o *PutSecurityPrivilegesApplicationByPrivilegeNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesApplicationByPrivilegeNameForbidden creates a PutSecurityPrivilegesApplicationByPrivilegeNameForbidden with default headers values
func NewPutSecurityPrivilegesApplicationByPrivilegeNameForbidden() *PutSecurityPrivilegesApplicationByPrivilegeNameForbidden {
	return &PutSecurityPrivilegesApplicationByPrivilegeNameForbidden{}
}

/*
PutSecurityPrivilegesApplicationByPrivilegeNameForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type PutSecurityPrivilegesApplicationByPrivilegeNameForbidden struct {
}

// IsSuccess returns true when this put security privileges application by privilege name forbidden response has a 2xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges application by privilege name forbidden response has a 3xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges application by privilege name forbidden response has a 4xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges application by privilege name forbidden response has a 5xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges application by privilege name forbidden response a status code equal to that given
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put security privileges application by privilege name forbidden response
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameForbidden) Code() int {
	return 403
}

func (o *PutSecurityPrivilegesApplicationByPrivilegeNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/application/{privilegeName}][%d] putSecurityPrivilegesApplicationByPrivilegeNameForbidden", 403)
}

func (o *PutSecurityPrivilegesApplicationByPrivilegeNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/application/{privilegeName}][%d] putSecurityPrivilegesApplicationByPrivilegeNameForbidden", 403)
}

func (o *PutSecurityPrivilegesApplicationByPrivilegeNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesApplicationByPrivilegeNameNotFound creates a PutSecurityPrivilegesApplicationByPrivilegeNameNotFound with default headers values
func NewPutSecurityPrivilegesApplicationByPrivilegeNameNotFound() *PutSecurityPrivilegesApplicationByPrivilegeNameNotFound {
	return &PutSecurityPrivilegesApplicationByPrivilegeNameNotFound{}
}

/*
PutSecurityPrivilegesApplicationByPrivilegeNameNotFound describes a response with status code 404, with default header values.

Privilege not found in the system.
*/
type PutSecurityPrivilegesApplicationByPrivilegeNameNotFound struct {
}

// IsSuccess returns true when this put security privileges application by privilege name not found response has a 2xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges application by privilege name not found response has a 3xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges application by privilege name not found response has a 4xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges application by privilege name not found response has a 5xx status code
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges application by privilege name not found response a status code equal to that given
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put security privileges application by privilege name not found response
func (o *PutSecurityPrivilegesApplicationByPrivilegeNameNotFound) Code() int {
	return 404
}

func (o *PutSecurityPrivilegesApplicationByPrivilegeNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/application/{privilegeName}][%d] putSecurityPrivilegesApplicationByPrivilegeNameNotFound", 404)
}

func (o *PutSecurityPrivilegesApplicationByPrivilegeNameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/application/{privilegeName}][%d] putSecurityPrivilegesApplicationByPrivilegeNameNotFound", 404)
}

func (o *PutSecurityPrivilegesApplicationByPrivilegeNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
