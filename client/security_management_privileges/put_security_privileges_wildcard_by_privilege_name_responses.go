// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutSecurityPrivilegesWildcardByPrivilegeNameReader is a Reader for the PutSecurityPrivilegesWildcardByPrivilegeName structure.
type PutSecurityPrivilegesWildcardByPrivilegeNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewPutSecurityPrivilegesWildcardByPrivilegeNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutSecurityPrivilegesWildcardByPrivilegeNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSecurityPrivilegesWildcardByPrivilegeNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/security/privileges/wildcard/{privilegeName}] PutSecurityPrivilegesWildcardByPrivilegeName", response, response.Code())
	}
}

// NewPutSecurityPrivilegesWildcardByPrivilegeNameBadRequest creates a PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest with default headers values
func NewPutSecurityPrivilegesWildcardByPrivilegeNameBadRequest() *PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest {
	return &PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest{}
}

/*
PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest describes a response with status code 400, with default header values.

Privilege object not configured properly.
*/
type PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest struct {
}

// IsSuccess returns true when this put security privileges wildcard by privilege name bad request response has a 2xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges wildcard by privilege name bad request response has a 3xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges wildcard by privilege name bad request response has a 4xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges wildcard by privilege name bad request response has a 5xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges wildcard by privilege name bad request response a status code equal to that given
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put security privileges wildcard by privilege name bad request response
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest) Code() int {
	return 400
}

func (o *PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegeNameBadRequest", 400)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegeNameBadRequest", 400)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegeNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesWildcardByPrivilegeNameForbidden creates a PutSecurityPrivilegesWildcardByPrivilegeNameForbidden with default headers values
func NewPutSecurityPrivilegesWildcardByPrivilegeNameForbidden() *PutSecurityPrivilegesWildcardByPrivilegeNameForbidden {
	return &PutSecurityPrivilegesWildcardByPrivilegeNameForbidden{}
}

/*
PutSecurityPrivilegesWildcardByPrivilegeNameForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type PutSecurityPrivilegesWildcardByPrivilegeNameForbidden struct {
}

// IsSuccess returns true when this put security privileges wildcard by privilege name forbidden response has a 2xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges wildcard by privilege name forbidden response has a 3xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges wildcard by privilege name forbidden response has a 4xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges wildcard by privilege name forbidden response has a 5xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges wildcard by privilege name forbidden response a status code equal to that given
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put security privileges wildcard by privilege name forbidden response
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameForbidden) Code() int {
	return 403
}

func (o *PutSecurityPrivilegesWildcardByPrivilegeNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegeNameForbidden", 403)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegeNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegeNameForbidden", 403)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegeNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesWildcardByPrivilegeNameNotFound creates a PutSecurityPrivilegesWildcardByPrivilegeNameNotFound with default headers values
func NewPutSecurityPrivilegesWildcardByPrivilegeNameNotFound() *PutSecurityPrivilegesWildcardByPrivilegeNameNotFound {
	return &PutSecurityPrivilegesWildcardByPrivilegeNameNotFound{}
}

/*
PutSecurityPrivilegesWildcardByPrivilegeNameNotFound describes a response with status code 404, with default header values.

Privilege not found in the system.
*/
type PutSecurityPrivilegesWildcardByPrivilegeNameNotFound struct {
}

// IsSuccess returns true when this put security privileges wildcard by privilege name not found response has a 2xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges wildcard by privilege name not found response has a 3xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges wildcard by privilege name not found response has a 4xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges wildcard by privilege name not found response has a 5xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges wildcard by privilege name not found response a status code equal to that given
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put security privileges wildcard by privilege name not found response
func (o *PutSecurityPrivilegesWildcardByPrivilegeNameNotFound) Code() int {
	return 404
}

func (o *PutSecurityPrivilegesWildcardByPrivilegeNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegeNameNotFound", 404)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegeNameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegeNameNotFound", 404)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegeNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
