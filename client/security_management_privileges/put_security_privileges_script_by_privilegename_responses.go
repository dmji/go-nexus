// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutSecurityPrivilegesScriptByPrivilegenameReader is a Reader for the PutSecurityPrivilegesScriptByPrivilegename structure.
type PutSecurityPrivilegesScriptByPrivilegenameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSecurityPrivilegesScriptByPrivilegenameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewPutSecurityPrivilegesScriptByPrivilegenameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutSecurityPrivilegesScriptByPrivilegenameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSecurityPrivilegesScriptByPrivilegenameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/security/privileges/script/{privilegeName}] PutSecurityPrivilegesScriptByPrivilegename", response, response.Code())
	}
}

// NewPutSecurityPrivilegesScriptByPrivilegenameBadRequest creates a PutSecurityPrivilegesScriptByPrivilegenameBadRequest with default headers values
func NewPutSecurityPrivilegesScriptByPrivilegenameBadRequest() *PutSecurityPrivilegesScriptByPrivilegenameBadRequest {
	return &PutSecurityPrivilegesScriptByPrivilegenameBadRequest{}
}

/*
PutSecurityPrivilegesScriptByPrivilegenameBadRequest describes a response with status code 400, with default header values.

Privilege object not configured properly.
*/
type PutSecurityPrivilegesScriptByPrivilegenameBadRequest struct {
}

// IsSuccess returns true when this put security privileges script by privilegename bad request response has a 2xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges script by privilegename bad request response has a 3xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges script by privilegename bad request response has a 4xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges script by privilegename bad request response has a 5xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges script by privilegename bad request response a status code equal to that given
func (o *PutSecurityPrivilegesScriptByPrivilegenameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put security privileges script by privilegename bad request response
func (o *PutSecurityPrivilegesScriptByPrivilegenameBadRequest) Code() int {
	return 400
}

func (o *PutSecurityPrivilegesScriptByPrivilegenameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegenameBadRequest", 400)
}

func (o *PutSecurityPrivilegesScriptByPrivilegenameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegenameBadRequest", 400)
}

func (o *PutSecurityPrivilegesScriptByPrivilegenameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesScriptByPrivilegenameForbidden creates a PutSecurityPrivilegesScriptByPrivilegenameForbidden with default headers values
func NewPutSecurityPrivilegesScriptByPrivilegenameForbidden() *PutSecurityPrivilegesScriptByPrivilegenameForbidden {
	return &PutSecurityPrivilegesScriptByPrivilegenameForbidden{}
}

/*
PutSecurityPrivilegesScriptByPrivilegenameForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type PutSecurityPrivilegesScriptByPrivilegenameForbidden struct {
}

// IsSuccess returns true when this put security privileges script by privilegename forbidden response has a 2xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges script by privilegename forbidden response has a 3xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges script by privilegename forbidden response has a 4xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges script by privilegename forbidden response has a 5xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges script by privilegename forbidden response a status code equal to that given
func (o *PutSecurityPrivilegesScriptByPrivilegenameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put security privileges script by privilegename forbidden response
func (o *PutSecurityPrivilegesScriptByPrivilegenameForbidden) Code() int {
	return 403
}

func (o *PutSecurityPrivilegesScriptByPrivilegenameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegenameForbidden", 403)
}

func (o *PutSecurityPrivilegesScriptByPrivilegenameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegenameForbidden", 403)
}

func (o *PutSecurityPrivilegesScriptByPrivilegenameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesScriptByPrivilegenameNotFound creates a PutSecurityPrivilegesScriptByPrivilegenameNotFound with default headers values
func NewPutSecurityPrivilegesScriptByPrivilegenameNotFound() *PutSecurityPrivilegesScriptByPrivilegenameNotFound {
	return &PutSecurityPrivilegesScriptByPrivilegenameNotFound{}
}

/*
PutSecurityPrivilegesScriptByPrivilegenameNotFound describes a response with status code 404, with default header values.

Privilege not found in the system.
*/
type PutSecurityPrivilegesScriptByPrivilegenameNotFound struct {
}

// IsSuccess returns true when this put security privileges script by privilegename not found response has a 2xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges script by privilegename not found response has a 3xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges script by privilegename not found response has a 4xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges script by privilegename not found response has a 5xx status code
func (o *PutSecurityPrivilegesScriptByPrivilegenameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges script by privilegename not found response a status code equal to that given
func (o *PutSecurityPrivilegesScriptByPrivilegenameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put security privileges script by privilegename not found response
func (o *PutSecurityPrivilegesScriptByPrivilegenameNotFound) Code() int {
	return 404
}

func (o *PutSecurityPrivilegesScriptByPrivilegenameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegenameNotFound", 404)
}

func (o *PutSecurityPrivilegesScriptByPrivilegenameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/script/{privilegeName}][%d] putSecurityPrivilegesScriptByPrivilegenameNotFound", 404)
}

func (o *PutSecurityPrivilegesScriptByPrivilegenameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
