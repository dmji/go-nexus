// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// GetSecurityPrivilegesByPrivilegenameReader is a Reader for the GetSecurityPrivilegesByPrivilegename structure.
type GetSecurityPrivilegesByPrivilegenameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecurityPrivilegesByPrivilegenameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSecurityPrivilegesByPrivilegenameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetSecurityPrivilegesByPrivilegenameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSecurityPrivilegesByPrivilegenameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/security/privileges/{privilegeName}] GetSecurityPrivilegesByPrivilegename", response, response.Code())
	}
}

// NewGetSecurityPrivilegesByPrivilegenameOK creates a GetSecurityPrivilegesByPrivilegenameOK with default headers values
func NewGetSecurityPrivilegesByPrivilegenameOK() *GetSecurityPrivilegesByPrivilegenameOK {
	return &GetSecurityPrivilegesByPrivilegenameOK{}
}

/*
GetSecurityPrivilegesByPrivilegenameOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSecurityPrivilegesByPrivilegenameOK struct {
	Payload *models.APIPrivilege
}

// IsSuccess returns true when this get security privileges by privilegename o k response has a 2xx status code
func (o *GetSecurityPrivilegesByPrivilegenameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get security privileges by privilegename o k response has a 3xx status code
func (o *GetSecurityPrivilegesByPrivilegenameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security privileges by privilegename o k response has a 4xx status code
func (o *GetSecurityPrivilegesByPrivilegenameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get security privileges by privilegename o k response has a 5xx status code
func (o *GetSecurityPrivilegesByPrivilegenameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get security privileges by privilegename o k response a status code equal to that given
func (o *GetSecurityPrivilegesByPrivilegenameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get security privileges by privilegename o k response
func (o *GetSecurityPrivilegesByPrivilegenameOK) Code() int {
	return 200
}

func (o *GetSecurityPrivilegesByPrivilegenameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegenameOK %s", 200, payload)
}

func (o *GetSecurityPrivilegesByPrivilegenameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegenameOK %s", 200, payload)
}

func (o *GetSecurityPrivilegesByPrivilegenameOK) GetPayload() *models.APIPrivilege {
	return o.Payload
}

func (o *GetSecurityPrivilegesByPrivilegenameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIPrivilege)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityPrivilegesByPrivilegenameForbidden creates a GetSecurityPrivilegesByPrivilegenameForbidden with default headers values
func NewGetSecurityPrivilegesByPrivilegenameForbidden() *GetSecurityPrivilegesByPrivilegenameForbidden {
	return &GetSecurityPrivilegesByPrivilegenameForbidden{}
}

/*
GetSecurityPrivilegesByPrivilegenameForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type GetSecurityPrivilegesByPrivilegenameForbidden struct {
}

// IsSuccess returns true when this get security privileges by privilegename forbidden response has a 2xx status code
func (o *GetSecurityPrivilegesByPrivilegenameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security privileges by privilegename forbidden response has a 3xx status code
func (o *GetSecurityPrivilegesByPrivilegenameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security privileges by privilegename forbidden response has a 4xx status code
func (o *GetSecurityPrivilegesByPrivilegenameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security privileges by privilegename forbidden response has a 5xx status code
func (o *GetSecurityPrivilegesByPrivilegenameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get security privileges by privilegename forbidden response a status code equal to that given
func (o *GetSecurityPrivilegesByPrivilegenameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get security privileges by privilegename forbidden response
func (o *GetSecurityPrivilegesByPrivilegenameForbidden) Code() int {
	return 403
}

func (o *GetSecurityPrivilegesByPrivilegenameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegenameForbidden", 403)
}

func (o *GetSecurityPrivilegesByPrivilegenameForbidden) String() string {
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegenameForbidden", 403)
}

func (o *GetSecurityPrivilegesByPrivilegenameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecurityPrivilegesByPrivilegenameNotFound creates a GetSecurityPrivilegesByPrivilegenameNotFound with default headers values
func NewGetSecurityPrivilegesByPrivilegenameNotFound() *GetSecurityPrivilegesByPrivilegenameNotFound {
	return &GetSecurityPrivilegesByPrivilegenameNotFound{}
}

/*
GetSecurityPrivilegesByPrivilegenameNotFound describes a response with status code 404, with default header values.

Privilege not found in the system.
*/
type GetSecurityPrivilegesByPrivilegenameNotFound struct {
}

// IsSuccess returns true when this get security privileges by privilegename not found response has a 2xx status code
func (o *GetSecurityPrivilegesByPrivilegenameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security privileges by privilegename not found response has a 3xx status code
func (o *GetSecurityPrivilegesByPrivilegenameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security privileges by privilegename not found response has a 4xx status code
func (o *GetSecurityPrivilegesByPrivilegenameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security privileges by privilegename not found response has a 5xx status code
func (o *GetSecurityPrivilegesByPrivilegenameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get security privileges by privilegename not found response a status code equal to that given
func (o *GetSecurityPrivilegesByPrivilegenameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get security privileges by privilegename not found response
func (o *GetSecurityPrivilegesByPrivilegenameNotFound) Code() int {
	return 404
}

func (o *GetSecurityPrivilegesByPrivilegenameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegenameNotFound", 404)
}

func (o *GetSecurityPrivilegesByPrivilegenameNotFound) String() string {
	return fmt.Sprintf("[GET /v1/security/privileges/{privilegeName}][%d] getSecurityPrivilegesByPrivilegenameNotFound", 404)
}

func (o *GetSecurityPrivilegesByPrivilegenameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
