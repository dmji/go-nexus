// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutSecurityPrivilegesWildcardByPrivilegenameReader is a Reader for the PutSecurityPrivilegesWildcardByPrivilegename structure.
type PutSecurityPrivilegesWildcardByPrivilegenameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSecurityPrivilegesWildcardByPrivilegenameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewPutSecurityPrivilegesWildcardByPrivilegenameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutSecurityPrivilegesWildcardByPrivilegenameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSecurityPrivilegesWildcardByPrivilegenameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/security/privileges/wildcard/{privilegeName}] PutSecurityPrivilegesWildcardByPrivilegename", response, response.Code())
	}
}

// NewPutSecurityPrivilegesWildcardByPrivilegenameBadRequest creates a PutSecurityPrivilegesWildcardByPrivilegenameBadRequest with default headers values
func NewPutSecurityPrivilegesWildcardByPrivilegenameBadRequest() *PutSecurityPrivilegesWildcardByPrivilegenameBadRequest {
	return &PutSecurityPrivilegesWildcardByPrivilegenameBadRequest{}
}

/*
PutSecurityPrivilegesWildcardByPrivilegenameBadRequest describes a response with status code 400, with default header values.

Privilege object not configured properly.
*/
type PutSecurityPrivilegesWildcardByPrivilegenameBadRequest struct {
}

// IsSuccess returns true when this put security privileges wildcard by privilegename bad request response has a 2xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges wildcard by privilegename bad request response has a 3xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges wildcard by privilegename bad request response has a 4xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges wildcard by privilegename bad request response has a 5xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges wildcard by privilegename bad request response a status code equal to that given
func (o *PutSecurityPrivilegesWildcardByPrivilegenameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put security privileges wildcard by privilegename bad request response
func (o *PutSecurityPrivilegesWildcardByPrivilegenameBadRequest) Code() int {
	return 400
}

func (o *PutSecurityPrivilegesWildcardByPrivilegenameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegenameBadRequest", 400)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegenameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegenameBadRequest", 400)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegenameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesWildcardByPrivilegenameForbidden creates a PutSecurityPrivilegesWildcardByPrivilegenameForbidden with default headers values
func NewPutSecurityPrivilegesWildcardByPrivilegenameForbidden() *PutSecurityPrivilegesWildcardByPrivilegenameForbidden {
	return &PutSecurityPrivilegesWildcardByPrivilegenameForbidden{}
}

/*
PutSecurityPrivilegesWildcardByPrivilegenameForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type PutSecurityPrivilegesWildcardByPrivilegenameForbidden struct {
}

// IsSuccess returns true when this put security privileges wildcard by privilegename forbidden response has a 2xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges wildcard by privilegename forbidden response has a 3xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges wildcard by privilegename forbidden response has a 4xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges wildcard by privilegename forbidden response has a 5xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges wildcard by privilegename forbidden response a status code equal to that given
func (o *PutSecurityPrivilegesWildcardByPrivilegenameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put security privileges wildcard by privilegename forbidden response
func (o *PutSecurityPrivilegesWildcardByPrivilegenameForbidden) Code() int {
	return 403
}

func (o *PutSecurityPrivilegesWildcardByPrivilegenameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegenameForbidden", 403)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegenameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegenameForbidden", 403)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegenameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesWildcardByPrivilegenameNotFound creates a PutSecurityPrivilegesWildcardByPrivilegenameNotFound with default headers values
func NewPutSecurityPrivilegesWildcardByPrivilegenameNotFound() *PutSecurityPrivilegesWildcardByPrivilegenameNotFound {
	return &PutSecurityPrivilegesWildcardByPrivilegenameNotFound{}
}

/*
PutSecurityPrivilegesWildcardByPrivilegenameNotFound describes a response with status code 404, with default header values.

Privilege not found in the system.
*/
type PutSecurityPrivilegesWildcardByPrivilegenameNotFound struct {
}

// IsSuccess returns true when this put security privileges wildcard by privilegename not found response has a 2xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges wildcard by privilegename not found response has a 3xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges wildcard by privilegename not found response has a 4xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges wildcard by privilegename not found response has a 5xx status code
func (o *PutSecurityPrivilegesWildcardByPrivilegenameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges wildcard by privilegename not found response a status code equal to that given
func (o *PutSecurityPrivilegesWildcardByPrivilegenameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put security privileges wildcard by privilegename not found response
func (o *PutSecurityPrivilegesWildcardByPrivilegenameNotFound) Code() int {
	return 404
}

func (o *PutSecurityPrivilegesWildcardByPrivilegenameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegenameNotFound", 404)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegenameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/wildcard/{privilegeName}][%d] putSecurityPrivilegesWildcardByPrivilegenameNotFound", 404)
}

func (o *PutSecurityPrivilegesWildcardByPrivilegenameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
