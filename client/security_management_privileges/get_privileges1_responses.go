// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// GetPrivileges1Reader is a Reader for the GetPrivileges1 structure.
type GetPrivileges1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPrivileges1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPrivileges1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetPrivileges1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/security/privileges] getPrivileges_1", response, response.Code())
	}
}

// NewGetPrivileges1OK creates a GetPrivileges1OK with default headers values
func NewGetPrivileges1OK() *GetPrivileges1OK {
	return &GetPrivileges1OK{}
}

/*
GetPrivileges1OK describes a response with status code 200, with default header values.

successful operation
*/
type GetPrivileges1OK struct {
	Payload []*models.APIPrivilege
}

// IsSuccess returns true when this get privileges1 o k response has a 2xx status code
func (o *GetPrivileges1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get privileges1 o k response has a 3xx status code
func (o *GetPrivileges1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get privileges1 o k response has a 4xx status code
func (o *GetPrivileges1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get privileges1 o k response has a 5xx status code
func (o *GetPrivileges1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get privileges1 o k response a status code equal to that given
func (o *GetPrivileges1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get privileges1 o k response
func (o *GetPrivileges1OK) Code() int {
	return 200
}

func (o *GetPrivileges1OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/privileges][%d] getPrivileges1OK %s", 200, payload)
}

func (o *GetPrivileges1OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/privileges][%d] getPrivileges1OK %s", 200, payload)
}

func (o *GetPrivileges1OK) GetPayload() []*models.APIPrivilege {
	return o.Payload
}

func (o *GetPrivileges1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrivileges1Forbidden creates a GetPrivileges1Forbidden with default headers values
func NewGetPrivileges1Forbidden() *GetPrivileges1Forbidden {
	return &GetPrivileges1Forbidden{}
}

/*
GetPrivileges1Forbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type GetPrivileges1Forbidden struct {
}

// IsSuccess returns true when this get privileges1 forbidden response has a 2xx status code
func (o *GetPrivileges1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get privileges1 forbidden response has a 3xx status code
func (o *GetPrivileges1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get privileges1 forbidden response has a 4xx status code
func (o *GetPrivileges1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get privileges1 forbidden response has a 5xx status code
func (o *GetPrivileges1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get privileges1 forbidden response a status code equal to that given
func (o *GetPrivileges1Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get privileges1 forbidden response
func (o *GetPrivileges1Forbidden) Code() int {
	return 403
}

func (o *GetPrivileges1Forbidden) Error() string {
	return fmt.Sprintf("[GET /v1/security/privileges][%d] getPrivileges1Forbidden", 403)
}

func (o *GetPrivileges1Forbidden) String() string {
	return fmt.Sprintf("[GET /v1/security/privileges][%d] getPrivileges1Forbidden", 403)
}

func (o *GetPrivileges1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
