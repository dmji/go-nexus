// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutSecurityPrivilegesRepositoryAdminByPrivilegenameReader is a Reader for the PutSecurityPrivilegesRepositoryAdminByPrivilegename structure.
type PutSecurityPrivilegesRepositoryAdminByPrivilegenameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewPutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/security/privileges/repository-admin/{privilegeName}] PutSecurityPrivilegesRepositoryAdminByPrivilegename", response, response.Code())
	}
}

// NewPutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest creates a PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest with default headers values
func NewPutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest() *PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest {
	return &PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest{}
}

/*
PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest describes a response with status code 400, with default header values.

Privilege object not configured properly.
*/
type PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest struct {
}

// IsSuccess returns true when this put security privileges repository admin by privilegename bad request response has a 2xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges repository admin by privilegename bad request response has a 3xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges repository admin by privilegename bad request response has a 4xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges repository admin by privilegename bad request response has a 5xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges repository admin by privilegename bad request response a status code equal to that given
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put security privileges repository admin by privilegename bad request response
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest) Code() int {
	return 400
}

func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-admin/{privilegeName}][%d] putSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest", 400)
}

func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-admin/{privilegeName}][%d] putSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest", 400)
}

func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden creates a PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden with default headers values
func NewPutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden() *PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden {
	return &PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden{}
}

/*
PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden struct {
}

// IsSuccess returns true when this put security privileges repository admin by privilegename forbidden response has a 2xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges repository admin by privilegename forbidden response has a 3xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges repository admin by privilegename forbidden response has a 4xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges repository admin by privilegename forbidden response has a 5xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges repository admin by privilegename forbidden response a status code equal to that given
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put security privileges repository admin by privilegename forbidden response
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden) Code() int {
	return 403
}

func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-admin/{privilegeName}][%d] putSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden", 403)
}

func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-admin/{privilegeName}][%d] putSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden", 403)
}

func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound creates a PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound with default headers values
func NewPutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound() *PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound {
	return &PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound{}
}

/*
PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound describes a response with status code 404, with default header values.

Privilege not found in the system.
*/
type PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound struct {
}

// IsSuccess returns true when this put security privileges repository admin by privilegename not found response has a 2xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put security privileges repository admin by privilegename not found response has a 3xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put security privileges repository admin by privilegename not found response has a 4xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put security privileges repository admin by privilegename not found response has a 5xx status code
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put security privileges repository admin by privilegename not found response a status code equal to that given
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put security privileges repository admin by privilegename not found response
func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound) Code() int {
	return 404
}

func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-admin/{privilegeName}][%d] putSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound", 404)
}

func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/security/privileges/repository-admin/{privilegeName}][%d] putSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound", 404)
}

func (o *PutSecurityPrivilegesRepositoryAdminByPrivilegenameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
