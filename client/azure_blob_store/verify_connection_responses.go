// Code generated by go-swagger; DO NOT EDIT.

package azure_blob_store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// VerifyConnectionReader is a Reader for the VerifyConnection structure.
type VerifyConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VerifyConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewVerifyConnectionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewVerifyConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewVerifyConnectionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewVerifyConnectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/azureblobstore/test-connection] verifyConnection", response, response.Code())
	}
}

// NewVerifyConnectionNoContent creates a VerifyConnectionNoContent with default headers values
func NewVerifyConnectionNoContent() *VerifyConnectionNoContent {
	return &VerifyConnectionNoContent{}
}

/*
VerifyConnectionNoContent describes a response with status code 204, with default header values.

Azure Blob Store connection was successful
*/
type VerifyConnectionNoContent struct {
}

// IsSuccess returns true when this verify connection no content response has a 2xx status code
func (o *VerifyConnectionNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this verify connection no content response has a 3xx status code
func (o *VerifyConnectionNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this verify connection no content response has a 4xx status code
func (o *VerifyConnectionNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this verify connection no content response has a 5xx status code
func (o *VerifyConnectionNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this verify connection no content response a status code equal to that given
func (o *VerifyConnectionNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the verify connection no content response
func (o *VerifyConnectionNoContent) Code() int {
	return 204
}

func (o *VerifyConnectionNoContent) Error() string {
	return fmt.Sprintf("[POST /v1/azureblobstore/test-connection][%d] verifyConnectionNoContent", 204)
}

func (o *VerifyConnectionNoContent) String() string {
	return fmt.Sprintf("[POST /v1/azureblobstore/test-connection][%d] verifyConnectionNoContent", 204)
}

func (o *VerifyConnectionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVerifyConnectionBadRequest creates a VerifyConnectionBadRequest with default headers values
func NewVerifyConnectionBadRequest() *VerifyConnectionBadRequest {
	return &VerifyConnectionBadRequest{}
}

/*
VerifyConnectionBadRequest describes a response with status code 400, with default header values.

Azure Blob Store connection failed
*/
type VerifyConnectionBadRequest struct {
}

// IsSuccess returns true when this verify connection bad request response has a 2xx status code
func (o *VerifyConnectionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this verify connection bad request response has a 3xx status code
func (o *VerifyConnectionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this verify connection bad request response has a 4xx status code
func (o *VerifyConnectionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this verify connection bad request response has a 5xx status code
func (o *VerifyConnectionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this verify connection bad request response a status code equal to that given
func (o *VerifyConnectionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the verify connection bad request response
func (o *VerifyConnectionBadRequest) Code() int {
	return 400
}

func (o *VerifyConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/azureblobstore/test-connection][%d] verifyConnectionBadRequest", 400)
}

func (o *VerifyConnectionBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/azureblobstore/test-connection][%d] verifyConnectionBadRequest", 400)
}

func (o *VerifyConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVerifyConnectionUnauthorized creates a VerifyConnectionUnauthorized with default headers values
func NewVerifyConnectionUnauthorized() *VerifyConnectionUnauthorized {
	return &VerifyConnectionUnauthorized{}
}

/*
VerifyConnectionUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type VerifyConnectionUnauthorized struct {
}

// IsSuccess returns true when this verify connection unauthorized response has a 2xx status code
func (o *VerifyConnectionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this verify connection unauthorized response has a 3xx status code
func (o *VerifyConnectionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this verify connection unauthorized response has a 4xx status code
func (o *VerifyConnectionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this verify connection unauthorized response has a 5xx status code
func (o *VerifyConnectionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this verify connection unauthorized response a status code equal to that given
func (o *VerifyConnectionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the verify connection unauthorized response
func (o *VerifyConnectionUnauthorized) Code() int {
	return 401
}

func (o *VerifyConnectionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/azureblobstore/test-connection][%d] verifyConnectionUnauthorized", 401)
}

func (o *VerifyConnectionUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/azureblobstore/test-connection][%d] verifyConnectionUnauthorized", 401)
}

func (o *VerifyConnectionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVerifyConnectionForbidden creates a VerifyConnectionForbidden with default headers values
func NewVerifyConnectionForbidden() *VerifyConnectionForbidden {
	return &VerifyConnectionForbidden{}
}

/*
VerifyConnectionForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type VerifyConnectionForbidden struct {
}

// IsSuccess returns true when this verify connection forbidden response has a 2xx status code
func (o *VerifyConnectionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this verify connection forbidden response has a 3xx status code
func (o *VerifyConnectionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this verify connection forbidden response has a 4xx status code
func (o *VerifyConnectionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this verify connection forbidden response has a 5xx status code
func (o *VerifyConnectionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this verify connection forbidden response a status code equal to that given
func (o *VerifyConnectionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the verify connection forbidden response
func (o *VerifyConnectionForbidden) Code() int {
	return 403
}

func (o *VerifyConnectionForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/azureblobstore/test-connection][%d] verifyConnectionForbidden", 403)
}

func (o *VerifyConnectionForbidden) String() string {
	return fmt.Sprintf("[POST /v1/azureblobstore/test-connection][%d] verifyConnectionForbidden", 403)
}

func (o *VerifyConnectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
