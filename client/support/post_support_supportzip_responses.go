// Code generated by go-swagger; DO NOT EDIT.

package support

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostSupportSupportzipReader is a Reader for the PostSupportSupportzip structure.
type PostSupportSupportzipReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSupportSupportzipReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSupportSupportzipOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostSupportSupportzipForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/support/supportzip] PostSupportSupportzip", response, response.Code())
	}
}

// NewPostSupportSupportzipOK creates a PostSupportSupportzipOK with default headers values
func NewPostSupportSupportzipOK() *PostSupportSupportzipOK {
	return &PostSupportSupportzipOK{}
}

/*
PostSupportSupportzipOK describes a response with status code 200, with default header values.

successful operation
*/
type PostSupportSupportzipOK struct {
}

// IsSuccess returns true when this post support supportzip o k response has a 2xx status code
func (o *PostSupportSupportzipOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post support supportzip o k response has a 3xx status code
func (o *PostSupportSupportzipOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post support supportzip o k response has a 4xx status code
func (o *PostSupportSupportzipOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post support supportzip o k response has a 5xx status code
func (o *PostSupportSupportzipOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post support supportzip o k response a status code equal to that given
func (o *PostSupportSupportzipOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post support supportzip o k response
func (o *PostSupportSupportzipOK) Code() int {
	return 200
}

func (o *PostSupportSupportzipOK) Error() string {
	return fmt.Sprintf("[POST /v1/support/supportzip][%d] postSupportSupportzipOK", 200)
}

func (o *PostSupportSupportzipOK) String() string {
	return fmt.Sprintf("[POST /v1/support/supportzip][%d] postSupportSupportzipOK", 200)
}

func (o *PostSupportSupportzipOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSupportSupportzipForbidden creates a PostSupportSupportzipForbidden with default headers values
func NewPostSupportSupportzipForbidden() *PostSupportSupportzipForbidden {
	return &PostSupportSupportzipForbidden{}
}

/*
PostSupportSupportzipForbidden describes a response with status code 403, with default header values.

Insufficient permissions to generate support zip
*/
type PostSupportSupportzipForbidden struct {
}

// IsSuccess returns true when this post support supportzip forbidden response has a 2xx status code
func (o *PostSupportSupportzipForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post support supportzip forbidden response has a 3xx status code
func (o *PostSupportSupportzipForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post support supportzip forbidden response has a 4xx status code
func (o *PostSupportSupportzipForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post support supportzip forbidden response has a 5xx status code
func (o *PostSupportSupportzipForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post support supportzip forbidden response a status code equal to that given
func (o *PostSupportSupportzipForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post support supportzip forbidden response
func (o *PostSupportSupportzipForbidden) Code() int {
	return 403
}

func (o *PostSupportSupportzipForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/support/supportzip][%d] postSupportSupportzipForbidden", 403)
}

func (o *PostSupportSupportzipForbidden) String() string {
	return fmt.Sprintf("[POST /v1/support/supportzip][%d] postSupportSupportzipForbidden", 403)
}

func (o *PostSupportSupportzipForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
