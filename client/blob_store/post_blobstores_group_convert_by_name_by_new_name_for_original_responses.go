// Code generated by go-swagger; DO NOT EDIT.

package blob_store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// PostBlobstoresGroupConvertByNameByNewNameForOriginalReader is a Reader for the PostBlobstoresGroupConvertByNameByNewNameForOriginal structure.
type PostBlobstoresGroupConvertByNameByNewNameForOriginalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostBlobstoresGroupConvertByNameByNewNameForOriginalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}] PostBlobstoresGroupConvertByNameByNewNameForOriginal", response, response.Code())
	}
}

// NewPostBlobstoresGroupConvertByNameByNewNameForOriginalOK creates a PostBlobstoresGroupConvertByNameByNewNameForOriginalOK with default headers values
func NewPostBlobstoresGroupConvertByNameByNewNameForOriginalOK() *PostBlobstoresGroupConvertByNameByNewNameForOriginalOK {
	return &PostBlobstoresGroupConvertByNameByNewNameForOriginalOK{}
}

/*
PostBlobstoresGroupConvertByNameByNewNameForOriginalOK describes a response with status code 200, with default header values.

Success
*/
type PostBlobstoresGroupConvertByNameByNewNameForOriginalOK struct {
	Payload *models.GroupBlobStoreAPIModel
}

// IsSuccess returns true when this post blobstores group convert by name by new name for original o k response has a 2xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post blobstores group convert by name by new name for original o k response has a 3xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post blobstores group convert by name by new name for original o k response has a 4xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post blobstores group convert by name by new name for original o k response has a 5xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post blobstores group convert by name by new name for original o k response a status code equal to that given
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post blobstores group convert by name by new name for original o k response
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalOK) Code() int {
	return 200
}

func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewNameForOriginalOK %s", 200, payload)
}

func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewNameForOriginalOK %s", 200, payload)
}

func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalOK) GetPayload() *models.GroupBlobStoreAPIModel {
	return o.Payload
}

func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GroupBlobStoreAPIModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden creates a PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden with default headers values
func NewPostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden() *PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden {
	return &PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden{}
}

/*
PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden struct {
}

// IsSuccess returns true when this post blobstores group convert by name by new name for original forbidden response has a 2xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post blobstores group convert by name by new name for original forbidden response has a 3xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post blobstores group convert by name by new name for original forbidden response has a 4xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post blobstores group convert by name by new name for original forbidden response has a 5xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post blobstores group convert by name by new name for original forbidden response a status code equal to that given
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post blobstores group convert by name by new name for original forbidden response
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden) Code() int {
	return 403
}

func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewNameForOriginalForbidden", 403)
}

func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden) String() string {
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewNameForOriginalForbidden", 403)
}

func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound creates a PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound with default headers values
func NewPostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound() *PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound {
	return &PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound{}
}

/*
PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound describes a response with status code 404, with default header values.

Blob store not found
*/
type PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound struct {
}

// IsSuccess returns true when this post blobstores group convert by name by new name for original not found response has a 2xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post blobstores group convert by name by new name for original not found response has a 3xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post blobstores group convert by name by new name for original not found response has a 4xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post blobstores group convert by name by new name for original not found response has a 5xx status code
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post blobstores group convert by name by new name for original not found response a status code equal to that given
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post blobstores group convert by name by new name for original not found response
func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound) Code() int {
	return 404
}

func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewNameForOriginalNotFound", 404)
}

func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound) String() string {
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewNameForOriginalNotFound", 404)
}

func (o *PostBlobstoresGroupConvertByNameByNewNameForOriginalNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
