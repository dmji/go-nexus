// Code generated by go-swagger; DO NOT EDIT.

package blob_store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// PostBlobstoresGroupConvertByNameByNewnamefororiginalReader is a Reader for the PostBlobstoresGroupConvertByNameByNewnamefororiginal structure.
type PostBlobstoresGroupConvertByNameByNewnamefororiginalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostBlobstoresGroupConvertByNameByNewnamefororiginalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}] PostBlobstoresGroupConvertByNameByNewnamefororiginal", response, response.Code())
	}
}

// NewPostBlobstoresGroupConvertByNameByNewnamefororiginalOK creates a PostBlobstoresGroupConvertByNameByNewnamefororiginalOK with default headers values
func NewPostBlobstoresGroupConvertByNameByNewnamefororiginalOK() *PostBlobstoresGroupConvertByNameByNewnamefororiginalOK {
	return &PostBlobstoresGroupConvertByNameByNewnamefororiginalOK{}
}

/*
PostBlobstoresGroupConvertByNameByNewnamefororiginalOK describes a response with status code 200, with default header values.

Success
*/
type PostBlobstoresGroupConvertByNameByNewnamefororiginalOK struct {
	Payload *models.GroupBlobStoreAPIModel
}

// IsSuccess returns true when this post blobstores group convert by name by newnamefororiginal o k response has a 2xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post blobstores group convert by name by newnamefororiginal o k response has a 3xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post blobstores group convert by name by newnamefororiginal o k response has a 4xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post blobstores group convert by name by newnamefororiginal o k response has a 5xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post blobstores group convert by name by newnamefororiginal o k response a status code equal to that given
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post blobstores group convert by name by newnamefororiginal o k response
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalOK) Code() int {
	return 200
}

func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewnamefororiginalOK %s", 200, payload)
}

func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewnamefororiginalOK %s", 200, payload)
}

func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalOK) GetPayload() *models.GroupBlobStoreAPIModel {
	return o.Payload
}

func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GroupBlobStoreAPIModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden creates a PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden with default headers values
func NewPostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden() *PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden {
	return &PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden{}
}

/*
PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden struct {
}

// IsSuccess returns true when this post blobstores group convert by name by newnamefororiginal forbidden response has a 2xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post blobstores group convert by name by newnamefororiginal forbidden response has a 3xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post blobstores group convert by name by newnamefororiginal forbidden response has a 4xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post blobstores group convert by name by newnamefororiginal forbidden response has a 5xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post blobstores group convert by name by newnamefororiginal forbidden response a status code equal to that given
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post blobstores group convert by name by newnamefororiginal forbidden response
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden) Code() int {
	return 403
}

func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewnamefororiginalForbidden", 403)
}

func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden) String() string {
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewnamefororiginalForbidden", 403)
}

func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound creates a PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound with default headers values
func NewPostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound() *PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound {
	return &PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound{}
}

/*
PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound describes a response with status code 404, with default header values.

Blob store not found
*/
type PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound struct {
}

// IsSuccess returns true when this post blobstores group convert by name by newnamefororiginal not found response has a 2xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post blobstores group convert by name by newnamefororiginal not found response has a 3xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post blobstores group convert by name by newnamefororiginal not found response has a 4xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post blobstores group convert by name by newnamefororiginal not found response has a 5xx status code
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post blobstores group convert by name by newnamefororiginal not found response a status code equal to that given
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post blobstores group convert by name by newnamefororiginal not found response
func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound) Code() int {
	return 404
}

func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewnamefororiginalNotFound", 404)
}

func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound) String() string {
	return fmt.Sprintf("[POST /v1/blobstores/group/convert/{name}/{newNameForOriginal}][%d] postBlobstoresGroupConvertByNameByNewnamefororiginalNotFound", 404)
}

func (o *PostBlobstoresGroupConvertByNameByNewnamefororiginalNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
