// Code generated by go-swagger; DO NOT EDIT.

package blob_store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// GetGroupBlobStoreConfigurationReader is a Reader for the GetGroupBlobStoreConfiguration structure.
type GetGroupBlobStoreConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupBlobStoreConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupBlobStoreConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetGroupBlobStoreConfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupBlobStoreConfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/blobstores/group/{name}] getGroupBlobStoreConfiguration", response, response.Code())
	}
}

// NewGetGroupBlobStoreConfigurationOK creates a GetGroupBlobStoreConfigurationOK with default headers values
func NewGetGroupBlobStoreConfigurationOK() *GetGroupBlobStoreConfigurationOK {
	return &GetGroupBlobStoreConfigurationOK{}
}

/*
GetGroupBlobStoreConfigurationOK describes a response with status code 200, with default header values.

Success
*/
type GetGroupBlobStoreConfigurationOK struct {
	Payload *models.GroupBlobStoreAPIModel
}

// IsSuccess returns true when this get group blob store configuration o k response has a 2xx status code
func (o *GetGroupBlobStoreConfigurationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get group blob store configuration o k response has a 3xx status code
func (o *GetGroupBlobStoreConfigurationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group blob store configuration o k response has a 4xx status code
func (o *GetGroupBlobStoreConfigurationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group blob store configuration o k response has a 5xx status code
func (o *GetGroupBlobStoreConfigurationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get group blob store configuration o k response a status code equal to that given
func (o *GetGroupBlobStoreConfigurationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get group blob store configuration o k response
func (o *GetGroupBlobStoreConfigurationOK) Code() int {
	return 200
}

func (o *GetGroupBlobStoreConfigurationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getGroupBlobStoreConfigurationOK %s", 200, payload)
}

func (o *GetGroupBlobStoreConfigurationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getGroupBlobStoreConfigurationOK %s", 200, payload)
}

func (o *GetGroupBlobStoreConfigurationOK) GetPayload() *models.GroupBlobStoreAPIModel {
	return o.Payload
}

func (o *GetGroupBlobStoreConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GroupBlobStoreAPIModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupBlobStoreConfigurationForbidden creates a GetGroupBlobStoreConfigurationForbidden with default headers values
func NewGetGroupBlobStoreConfigurationForbidden() *GetGroupBlobStoreConfigurationForbidden {
	return &GetGroupBlobStoreConfigurationForbidden{}
}

/*
GetGroupBlobStoreConfigurationForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type GetGroupBlobStoreConfigurationForbidden struct {
}

// IsSuccess returns true when this get group blob store configuration forbidden response has a 2xx status code
func (o *GetGroupBlobStoreConfigurationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group blob store configuration forbidden response has a 3xx status code
func (o *GetGroupBlobStoreConfigurationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group blob store configuration forbidden response has a 4xx status code
func (o *GetGroupBlobStoreConfigurationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group blob store configuration forbidden response has a 5xx status code
func (o *GetGroupBlobStoreConfigurationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get group blob store configuration forbidden response a status code equal to that given
func (o *GetGroupBlobStoreConfigurationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get group blob store configuration forbidden response
func (o *GetGroupBlobStoreConfigurationForbidden) Code() int {
	return 403
}

func (o *GetGroupBlobStoreConfigurationForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getGroupBlobStoreConfigurationForbidden", 403)
}

func (o *GetGroupBlobStoreConfigurationForbidden) String() string {
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getGroupBlobStoreConfigurationForbidden", 403)
}

func (o *GetGroupBlobStoreConfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupBlobStoreConfigurationNotFound creates a GetGroupBlobStoreConfigurationNotFound with default headers values
func NewGetGroupBlobStoreConfigurationNotFound() *GetGroupBlobStoreConfigurationNotFound {
	return &GetGroupBlobStoreConfigurationNotFound{}
}

/*
GetGroupBlobStoreConfigurationNotFound describes a response with status code 404, with default header values.

Blob store not found
*/
type GetGroupBlobStoreConfigurationNotFound struct {
}

// IsSuccess returns true when this get group blob store configuration not found response has a 2xx status code
func (o *GetGroupBlobStoreConfigurationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group blob store configuration not found response has a 3xx status code
func (o *GetGroupBlobStoreConfigurationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group blob store configuration not found response has a 4xx status code
func (o *GetGroupBlobStoreConfigurationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group blob store configuration not found response has a 5xx status code
func (o *GetGroupBlobStoreConfigurationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get group blob store configuration not found response a status code equal to that given
func (o *GetGroupBlobStoreConfigurationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get group blob store configuration not found response
func (o *GetGroupBlobStoreConfigurationNotFound) Code() int {
	return 404
}

func (o *GetGroupBlobStoreConfigurationNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getGroupBlobStoreConfigurationNotFound", 404)
}

func (o *GetGroupBlobStoreConfigurationNotFound) String() string {
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getGroupBlobStoreConfigurationNotFound", 404)
}

func (o *GetGroupBlobStoreConfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
