// Code generated by go-swagger; DO NOT EDIT.

package blob_store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetRegionsByProjectIDReader is a Reader for the GetRegionsByProjectID structure.
type GetRegionsByProjectIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRegionsByProjectIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRegionsByProjectIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetRegionsByProjectIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRegionsByProjectIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRegionsByProjectIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/blobstores/google/regions/{projectId}] getRegionsByProjectId", response, response.Code())
	}
}

// NewGetRegionsByProjectIDOK creates a GetRegionsByProjectIDOK with default headers values
func NewGetRegionsByProjectIDOK() *GetRegionsByProjectIDOK {
	return &GetRegionsByProjectIDOK{}
}

/*
GetRegionsByProjectIDOK describes a response with status code 200, with default header values.

List of regions found
*/
type GetRegionsByProjectIDOK struct {
	Payload []string
}

// IsSuccess returns true when this get regions by project Id o k response has a 2xx status code
func (o *GetRegionsByProjectIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get regions by project Id o k response has a 3xx status code
func (o *GetRegionsByProjectIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get regions by project Id o k response has a 4xx status code
func (o *GetRegionsByProjectIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get regions by project Id o k response has a 5xx status code
func (o *GetRegionsByProjectIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get regions by project Id o k response a status code equal to that given
func (o *GetRegionsByProjectIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get regions by project Id o k response
func (o *GetRegionsByProjectIDOK) Code() int {
	return 200
}

func (o *GetRegionsByProjectIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/blobstores/google/regions/{projectId}][%d] getRegionsByProjectIdOK %s", 200, payload)
}

func (o *GetRegionsByProjectIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/blobstores/google/regions/{projectId}][%d] getRegionsByProjectIdOK %s", 200, payload)
}

func (o *GetRegionsByProjectIDOK) GetPayload() []string {
	return o.Payload
}

func (o *GetRegionsByProjectIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegionsByProjectIDUnauthorized creates a GetRegionsByProjectIDUnauthorized with default headers values
func NewGetRegionsByProjectIDUnauthorized() *GetRegionsByProjectIDUnauthorized {
	return &GetRegionsByProjectIDUnauthorized{}
}

/*
GetRegionsByProjectIDUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type GetRegionsByProjectIDUnauthorized struct {
}

// IsSuccess returns true when this get regions by project Id unauthorized response has a 2xx status code
func (o *GetRegionsByProjectIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get regions by project Id unauthorized response has a 3xx status code
func (o *GetRegionsByProjectIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get regions by project Id unauthorized response has a 4xx status code
func (o *GetRegionsByProjectIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get regions by project Id unauthorized response has a 5xx status code
func (o *GetRegionsByProjectIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get regions by project Id unauthorized response a status code equal to that given
func (o *GetRegionsByProjectIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get regions by project Id unauthorized response
func (o *GetRegionsByProjectIDUnauthorized) Code() int {
	return 401
}

func (o *GetRegionsByProjectIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/blobstores/google/regions/{projectId}][%d] getRegionsByProjectIdUnauthorized", 401)
}

func (o *GetRegionsByProjectIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/blobstores/google/regions/{projectId}][%d] getRegionsByProjectIdUnauthorized", 401)
}

func (o *GetRegionsByProjectIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegionsByProjectIDForbidden creates a GetRegionsByProjectIDForbidden with default headers values
func NewGetRegionsByProjectIDForbidden() *GetRegionsByProjectIDForbidden {
	return &GetRegionsByProjectIDForbidden{}
}

/*
GetRegionsByProjectIDForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type GetRegionsByProjectIDForbidden struct {
}

// IsSuccess returns true when this get regions by project Id forbidden response has a 2xx status code
func (o *GetRegionsByProjectIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get regions by project Id forbidden response has a 3xx status code
func (o *GetRegionsByProjectIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get regions by project Id forbidden response has a 4xx status code
func (o *GetRegionsByProjectIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get regions by project Id forbidden response has a 5xx status code
func (o *GetRegionsByProjectIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get regions by project Id forbidden response a status code equal to that given
func (o *GetRegionsByProjectIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get regions by project Id forbidden response
func (o *GetRegionsByProjectIDForbidden) Code() int {
	return 403
}

func (o *GetRegionsByProjectIDForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/blobstores/google/regions/{projectId}][%d] getRegionsByProjectIdForbidden", 403)
}

func (o *GetRegionsByProjectIDForbidden) String() string {
	return fmt.Sprintf("[GET /v1/blobstores/google/regions/{projectId}][%d] getRegionsByProjectIdForbidden", 403)
}

func (o *GetRegionsByProjectIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegionsByProjectIDNotFound creates a GetRegionsByProjectIDNotFound with default headers values
func NewGetRegionsByProjectIDNotFound() *GetRegionsByProjectIDNotFound {
	return &GetRegionsByProjectIDNotFound{}
}

/*
GetRegionsByProjectIDNotFound describes a response with status code 404, with default header values.

Project not found
*/
type GetRegionsByProjectIDNotFound struct {
}

// IsSuccess returns true when this get regions by project Id not found response has a 2xx status code
func (o *GetRegionsByProjectIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get regions by project Id not found response has a 3xx status code
func (o *GetRegionsByProjectIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get regions by project Id not found response has a 4xx status code
func (o *GetRegionsByProjectIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get regions by project Id not found response has a 5xx status code
func (o *GetRegionsByProjectIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get regions by project Id not found response a status code equal to that given
func (o *GetRegionsByProjectIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get regions by project Id not found response
func (o *GetRegionsByProjectIDNotFound) Code() int {
	return 404
}

func (o *GetRegionsByProjectIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/blobstores/google/regions/{projectId}][%d] getRegionsByProjectIdNotFound", 404)
}

func (o *GetRegionsByProjectIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/blobstores/google/regions/{projectId}][%d] getRegionsByProjectIdNotFound", 404)
}

func (o *GetRegionsByProjectIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
