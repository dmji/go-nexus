// Code generated by go-swagger; DO NOT EDIT.

package blob_store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// GetBlobstoresGroupByNameReader is a Reader for the GetBlobstoresGroupByName structure.
type GetBlobstoresGroupByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBlobstoresGroupByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBlobstoresGroupByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetBlobstoresGroupByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBlobstoresGroupByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/blobstores/group/{name}] GetBlobstoresGroupByName", response, response.Code())
	}
}

// NewGetBlobstoresGroupByNameOK creates a GetBlobstoresGroupByNameOK with default headers values
func NewGetBlobstoresGroupByNameOK() *GetBlobstoresGroupByNameOK {
	return &GetBlobstoresGroupByNameOK{}
}

/*
GetBlobstoresGroupByNameOK describes a response with status code 200, with default header values.

Success
*/
type GetBlobstoresGroupByNameOK struct {
	Payload *models.GroupBlobStoreAPIModel
}

// IsSuccess returns true when this get blobstores group by name o k response has a 2xx status code
func (o *GetBlobstoresGroupByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get blobstores group by name o k response has a 3xx status code
func (o *GetBlobstoresGroupByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get blobstores group by name o k response has a 4xx status code
func (o *GetBlobstoresGroupByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get blobstores group by name o k response has a 5xx status code
func (o *GetBlobstoresGroupByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get blobstores group by name o k response a status code equal to that given
func (o *GetBlobstoresGroupByNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get blobstores group by name o k response
func (o *GetBlobstoresGroupByNameOK) Code() int {
	return 200
}

func (o *GetBlobstoresGroupByNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getBlobstoresGroupByNameOK %s", 200, payload)
}

func (o *GetBlobstoresGroupByNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getBlobstoresGroupByNameOK %s", 200, payload)
}

func (o *GetBlobstoresGroupByNameOK) GetPayload() *models.GroupBlobStoreAPIModel {
	return o.Payload
}

func (o *GetBlobstoresGroupByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GroupBlobStoreAPIModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBlobstoresGroupByNameForbidden creates a GetBlobstoresGroupByNameForbidden with default headers values
func NewGetBlobstoresGroupByNameForbidden() *GetBlobstoresGroupByNameForbidden {
	return &GetBlobstoresGroupByNameForbidden{}
}

/*
GetBlobstoresGroupByNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type GetBlobstoresGroupByNameForbidden struct {
}

// IsSuccess returns true when this get blobstores group by name forbidden response has a 2xx status code
func (o *GetBlobstoresGroupByNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get blobstores group by name forbidden response has a 3xx status code
func (o *GetBlobstoresGroupByNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get blobstores group by name forbidden response has a 4xx status code
func (o *GetBlobstoresGroupByNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get blobstores group by name forbidden response has a 5xx status code
func (o *GetBlobstoresGroupByNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get blobstores group by name forbidden response a status code equal to that given
func (o *GetBlobstoresGroupByNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get blobstores group by name forbidden response
func (o *GetBlobstoresGroupByNameForbidden) Code() int {
	return 403
}

func (o *GetBlobstoresGroupByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getBlobstoresGroupByNameForbidden", 403)
}

func (o *GetBlobstoresGroupByNameForbidden) String() string {
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getBlobstoresGroupByNameForbidden", 403)
}

func (o *GetBlobstoresGroupByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBlobstoresGroupByNameNotFound creates a GetBlobstoresGroupByNameNotFound with default headers values
func NewGetBlobstoresGroupByNameNotFound() *GetBlobstoresGroupByNameNotFound {
	return &GetBlobstoresGroupByNameNotFound{}
}

/*
GetBlobstoresGroupByNameNotFound describes a response with status code 404, with default header values.

Blob store not found
*/
type GetBlobstoresGroupByNameNotFound struct {
}

// IsSuccess returns true when this get blobstores group by name not found response has a 2xx status code
func (o *GetBlobstoresGroupByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get blobstores group by name not found response has a 3xx status code
func (o *GetBlobstoresGroupByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get blobstores group by name not found response has a 4xx status code
func (o *GetBlobstoresGroupByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get blobstores group by name not found response has a 5xx status code
func (o *GetBlobstoresGroupByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get blobstores group by name not found response a status code equal to that given
func (o *GetBlobstoresGroupByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get blobstores group by name not found response
func (o *GetBlobstoresGroupByNameNotFound) Code() int {
	return 404
}

func (o *GetBlobstoresGroupByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getBlobstoresGroupByNameNotFound", 404)
}

func (o *GetBlobstoresGroupByNameNotFound) String() string {
	return fmt.Sprintf("[GET /v1/blobstores/group/{name}][%d] getBlobstoresGroupByNameNotFound", 404)
}

func (o *GetBlobstoresGroupByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
