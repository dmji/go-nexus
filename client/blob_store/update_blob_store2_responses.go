// Code generated by go-swagger; DO NOT EDIT.

package blob_store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateBlobStore2Reader is a Reader for the UpdateBlobStore2 structure.
type UpdateBlobStore2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBlobStore2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateBlobStore2NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateBlobStore2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBlobStore2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBlobStore2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/blobstores/google/{name}] updateBlobStore_2", response, response.Code())
	}
}

// NewUpdateBlobStore2NoContent creates a UpdateBlobStore2NoContent with default headers values
func NewUpdateBlobStore2NoContent() *UpdateBlobStore2NoContent {
	return &UpdateBlobStore2NoContent{}
}

/*
UpdateBlobStore2NoContent describes a response with status code 204, with default header values.

Google Cloud blob store updated
*/
type UpdateBlobStore2NoContent struct {
}

// IsSuccess returns true when this update blob store2 no content response has a 2xx status code
func (o *UpdateBlobStore2NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update blob store2 no content response has a 3xx status code
func (o *UpdateBlobStore2NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update blob store2 no content response has a 4xx status code
func (o *UpdateBlobStore2NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update blob store2 no content response has a 5xx status code
func (o *UpdateBlobStore2NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update blob store2 no content response a status code equal to that given
func (o *UpdateBlobStore2NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update blob store2 no content response
func (o *UpdateBlobStore2NoContent) Code() int {
	return 204
}

func (o *UpdateBlobStore2NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/blobstores/google/{name}][%d] updateBlobStore2NoContent", 204)
}

func (o *UpdateBlobStore2NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/blobstores/google/{name}][%d] updateBlobStore2NoContent", 204)
}

func (o *UpdateBlobStore2NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBlobStore2Unauthorized creates a UpdateBlobStore2Unauthorized with default headers values
func NewUpdateBlobStore2Unauthorized() *UpdateBlobStore2Unauthorized {
	return &UpdateBlobStore2Unauthorized{}
}

/*
UpdateBlobStore2Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateBlobStore2Unauthorized struct {
}

// IsSuccess returns true when this update blob store2 unauthorized response has a 2xx status code
func (o *UpdateBlobStore2Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update blob store2 unauthorized response has a 3xx status code
func (o *UpdateBlobStore2Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update blob store2 unauthorized response has a 4xx status code
func (o *UpdateBlobStore2Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update blob store2 unauthorized response has a 5xx status code
func (o *UpdateBlobStore2Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update blob store2 unauthorized response a status code equal to that given
func (o *UpdateBlobStore2Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update blob store2 unauthorized response
func (o *UpdateBlobStore2Unauthorized) Code() int {
	return 401
}

func (o *UpdateBlobStore2Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/blobstores/google/{name}][%d] updateBlobStore2Unauthorized", 401)
}

func (o *UpdateBlobStore2Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/blobstores/google/{name}][%d] updateBlobStore2Unauthorized", 401)
}

func (o *UpdateBlobStore2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBlobStore2Forbidden creates a UpdateBlobStore2Forbidden with default headers values
func NewUpdateBlobStore2Forbidden() *UpdateBlobStore2Forbidden {
	return &UpdateBlobStore2Forbidden{}
}

/*
UpdateBlobStore2Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateBlobStore2Forbidden struct {
}

// IsSuccess returns true when this update blob store2 forbidden response has a 2xx status code
func (o *UpdateBlobStore2Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update blob store2 forbidden response has a 3xx status code
func (o *UpdateBlobStore2Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update blob store2 forbidden response has a 4xx status code
func (o *UpdateBlobStore2Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update blob store2 forbidden response has a 5xx status code
func (o *UpdateBlobStore2Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update blob store2 forbidden response a status code equal to that given
func (o *UpdateBlobStore2Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update blob store2 forbidden response
func (o *UpdateBlobStore2Forbidden) Code() int {
	return 403
}

func (o *UpdateBlobStore2Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/blobstores/google/{name}][%d] updateBlobStore2Forbidden", 403)
}

func (o *UpdateBlobStore2Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/blobstores/google/{name}][%d] updateBlobStore2Forbidden", 403)
}

func (o *UpdateBlobStore2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBlobStore2NotFound creates a UpdateBlobStore2NotFound with default headers values
func NewUpdateBlobStore2NotFound() *UpdateBlobStore2NotFound {
	return &UpdateBlobStore2NotFound{}
}

/*
UpdateBlobStore2NotFound describes a response with status code 404, with default header values.

Repository not found
*/
type UpdateBlobStore2NotFound struct {
}

// IsSuccess returns true when this update blob store2 not found response has a 2xx status code
func (o *UpdateBlobStore2NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update blob store2 not found response has a 3xx status code
func (o *UpdateBlobStore2NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update blob store2 not found response has a 4xx status code
func (o *UpdateBlobStore2NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update blob store2 not found response has a 5xx status code
func (o *UpdateBlobStore2NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update blob store2 not found response a status code equal to that given
func (o *UpdateBlobStore2NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update blob store2 not found response
func (o *UpdateBlobStore2NotFound) Code() int {
	return 404
}

func (o *UpdateBlobStore2NotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/blobstores/google/{name}][%d] updateBlobStore2NotFound", 404)
}

func (o *UpdateBlobStore2NotFound) String() string {
	return fmt.Sprintf("[PUT /v1/blobstores/google/{name}][%d] updateBlobStore2NotFound", 404)
}

func (o *UpdateBlobStore2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
