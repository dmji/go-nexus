// Code generated by go-swagger; DO NOT EDIT.

package security_certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// GetSecuritySslTruststoreReader is a Reader for the GetSecuritySslTruststore structure.
type GetSecuritySslTruststoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecuritySslTruststoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSecuritySslTruststoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetSecuritySslTruststoreForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/security/ssl/truststore] GetSecuritySslTruststore", response, response.Code())
	}
}

// NewGetSecuritySslTruststoreOK creates a GetSecuritySslTruststoreOK with default headers values
func NewGetSecuritySslTruststoreOK() *GetSecuritySslTruststoreOK {
	return &GetSecuritySslTruststoreOK{}
}

/*
GetSecuritySslTruststoreOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSecuritySslTruststoreOK struct {
	Payload []*models.APICertificate
}

// IsSuccess returns true when this get security ssl truststore o k response has a 2xx status code
func (o *GetSecuritySslTruststoreOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get security ssl truststore o k response has a 3xx status code
func (o *GetSecuritySslTruststoreOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security ssl truststore o k response has a 4xx status code
func (o *GetSecuritySslTruststoreOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get security ssl truststore o k response has a 5xx status code
func (o *GetSecuritySslTruststoreOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get security ssl truststore o k response a status code equal to that given
func (o *GetSecuritySslTruststoreOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get security ssl truststore o k response
func (o *GetSecuritySslTruststoreOK) Code() int {
	return 200
}

func (o *GetSecuritySslTruststoreOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/ssl/truststore][%d] getSecuritySslTruststoreOK %s", 200, payload)
}

func (o *GetSecuritySslTruststoreOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/ssl/truststore][%d] getSecuritySslTruststoreOK %s", 200, payload)
}

func (o *GetSecuritySslTruststoreOK) GetPayload() []*models.APICertificate {
	return o.Payload
}

func (o *GetSecuritySslTruststoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecuritySslTruststoreForbidden creates a GetSecuritySslTruststoreForbidden with default headers values
func NewGetSecuritySslTruststoreForbidden() *GetSecuritySslTruststoreForbidden {
	return &GetSecuritySslTruststoreForbidden{}
}

/*
GetSecuritySslTruststoreForbidden describes a response with status code 403, with default header values.

Insufficient permissions to list certificates in the trust store.
*/
type GetSecuritySslTruststoreForbidden struct {
}

// IsSuccess returns true when this get security ssl truststore forbidden response has a 2xx status code
func (o *GetSecuritySslTruststoreForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security ssl truststore forbidden response has a 3xx status code
func (o *GetSecuritySslTruststoreForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security ssl truststore forbidden response has a 4xx status code
func (o *GetSecuritySslTruststoreForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security ssl truststore forbidden response has a 5xx status code
func (o *GetSecuritySslTruststoreForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get security ssl truststore forbidden response a status code equal to that given
func (o *GetSecuritySslTruststoreForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get security ssl truststore forbidden response
func (o *GetSecuritySslTruststoreForbidden) Code() int {
	return 403
}

func (o *GetSecuritySslTruststoreForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/security/ssl/truststore][%d] getSecuritySslTruststoreForbidden", 403)
}

func (o *GetSecuritySslTruststoreForbidden) String() string {
	return fmt.Sprintf("[GET /v1/security/ssl/truststore][%d] getSecuritySslTruststoreForbidden", 403)
}

func (o *GetSecuritySslTruststoreForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
