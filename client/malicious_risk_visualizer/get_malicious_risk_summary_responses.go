// Code generated by go-swagger; DO NOT EDIT.

package malicious_risk_visualizer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetMaliciousRiskSummaryReader is a Reader for the GetMaliciousRiskSummary structure.
type GetMaliciousRiskSummaryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMaliciousRiskSummaryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMaliciousRiskSummaryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMaliciousRiskSummaryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMaliciousRiskSummaryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/malicious-risk/summary] getMaliciousRiskSummary", response, response.Code())
	}
}

// NewGetMaliciousRiskSummaryOK creates a GetMaliciousRiskSummaryOK with default headers values
func NewGetMaliciousRiskSummaryOK() *GetMaliciousRiskSummaryOK {
	return &GetMaliciousRiskSummaryOK{}
}

/*
GetMaliciousRiskSummaryOK describes a response with status code 200, with default header values.

Malicious Risk Summary returned
*/
type GetMaliciousRiskSummaryOK struct {
}

// IsSuccess returns true when this get malicious risk summary o k response has a 2xx status code
func (o *GetMaliciousRiskSummaryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get malicious risk summary o k response has a 3xx status code
func (o *GetMaliciousRiskSummaryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get malicious risk summary o k response has a 4xx status code
func (o *GetMaliciousRiskSummaryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get malicious risk summary o k response has a 5xx status code
func (o *GetMaliciousRiskSummaryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get malicious risk summary o k response a status code equal to that given
func (o *GetMaliciousRiskSummaryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get malicious risk summary o k response
func (o *GetMaliciousRiskSummaryOK) Code() int {
	return 200
}

func (o *GetMaliciousRiskSummaryOK) Error() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/summary][%d] getMaliciousRiskSummaryOK", 200)
}

func (o *GetMaliciousRiskSummaryOK) String() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/summary][%d] getMaliciousRiskSummaryOK", 200)
}

func (o *GetMaliciousRiskSummaryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMaliciousRiskSummaryUnauthorized creates a GetMaliciousRiskSummaryUnauthorized with default headers values
func NewGetMaliciousRiskSummaryUnauthorized() *GetMaliciousRiskSummaryUnauthorized {
	return &GetMaliciousRiskSummaryUnauthorized{}
}

/*
GetMaliciousRiskSummaryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type GetMaliciousRiskSummaryUnauthorized struct {
}

// IsSuccess returns true when this get malicious risk summary unauthorized response has a 2xx status code
func (o *GetMaliciousRiskSummaryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get malicious risk summary unauthorized response has a 3xx status code
func (o *GetMaliciousRiskSummaryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get malicious risk summary unauthorized response has a 4xx status code
func (o *GetMaliciousRiskSummaryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get malicious risk summary unauthorized response has a 5xx status code
func (o *GetMaliciousRiskSummaryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get malicious risk summary unauthorized response a status code equal to that given
func (o *GetMaliciousRiskSummaryUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get malicious risk summary unauthorized response
func (o *GetMaliciousRiskSummaryUnauthorized) Code() int {
	return 401
}

func (o *GetMaliciousRiskSummaryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/summary][%d] getMaliciousRiskSummaryUnauthorized", 401)
}

func (o *GetMaliciousRiskSummaryUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/summary][%d] getMaliciousRiskSummaryUnauthorized", 401)
}

func (o *GetMaliciousRiskSummaryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMaliciousRiskSummaryForbidden creates a GetMaliciousRiskSummaryForbidden with default headers values
func NewGetMaliciousRiskSummaryForbidden() *GetMaliciousRiskSummaryForbidden {
	return &GetMaliciousRiskSummaryForbidden{}
}

/*
GetMaliciousRiskSummaryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type GetMaliciousRiskSummaryForbidden struct {
}

// IsSuccess returns true when this get malicious risk summary forbidden response has a 2xx status code
func (o *GetMaliciousRiskSummaryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get malicious risk summary forbidden response has a 3xx status code
func (o *GetMaliciousRiskSummaryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get malicious risk summary forbidden response has a 4xx status code
func (o *GetMaliciousRiskSummaryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get malicious risk summary forbidden response has a 5xx status code
func (o *GetMaliciousRiskSummaryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get malicious risk summary forbidden response a status code equal to that given
func (o *GetMaliciousRiskSummaryForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get malicious risk summary forbidden response
func (o *GetMaliciousRiskSummaryForbidden) Code() int {
	return 403
}

func (o *GetMaliciousRiskSummaryForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/summary][%d] getMaliciousRiskSummaryForbidden", 403)
}

func (o *GetMaliciousRiskSummaryForbidden) String() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/summary][%d] getMaliciousRiskSummaryForbidden", 403)
}

func (o *GetMaliciousRiskSummaryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
