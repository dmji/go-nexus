// Code generated by go-swagger; DO NOT EDIT.

package security_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// GetSecurityUserSourcesReader is a Reader for the GetSecurityUserSources structure.
type GetSecurityUserSourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecurityUserSourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSecurityUserSourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetSecurityUserSourcesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/security/user-sources] GetSecurityUserSources", response, response.Code())
	}
}

// NewGetSecurityUserSourcesOK creates a GetSecurityUserSourcesOK with default headers values
func NewGetSecurityUserSourcesOK() *GetSecurityUserSourcesOK {
	return &GetSecurityUserSourcesOK{}
}

/*
GetSecurityUserSourcesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSecurityUserSourcesOK struct {
	Payload []*models.APIUserSource
}

// IsSuccess returns true when this get security user sources o k response has a 2xx status code
func (o *GetSecurityUserSourcesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get security user sources o k response has a 3xx status code
func (o *GetSecurityUserSourcesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security user sources o k response has a 4xx status code
func (o *GetSecurityUserSourcesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get security user sources o k response has a 5xx status code
func (o *GetSecurityUserSourcesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get security user sources o k response a status code equal to that given
func (o *GetSecurityUserSourcesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get security user sources o k response
func (o *GetSecurityUserSourcesOK) Code() int {
	return 200
}

func (o *GetSecurityUserSourcesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/user-sources][%d] getSecurityUserSourcesOK %s", 200, payload)
}

func (o *GetSecurityUserSourcesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/security/user-sources][%d] getSecurityUserSourcesOK %s", 200, payload)
}

func (o *GetSecurityUserSourcesOK) GetPayload() []*models.APIUserSource {
	return o.Payload
}

func (o *GetSecurityUserSourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityUserSourcesForbidden creates a GetSecurityUserSourcesForbidden with default headers values
func NewGetSecurityUserSourcesForbidden() *GetSecurityUserSourcesForbidden {
	return &GetSecurityUserSourcesForbidden{}
}

/*
GetSecurityUserSourcesForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type GetSecurityUserSourcesForbidden struct {
}

// IsSuccess returns true when this get security user sources forbidden response has a 2xx status code
func (o *GetSecurityUserSourcesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get security user sources forbidden response has a 3xx status code
func (o *GetSecurityUserSourcesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get security user sources forbidden response has a 4xx status code
func (o *GetSecurityUserSourcesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get security user sources forbidden response has a 5xx status code
func (o *GetSecurityUserSourcesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get security user sources forbidden response a status code equal to that given
func (o *GetSecurityUserSourcesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get security user sources forbidden response
func (o *GetSecurityUserSourcesForbidden) Code() int {
	return 403
}

func (o *GetSecurityUserSourcesForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/security/user-sources][%d] getSecurityUserSourcesForbidden", 403)
}

func (o *GetSecurityUserSourcesForbidden) String() string {
	return fmt.Sprintf("[GET /v1/security/user-sources][%d] getSecurityUserSourcesForbidden", 403)
}

func (o *GetSecurityUserSourcesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
