// Code generated by go-swagger; DO NOT EDIT.

package script

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutScriptByNameReader is a Reader for the PutScriptByName structure.
type PutScriptByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutScriptByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutScriptByNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPutScriptByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPutScriptByNameGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/script/{name}] PutScriptByName", response, response.Code())
	}
}

// NewPutScriptByNameNoContent creates a PutScriptByNameNoContent with default headers values
func NewPutScriptByNameNoContent() *PutScriptByNameNoContent {
	return &PutScriptByNameNoContent{}
}

/*
PutScriptByNameNoContent describes a response with status code 204, with default header values.

Script was updated
*/
type PutScriptByNameNoContent struct {
}

// IsSuccess returns true when this put script by name no content response has a 2xx status code
func (o *PutScriptByNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put script by name no content response has a 3xx status code
func (o *PutScriptByNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put script by name no content response has a 4xx status code
func (o *PutScriptByNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put script by name no content response has a 5xx status code
func (o *PutScriptByNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put script by name no content response a status code equal to that given
func (o *PutScriptByNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put script by name no content response
func (o *PutScriptByNameNoContent) Code() int {
	return 204
}

func (o *PutScriptByNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/script/{name}][%d] putScriptByNameNoContent", 204)
}

func (o *PutScriptByNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/script/{name}][%d] putScriptByNameNoContent", 204)
}

func (o *PutScriptByNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutScriptByNameNotFound creates a PutScriptByNameNotFound with default headers values
func NewPutScriptByNameNotFound() *PutScriptByNameNotFound {
	return &PutScriptByNameNotFound{}
}

/*
PutScriptByNameNotFound describes a response with status code 404, with default header values.

No script with the specified name
*/
type PutScriptByNameNotFound struct {
}

// IsSuccess returns true when this put script by name not found response has a 2xx status code
func (o *PutScriptByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put script by name not found response has a 3xx status code
func (o *PutScriptByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put script by name not found response has a 4xx status code
func (o *PutScriptByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put script by name not found response has a 5xx status code
func (o *PutScriptByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put script by name not found response a status code equal to that given
func (o *PutScriptByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put script by name not found response
func (o *PutScriptByNameNotFound) Code() int {
	return 404
}

func (o *PutScriptByNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/script/{name}][%d] putScriptByNameNotFound", 404)
}

func (o *PutScriptByNameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/script/{name}][%d] putScriptByNameNotFound", 404)
}

func (o *PutScriptByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutScriptByNameGone creates a PutScriptByNameGone with default headers values
func NewPutScriptByNameGone() *PutScriptByNameGone {
	return &PutScriptByNameGone{}
}

/*
PutScriptByNameGone describes a response with status code 410, with default header values.

Script updating is disabled
*/
type PutScriptByNameGone struct {
}

// IsSuccess returns true when this put script by name gone response has a 2xx status code
func (o *PutScriptByNameGone) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put script by name gone response has a 3xx status code
func (o *PutScriptByNameGone) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put script by name gone response has a 4xx status code
func (o *PutScriptByNameGone) IsClientError() bool {
	return true
}

// IsServerError returns true when this put script by name gone response has a 5xx status code
func (o *PutScriptByNameGone) IsServerError() bool {
	return false
}

// IsCode returns true when this put script by name gone response a status code equal to that given
func (o *PutScriptByNameGone) IsCode(code int) bool {
	return code == 410
}

// Code gets the status code for the put script by name gone response
func (o *PutScriptByNameGone) Code() int {
	return 410
}

func (o *PutScriptByNameGone) Error() string {
	return fmt.Sprintf("[PUT /v1/script/{name}][%d] putScriptByNameGone", 410)
}

func (o *PutScriptByNameGone) String() string {
	return fmt.Sprintf("[PUT /v1/script/{name}][%d] putScriptByNameGone", 410)
}

func (o *PutScriptByNameGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
