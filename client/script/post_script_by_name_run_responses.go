// Code generated by go-swagger; DO NOT EDIT.

package script

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dmji/go-nexus/models"
)

// PostScriptByNameRunReader is a Reader for the PostScriptByNameRun structure.
type PostScriptByNameRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostScriptByNameRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostScriptByNameRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPostScriptByNameRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostScriptByNameRunInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/script/{name}/run] PostScriptByNameRun", response, response.Code())
	}
}

// NewPostScriptByNameRunOK creates a PostScriptByNameRunOK with default headers values
func NewPostScriptByNameRunOK() *PostScriptByNameRunOK {
	return &PostScriptByNameRunOK{}
}

/*
PostScriptByNameRunOK describes a response with status code 200, with default header values.

successful operation
*/
type PostScriptByNameRunOK struct {
	Payload *models.ScriptResultXO
}

// IsSuccess returns true when this post script by name run o k response has a 2xx status code
func (o *PostScriptByNameRunOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post script by name run o k response has a 3xx status code
func (o *PostScriptByNameRunOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script by name run o k response has a 4xx status code
func (o *PostScriptByNameRunOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post script by name run o k response has a 5xx status code
func (o *PostScriptByNameRunOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post script by name run o k response a status code equal to that given
func (o *PostScriptByNameRunOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post script by name run o k response
func (o *PostScriptByNameRunOK) Code() int {
	return 200
}

func (o *PostScriptByNameRunOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] postScriptByNameRunOK %s", 200, payload)
}

func (o *PostScriptByNameRunOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] postScriptByNameRunOK %s", 200, payload)
}

func (o *PostScriptByNameRunOK) GetPayload() *models.ScriptResultXO {
	return o.Payload
}

func (o *PostScriptByNameRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScriptResultXO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptByNameRunNotFound creates a PostScriptByNameRunNotFound with default headers values
func NewPostScriptByNameRunNotFound() *PostScriptByNameRunNotFound {
	return &PostScriptByNameRunNotFound{}
}

/*
PostScriptByNameRunNotFound describes a response with status code 404, with default header values.

No script with the specified name
*/
type PostScriptByNameRunNotFound struct {
}

// IsSuccess returns true when this post script by name run not found response has a 2xx status code
func (o *PostScriptByNameRunNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script by name run not found response has a 3xx status code
func (o *PostScriptByNameRunNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script by name run not found response has a 4xx status code
func (o *PostScriptByNameRunNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post script by name run not found response has a 5xx status code
func (o *PostScriptByNameRunNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post script by name run not found response a status code equal to that given
func (o *PostScriptByNameRunNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post script by name run not found response
func (o *PostScriptByNameRunNotFound) Code() int {
	return 404
}

func (o *PostScriptByNameRunNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] postScriptByNameRunNotFound", 404)
}

func (o *PostScriptByNameRunNotFound) String() string {
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] postScriptByNameRunNotFound", 404)
}

func (o *PostScriptByNameRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostScriptByNameRunInternalServerError creates a PostScriptByNameRunInternalServerError with default headers values
func NewPostScriptByNameRunInternalServerError() *PostScriptByNameRunInternalServerError {
	return &PostScriptByNameRunInternalServerError{}
}

/*
PostScriptByNameRunInternalServerError describes a response with status code 500, with default header values.

Script execution failed with exception
*/
type PostScriptByNameRunInternalServerError struct {
}

// IsSuccess returns true when this post script by name run internal server error response has a 2xx status code
func (o *PostScriptByNameRunInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script by name run internal server error response has a 3xx status code
func (o *PostScriptByNameRunInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script by name run internal server error response has a 4xx status code
func (o *PostScriptByNameRunInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post script by name run internal server error response has a 5xx status code
func (o *PostScriptByNameRunInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post script by name run internal server error response a status code equal to that given
func (o *PostScriptByNameRunInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post script by name run internal server error response
func (o *PostScriptByNameRunInternalServerError) Code() int {
	return 500
}

func (o *PostScriptByNameRunInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] postScriptByNameRunInternalServerError", 500)
}

func (o *PostScriptByNameRunInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] postScriptByNameRunInternalServerError", 500)
}

func (o *PostScriptByNameRunInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
