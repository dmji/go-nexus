// Code generated by go-swagger; DO NOT EDIT.

package script

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"nexus/models"
)

// Run1Reader is a Reader for the Run1 structure.
type Run1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *Run1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRun1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewRun1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRun1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/script/{name}/run] run_1", response, response.Code())
	}
}

// NewRun1OK creates a Run1OK with default headers values
func NewRun1OK() *Run1OK {
	return &Run1OK{}
}

/*
Run1OK describes a response with status code 200, with default header values.

successful operation
*/
type Run1OK struct {
	Payload *models.ScriptResultXO
}

// IsSuccess returns true when this run1 o k response has a 2xx status code
func (o *Run1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this run1 o k response has a 3xx status code
func (o *Run1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this run1 o k response has a 4xx status code
func (o *Run1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this run1 o k response has a 5xx status code
func (o *Run1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this run1 o k response a status code equal to that given
func (o *Run1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the run1 o k response
func (o *Run1OK) Code() int {
	return 200
}

func (o *Run1OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] run1OK %s", 200, payload)
}

func (o *Run1OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] run1OK %s", 200, payload)
}

func (o *Run1OK) GetPayload() *models.ScriptResultXO {
	return o.Payload
}

func (o *Run1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScriptResultXO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRun1NotFound creates a Run1NotFound with default headers values
func NewRun1NotFound() *Run1NotFound {
	return &Run1NotFound{}
}

/*
Run1NotFound describes a response with status code 404, with default header values.

No script with the specified name
*/
type Run1NotFound struct {
}

// IsSuccess returns true when this run1 not found response has a 2xx status code
func (o *Run1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this run1 not found response has a 3xx status code
func (o *Run1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this run1 not found response has a 4xx status code
func (o *Run1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this run1 not found response has a 5xx status code
func (o *Run1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this run1 not found response a status code equal to that given
func (o *Run1NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the run1 not found response
func (o *Run1NotFound) Code() int {
	return 404
}

func (o *Run1NotFound) Error() string {
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] run1NotFound", 404)
}

func (o *Run1NotFound) String() string {
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] run1NotFound", 404)
}

func (o *Run1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRun1InternalServerError creates a Run1InternalServerError with default headers values
func NewRun1InternalServerError() *Run1InternalServerError {
	return &Run1InternalServerError{}
}

/*
Run1InternalServerError describes a response with status code 500, with default header values.

Script execution failed with exception
*/
type Run1InternalServerError struct {
}

// IsSuccess returns true when this run1 internal server error response has a 2xx status code
func (o *Run1InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this run1 internal server error response has a 3xx status code
func (o *Run1InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this run1 internal server error response has a 4xx status code
func (o *Run1InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this run1 internal server error response has a 5xx status code
func (o *Run1InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this run1 internal server error response a status code equal to that given
func (o *Run1InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the run1 internal server error response
func (o *Run1InternalServerError) Code() int {
	return 500
}

func (o *Run1InternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] run1InternalServerError", 500)
}

func (o *Run1InternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/script/{name}/run][%d] run1InternalServerError", 500)
}

func (o *Run1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
