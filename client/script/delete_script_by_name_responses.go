// Code generated by go-swagger; DO NOT EDIT.

package script

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteScriptByNameReader is a Reader for the DeleteScriptByName structure.
type DeleteScriptByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteScriptByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteScriptByNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteScriptByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/script/{name}] DeleteScriptByName", response, response.Code())
	}
}

// NewDeleteScriptByNameNoContent creates a DeleteScriptByNameNoContent with default headers values
func NewDeleteScriptByNameNoContent() *DeleteScriptByNameNoContent {
	return &DeleteScriptByNameNoContent{}
}

/*
DeleteScriptByNameNoContent describes a response with status code 204, with default header values.

Script was deleted
*/
type DeleteScriptByNameNoContent struct {
}

// IsSuccess returns true when this delete script by name no content response has a 2xx status code
func (o *DeleteScriptByNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete script by name no content response has a 3xx status code
func (o *DeleteScriptByNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete script by name no content response has a 4xx status code
func (o *DeleteScriptByNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete script by name no content response has a 5xx status code
func (o *DeleteScriptByNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete script by name no content response a status code equal to that given
func (o *DeleteScriptByNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete script by name no content response
func (o *DeleteScriptByNameNoContent) Code() int {
	return 204
}

func (o *DeleteScriptByNameNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/script/{name}][%d] deleteScriptByNameNoContent", 204)
}

func (o *DeleteScriptByNameNoContent) String() string {
	return fmt.Sprintf("[DELETE /v1/script/{name}][%d] deleteScriptByNameNoContent", 204)
}

func (o *DeleteScriptByNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScriptByNameNotFound creates a DeleteScriptByNameNotFound with default headers values
func NewDeleteScriptByNameNotFound() *DeleteScriptByNameNotFound {
	return &DeleteScriptByNameNotFound{}
}

/*
DeleteScriptByNameNotFound describes a response with status code 404, with default header values.

No script with the specified name
*/
type DeleteScriptByNameNotFound struct {
}

// IsSuccess returns true when this delete script by name not found response has a 2xx status code
func (o *DeleteScriptByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete script by name not found response has a 3xx status code
func (o *DeleteScriptByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete script by name not found response has a 4xx status code
func (o *DeleteScriptByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete script by name not found response has a 5xx status code
func (o *DeleteScriptByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete script by name not found response a status code equal to that given
func (o *DeleteScriptByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete script by name not found response
func (o *DeleteScriptByNameNotFound) Code() int {
	return 404
}

func (o *DeleteScriptByNameNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/script/{name}][%d] deleteScriptByNameNotFound", 404)
}

func (o *DeleteScriptByNameNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/script/{name}][%d] deleteScriptByNameNotFound", 404)
}

func (o *DeleteScriptByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
