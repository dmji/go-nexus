// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesDockerGroupByRepositoryNameReader is a Reader for the PutRepositoriesDockerGroupByRepositoryName structure.
type PutRepositoriesDockerGroupByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesDockerGroupByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesDockerGroupByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesDockerGroupByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesDockerGroupByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesDockerGroupByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRepositoriesDockerGroupByRepositoryNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/docker/group/{repositoryName}] PutRepositoriesDockerGroupByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesDockerGroupByRepositoryNameNoContent creates a PutRepositoriesDockerGroupByRepositoryNameNoContent with default headers values
func NewPutRepositoriesDockerGroupByRepositoryNameNoContent() *PutRepositoriesDockerGroupByRepositoryNameNoContent {
	return &PutRepositoriesDockerGroupByRepositoryNameNoContent{}
}

/*
PutRepositoriesDockerGroupByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesDockerGroupByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories docker group by repository name no content response has a 2xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories docker group by repository name no content response has a 3xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker group by repository name no content response has a 4xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories docker group by repository name no content response has a 5xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker group by repository name no content response a status code equal to that given
func (o *PutRepositoriesDockerGroupByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories docker group by repository name no content response
func (o *PutRepositoriesDockerGroupByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesDockerGroupByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/group/{repositoryName}][%d] putRepositoriesDockerGroupByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesDockerGroupByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/group/{repositoryName}][%d] putRepositoriesDockerGroupByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesDockerGroupByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerGroupByRepositoryNameBadRequest creates a PutRepositoriesDockerGroupByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesDockerGroupByRepositoryNameBadRequest() *PutRepositoriesDockerGroupByRepositoryNameBadRequest {
	return &PutRepositoriesDockerGroupByRepositoryNameBadRequest{}
}

/*
PutRepositoriesDockerGroupByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesDockerGroupByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories docker group by repository name bad request response has a 2xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker group by repository name bad request response has a 3xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker group by repository name bad request response has a 4xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker group by repository name bad request response has a 5xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker group by repository name bad request response a status code equal to that given
func (o *PutRepositoriesDockerGroupByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories docker group by repository name bad request response
func (o *PutRepositoriesDockerGroupByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesDockerGroupByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/group/{repositoryName}][%d] putRepositoriesDockerGroupByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesDockerGroupByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/group/{repositoryName}][%d] putRepositoriesDockerGroupByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesDockerGroupByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerGroupByRepositoryNameUnauthorized creates a PutRepositoriesDockerGroupByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesDockerGroupByRepositoryNameUnauthorized() *PutRepositoriesDockerGroupByRepositoryNameUnauthorized {
	return &PutRepositoriesDockerGroupByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesDockerGroupByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesDockerGroupByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories docker group by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker group by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker group by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker group by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker group by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesDockerGroupByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories docker group by repository name unauthorized response
func (o *PutRepositoriesDockerGroupByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesDockerGroupByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/group/{repositoryName}][%d] putRepositoriesDockerGroupByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesDockerGroupByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/group/{repositoryName}][%d] putRepositoriesDockerGroupByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesDockerGroupByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerGroupByRepositoryNameForbidden creates a PutRepositoriesDockerGroupByRepositoryNameForbidden with default headers values
func NewPutRepositoriesDockerGroupByRepositoryNameForbidden() *PutRepositoriesDockerGroupByRepositoryNameForbidden {
	return &PutRepositoriesDockerGroupByRepositoryNameForbidden{}
}

/*
PutRepositoriesDockerGroupByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesDockerGroupByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories docker group by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker group by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker group by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker group by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker group by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesDockerGroupByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories docker group by repository name forbidden response
func (o *PutRepositoriesDockerGroupByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesDockerGroupByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/group/{repositoryName}][%d] putRepositoriesDockerGroupByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesDockerGroupByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/group/{repositoryName}][%d] putRepositoriesDockerGroupByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesDockerGroupByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerGroupByRepositoryNameNotFound creates a PutRepositoriesDockerGroupByRepositoryNameNotFound with default headers values
func NewPutRepositoriesDockerGroupByRepositoryNameNotFound() *PutRepositoriesDockerGroupByRepositoryNameNotFound {
	return &PutRepositoriesDockerGroupByRepositoryNameNotFound{}
}

/*
PutRepositoriesDockerGroupByRepositoryNameNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type PutRepositoriesDockerGroupByRepositoryNameNotFound struct {
}

// IsSuccess returns true when this put repositories docker group by repository name not found response has a 2xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker group by repository name not found response has a 3xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker group by repository name not found response has a 4xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker group by repository name not found response has a 5xx status code
func (o *PutRepositoriesDockerGroupByRepositoryNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker group by repository name not found response a status code equal to that given
func (o *PutRepositoriesDockerGroupByRepositoryNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put repositories docker group by repository name not found response
func (o *PutRepositoriesDockerGroupByRepositoryNameNotFound) Code() int {
	return 404
}

func (o *PutRepositoriesDockerGroupByRepositoryNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/group/{repositoryName}][%d] putRepositoriesDockerGroupByRepositoryNameNotFound", 404)
}

func (o *PutRepositoriesDockerGroupByRepositoryNameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/group/{repositoryName}][%d] putRepositoriesDockerGroupByRepositoryNameNotFound", 404)
}

func (o *PutRepositoriesDockerGroupByRepositoryNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
