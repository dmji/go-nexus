// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesMavenProxyByRepositoryNameReader is a Reader for the PutRepositoriesMavenProxyByRepositoryName structure.
type PutRepositoriesMavenProxyByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesMavenProxyByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesMavenProxyByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesMavenProxyByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesMavenProxyByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesMavenProxyByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/maven/proxy/{repositoryName}] PutRepositoriesMavenProxyByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesMavenProxyByRepositoryNameNoContent creates a PutRepositoriesMavenProxyByRepositoryNameNoContent with default headers values
func NewPutRepositoriesMavenProxyByRepositoryNameNoContent() *PutRepositoriesMavenProxyByRepositoryNameNoContent {
	return &PutRepositoriesMavenProxyByRepositoryNameNoContent{}
}

/*
PutRepositoriesMavenProxyByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesMavenProxyByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories maven proxy by repository name no content response has a 2xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories maven proxy by repository name no content response has a 3xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven proxy by repository name no content response has a 4xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories maven proxy by repository name no content response has a 5xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven proxy by repository name no content response a status code equal to that given
func (o *PutRepositoriesMavenProxyByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories maven proxy by repository name no content response
func (o *PutRepositoriesMavenProxyByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesMavenProxyByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/proxy/{repositoryName}][%d] putRepositoriesMavenProxyByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesMavenProxyByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/proxy/{repositoryName}][%d] putRepositoriesMavenProxyByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesMavenProxyByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenProxyByRepositoryNameBadRequest creates a PutRepositoriesMavenProxyByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesMavenProxyByRepositoryNameBadRequest() *PutRepositoriesMavenProxyByRepositoryNameBadRequest {
	return &PutRepositoriesMavenProxyByRepositoryNameBadRequest{}
}

/*
PutRepositoriesMavenProxyByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesMavenProxyByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories maven proxy by repository name bad request response has a 2xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven proxy by repository name bad request response has a 3xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven proxy by repository name bad request response has a 4xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven proxy by repository name bad request response has a 5xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven proxy by repository name bad request response a status code equal to that given
func (o *PutRepositoriesMavenProxyByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories maven proxy by repository name bad request response
func (o *PutRepositoriesMavenProxyByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesMavenProxyByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/proxy/{repositoryName}][%d] putRepositoriesMavenProxyByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesMavenProxyByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/proxy/{repositoryName}][%d] putRepositoriesMavenProxyByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesMavenProxyByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenProxyByRepositoryNameUnauthorized creates a PutRepositoriesMavenProxyByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesMavenProxyByRepositoryNameUnauthorized() *PutRepositoriesMavenProxyByRepositoryNameUnauthorized {
	return &PutRepositoriesMavenProxyByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesMavenProxyByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesMavenProxyByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories maven proxy by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven proxy by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven proxy by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven proxy by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven proxy by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesMavenProxyByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories maven proxy by repository name unauthorized response
func (o *PutRepositoriesMavenProxyByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesMavenProxyByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/proxy/{repositoryName}][%d] putRepositoriesMavenProxyByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesMavenProxyByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/proxy/{repositoryName}][%d] putRepositoriesMavenProxyByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesMavenProxyByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenProxyByRepositoryNameForbidden creates a PutRepositoriesMavenProxyByRepositoryNameForbidden with default headers values
func NewPutRepositoriesMavenProxyByRepositoryNameForbidden() *PutRepositoriesMavenProxyByRepositoryNameForbidden {
	return &PutRepositoriesMavenProxyByRepositoryNameForbidden{}
}

/*
PutRepositoriesMavenProxyByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesMavenProxyByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories maven proxy by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven proxy by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven proxy by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven proxy by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesMavenProxyByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven proxy by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesMavenProxyByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories maven proxy by repository name forbidden response
func (o *PutRepositoriesMavenProxyByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesMavenProxyByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/proxy/{repositoryName}][%d] putRepositoriesMavenProxyByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesMavenProxyByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/proxy/{repositoryName}][%d] putRepositoriesMavenProxyByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesMavenProxyByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
