// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostRepositoriesAptProxyReader is a Reader for the PostRepositoriesAptProxy structure.
type PostRepositoriesAptProxyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesAptProxyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostRepositoriesAptProxyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostRepositoriesAptProxyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRepositoriesAptProxyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostRepositoriesAptProxyMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/apt/proxy] PostRepositoriesAptProxy", response, response.Code())
	}
}

// NewPostRepositoriesAptProxyCreated creates a PostRepositoriesAptProxyCreated with default headers values
func NewPostRepositoriesAptProxyCreated() *PostRepositoriesAptProxyCreated {
	return &PostRepositoriesAptProxyCreated{}
}

/*
PostRepositoriesAptProxyCreated describes a response with status code 201, with default header values.

Repository created
*/
type PostRepositoriesAptProxyCreated struct {
}

// IsSuccess returns true when this post repositories apt proxy created response has a 2xx status code
func (o *PostRepositoriesAptProxyCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post repositories apt proxy created response has a 3xx status code
func (o *PostRepositoriesAptProxyCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories apt proxy created response has a 4xx status code
func (o *PostRepositoriesAptProxyCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post repositories apt proxy created response has a 5xx status code
func (o *PostRepositoriesAptProxyCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories apt proxy created response a status code equal to that given
func (o *PostRepositoriesAptProxyCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post repositories apt proxy created response
func (o *PostRepositoriesAptProxyCreated) Code() int {
	return 201
}

func (o *PostRepositoriesAptProxyCreated) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] postRepositoriesAptProxyCreated", 201)
}

func (o *PostRepositoriesAptProxyCreated) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] postRepositoriesAptProxyCreated", 201)
}

func (o *PostRepositoriesAptProxyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesAptProxyUnauthorized creates a PostRepositoriesAptProxyUnauthorized with default headers values
func NewPostRepositoriesAptProxyUnauthorized() *PostRepositoriesAptProxyUnauthorized {
	return &PostRepositoriesAptProxyUnauthorized{}
}

/*
PostRepositoriesAptProxyUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PostRepositoriesAptProxyUnauthorized struct {
}

// IsSuccess returns true when this post repositories apt proxy unauthorized response has a 2xx status code
func (o *PostRepositoriesAptProxyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories apt proxy unauthorized response has a 3xx status code
func (o *PostRepositoriesAptProxyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories apt proxy unauthorized response has a 4xx status code
func (o *PostRepositoriesAptProxyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories apt proxy unauthorized response has a 5xx status code
func (o *PostRepositoriesAptProxyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories apt proxy unauthorized response a status code equal to that given
func (o *PostRepositoriesAptProxyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post repositories apt proxy unauthorized response
func (o *PostRepositoriesAptProxyUnauthorized) Code() int {
	return 401
}

func (o *PostRepositoriesAptProxyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] postRepositoriesAptProxyUnauthorized", 401)
}

func (o *PostRepositoriesAptProxyUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] postRepositoriesAptProxyUnauthorized", 401)
}

func (o *PostRepositoriesAptProxyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesAptProxyForbidden creates a PostRepositoriesAptProxyForbidden with default headers values
func NewPostRepositoriesAptProxyForbidden() *PostRepositoriesAptProxyForbidden {
	return &PostRepositoriesAptProxyForbidden{}
}

/*
PostRepositoriesAptProxyForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PostRepositoriesAptProxyForbidden struct {
}

// IsSuccess returns true when this post repositories apt proxy forbidden response has a 2xx status code
func (o *PostRepositoriesAptProxyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories apt proxy forbidden response has a 3xx status code
func (o *PostRepositoriesAptProxyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories apt proxy forbidden response has a 4xx status code
func (o *PostRepositoriesAptProxyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories apt proxy forbidden response has a 5xx status code
func (o *PostRepositoriesAptProxyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories apt proxy forbidden response a status code equal to that given
func (o *PostRepositoriesAptProxyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post repositories apt proxy forbidden response
func (o *PostRepositoriesAptProxyForbidden) Code() int {
	return 403
}

func (o *PostRepositoriesAptProxyForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] postRepositoriesAptProxyForbidden", 403)
}

func (o *PostRepositoriesAptProxyForbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] postRepositoriesAptProxyForbidden", 403)
}

func (o *PostRepositoriesAptProxyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesAptProxyMethodNotAllowed creates a PostRepositoriesAptProxyMethodNotAllowed with default headers values
func NewPostRepositoriesAptProxyMethodNotAllowed() *PostRepositoriesAptProxyMethodNotAllowed {
	return &PostRepositoriesAptProxyMethodNotAllowed{}
}

/*
PostRepositoriesAptProxyMethodNotAllowed describes a response with status code 405, with default header values.

Feature is disabled in High Availability
*/
type PostRepositoriesAptProxyMethodNotAllowed struct {
}

// IsSuccess returns true when this post repositories apt proxy method not allowed response has a 2xx status code
func (o *PostRepositoriesAptProxyMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories apt proxy method not allowed response has a 3xx status code
func (o *PostRepositoriesAptProxyMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories apt proxy method not allowed response has a 4xx status code
func (o *PostRepositoriesAptProxyMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories apt proxy method not allowed response has a 5xx status code
func (o *PostRepositoriesAptProxyMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories apt proxy method not allowed response a status code equal to that given
func (o *PostRepositoriesAptProxyMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the post repositories apt proxy method not allowed response
func (o *PostRepositoriesAptProxyMethodNotAllowed) Code() int {
	return 405
}

func (o *PostRepositoriesAptProxyMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] postRepositoriesAptProxyMethodNotAllowed", 405)
}

func (o *PostRepositoriesAptProxyMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] postRepositoriesAptProxyMethodNotAllowed", 405)
}

func (o *PostRepositoriesAptProxyMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
