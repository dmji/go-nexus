// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesMavenHostedByRepositorynameReader is a Reader for the PutRepositoriesMavenHostedByRepositoryname structure.
type PutRepositoriesMavenHostedByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesMavenHostedByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesMavenHostedByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesMavenHostedByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesMavenHostedByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesMavenHostedByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/maven/hosted/{repositoryName}] PutRepositoriesMavenHostedByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesMavenHostedByRepositorynameNoContent creates a PutRepositoriesMavenHostedByRepositorynameNoContent with default headers values
func NewPutRepositoriesMavenHostedByRepositorynameNoContent() *PutRepositoriesMavenHostedByRepositorynameNoContent {
	return &PutRepositoriesMavenHostedByRepositorynameNoContent{}
}

/*
PutRepositoriesMavenHostedByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesMavenHostedByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories maven hosted by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories maven hosted by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven hosted by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories maven hosted by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven hosted by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesMavenHostedByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories maven hosted by repositoryname no content response
func (o *PutRepositoriesMavenHostedByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesMavenHostedByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesMavenHostedByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesMavenHostedByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenHostedByRepositorynameBadRequest creates a PutRepositoriesMavenHostedByRepositorynameBadRequest with default headers values
func NewPutRepositoriesMavenHostedByRepositorynameBadRequest() *PutRepositoriesMavenHostedByRepositorynameBadRequest {
	return &PutRepositoriesMavenHostedByRepositorynameBadRequest{}
}

/*
PutRepositoriesMavenHostedByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesMavenHostedByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories maven hosted by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven hosted by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven hosted by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven hosted by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven hosted by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesMavenHostedByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories maven hosted by repositoryname bad request response
func (o *PutRepositoriesMavenHostedByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesMavenHostedByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesMavenHostedByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesMavenHostedByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenHostedByRepositorynameUnauthorized creates a PutRepositoriesMavenHostedByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesMavenHostedByRepositorynameUnauthorized() *PutRepositoriesMavenHostedByRepositorynameUnauthorized {
	return &PutRepositoriesMavenHostedByRepositorynameUnauthorized{}
}

/*
PutRepositoriesMavenHostedByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesMavenHostedByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories maven hosted by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven hosted by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven hosted by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven hosted by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven hosted by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesMavenHostedByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories maven hosted by repositoryname unauthorized response
func (o *PutRepositoriesMavenHostedByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesMavenHostedByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesMavenHostedByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesMavenHostedByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenHostedByRepositorynameForbidden creates a PutRepositoriesMavenHostedByRepositorynameForbidden with default headers values
func NewPutRepositoriesMavenHostedByRepositorynameForbidden() *PutRepositoriesMavenHostedByRepositorynameForbidden {
	return &PutRepositoriesMavenHostedByRepositorynameForbidden{}
}

/*
PutRepositoriesMavenHostedByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesMavenHostedByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories maven hosted by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven hosted by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven hosted by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven hosted by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesMavenHostedByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven hosted by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesMavenHostedByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories maven hosted by repositoryname forbidden response
func (o *PutRepositoriesMavenHostedByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesMavenHostedByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesMavenHostedByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesMavenHostedByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
