// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesConanHostedByRepositorynameReader is a Reader for the PutRepositoriesConanHostedByRepositoryname structure.
type PutRepositoriesConanHostedByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesConanHostedByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesConanHostedByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesConanHostedByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesConanHostedByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesConanHostedByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRepositoriesConanHostedByRepositorynameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/conan/hosted/{repositoryName}] PutRepositoriesConanHostedByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesConanHostedByRepositorynameNoContent creates a PutRepositoriesConanHostedByRepositorynameNoContent with default headers values
func NewPutRepositoriesConanHostedByRepositorynameNoContent() *PutRepositoriesConanHostedByRepositorynameNoContent {
	return &PutRepositoriesConanHostedByRepositorynameNoContent{}
}

/*
PutRepositoriesConanHostedByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesConanHostedByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories conan hosted by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesConanHostedByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories conan hosted by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesConanHostedByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan hosted by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesConanHostedByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories conan hosted by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesConanHostedByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan hosted by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesConanHostedByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories conan hosted by repositoryname no content response
func (o *PutRepositoriesConanHostedByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesConanHostedByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesConanHostedByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesConanHostedByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanHostedByRepositorynameBadRequest creates a PutRepositoriesConanHostedByRepositorynameBadRequest with default headers values
func NewPutRepositoriesConanHostedByRepositorynameBadRequest() *PutRepositoriesConanHostedByRepositorynameBadRequest {
	return &PutRepositoriesConanHostedByRepositorynameBadRequest{}
}

/*
PutRepositoriesConanHostedByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesConanHostedByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories conan hosted by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesConanHostedByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan hosted by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesConanHostedByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan hosted by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesConanHostedByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan hosted by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesConanHostedByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan hosted by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesConanHostedByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories conan hosted by repositoryname bad request response
func (o *PutRepositoriesConanHostedByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesConanHostedByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesConanHostedByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesConanHostedByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanHostedByRepositorynameUnauthorized creates a PutRepositoriesConanHostedByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesConanHostedByRepositorynameUnauthorized() *PutRepositoriesConanHostedByRepositorynameUnauthorized {
	return &PutRepositoriesConanHostedByRepositorynameUnauthorized{}
}

/*
PutRepositoriesConanHostedByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesConanHostedByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories conan hosted by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesConanHostedByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan hosted by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesConanHostedByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan hosted by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesConanHostedByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan hosted by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesConanHostedByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan hosted by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesConanHostedByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories conan hosted by repositoryname unauthorized response
func (o *PutRepositoriesConanHostedByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesConanHostedByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesConanHostedByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesConanHostedByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanHostedByRepositorynameForbidden creates a PutRepositoriesConanHostedByRepositorynameForbidden with default headers values
func NewPutRepositoriesConanHostedByRepositorynameForbidden() *PutRepositoriesConanHostedByRepositorynameForbidden {
	return &PutRepositoriesConanHostedByRepositorynameForbidden{}
}

/*
PutRepositoriesConanHostedByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesConanHostedByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories conan hosted by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesConanHostedByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan hosted by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesConanHostedByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan hosted by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesConanHostedByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan hosted by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesConanHostedByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan hosted by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesConanHostedByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories conan hosted by repositoryname forbidden response
func (o *PutRepositoriesConanHostedByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesConanHostedByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesConanHostedByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesConanHostedByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanHostedByRepositorynameNotFound creates a PutRepositoriesConanHostedByRepositorynameNotFound with default headers values
func NewPutRepositoriesConanHostedByRepositorynameNotFound() *PutRepositoriesConanHostedByRepositorynameNotFound {
	return &PutRepositoriesConanHostedByRepositorynameNotFound{}
}

/*
PutRepositoriesConanHostedByRepositorynameNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type PutRepositoriesConanHostedByRepositorynameNotFound struct {
}

// IsSuccess returns true when this put repositories conan hosted by repositoryname not found response has a 2xx status code
func (o *PutRepositoriesConanHostedByRepositorynameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan hosted by repositoryname not found response has a 3xx status code
func (o *PutRepositoriesConanHostedByRepositorynameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan hosted by repositoryname not found response has a 4xx status code
func (o *PutRepositoriesConanHostedByRepositorynameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan hosted by repositoryname not found response has a 5xx status code
func (o *PutRepositoriesConanHostedByRepositorynameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan hosted by repositoryname not found response a status code equal to that given
func (o *PutRepositoriesConanHostedByRepositorynameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put repositories conan hosted by repositoryname not found response
func (o *PutRepositoriesConanHostedByRepositorynameNotFound) Code() int {
	return 404
}

func (o *PutRepositoriesConanHostedByRepositorynameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositorynameNotFound", 404)
}

func (o *PutRepositoriesConanHostedByRepositorynameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositorynameNotFound", 404)
}

func (o *PutRepositoriesConanHostedByRepositorynameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
