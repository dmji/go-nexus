// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesCocoapodsProxyByRepositorynameReader is a Reader for the PutRepositoriesCocoapodsProxyByRepositoryname structure.
type PutRepositoriesCocoapodsProxyByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesCocoapodsProxyByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesCocoapodsProxyByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesCocoapodsProxyByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesCocoapodsProxyByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesCocoapodsProxyByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}] PutRepositoriesCocoapodsProxyByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesCocoapodsProxyByRepositorynameNoContent creates a PutRepositoriesCocoapodsProxyByRepositorynameNoContent with default headers values
func NewPutRepositoriesCocoapodsProxyByRepositorynameNoContent() *PutRepositoriesCocoapodsProxyByRepositorynameNoContent {
	return &PutRepositoriesCocoapodsProxyByRepositorynameNoContent{}
}

/*
PutRepositoriesCocoapodsProxyByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesCocoapodsProxyByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories cocoapods proxy by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories cocoapods proxy by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cocoapods proxy by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories cocoapods proxy by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cocoapods proxy by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesCocoapodsProxyByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories cocoapods proxy by repositoryname no content response
func (o *PutRepositoriesCocoapodsProxyByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCocoapodsProxyByRepositorynameBadRequest creates a PutRepositoriesCocoapodsProxyByRepositorynameBadRequest with default headers values
func NewPutRepositoriesCocoapodsProxyByRepositorynameBadRequest() *PutRepositoriesCocoapodsProxyByRepositorynameBadRequest {
	return &PutRepositoriesCocoapodsProxyByRepositorynameBadRequest{}
}

/*
PutRepositoriesCocoapodsProxyByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesCocoapodsProxyByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories cocoapods proxy by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cocoapods proxy by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cocoapods proxy by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cocoapods proxy by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cocoapods proxy by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesCocoapodsProxyByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories cocoapods proxy by repositoryname bad request response
func (o *PutRepositoriesCocoapodsProxyByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCocoapodsProxyByRepositorynameUnauthorized creates a PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesCocoapodsProxyByRepositorynameUnauthorized() *PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized {
	return &PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized{}
}

/*
PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories cocoapods proxy by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cocoapods proxy by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cocoapods proxy by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cocoapods proxy by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cocoapods proxy by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories cocoapods proxy by repositoryname unauthorized response
func (o *PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCocoapodsProxyByRepositorynameForbidden creates a PutRepositoriesCocoapodsProxyByRepositorynameForbidden with default headers values
func NewPutRepositoriesCocoapodsProxyByRepositorynameForbidden() *PutRepositoriesCocoapodsProxyByRepositorynameForbidden {
	return &PutRepositoriesCocoapodsProxyByRepositorynameForbidden{}
}

/*
PutRepositoriesCocoapodsProxyByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesCocoapodsProxyByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories cocoapods proxy by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cocoapods proxy by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cocoapods proxy by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cocoapods proxy by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cocoapods proxy by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesCocoapodsProxyByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories cocoapods proxy by repositoryname forbidden response
func (o *PutRepositoriesCocoapodsProxyByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesCocoapodsProxyByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
