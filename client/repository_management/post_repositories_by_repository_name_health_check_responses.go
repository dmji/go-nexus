// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostRepositoriesByRepositoryNameHealthCheckReader is a Reader for the PostRepositoriesByRepositoryNameHealthCheck structure.
type PostRepositoriesByRepositoryNameHealthCheckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesByRepositoryNameHealthCheckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostRepositoriesByRepositoryNameHealthCheckNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostRepositoriesByRepositoryNameHealthCheckUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRepositoriesByRepositoryNameHealthCheckForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRepositoriesByRepositoryNameHealthCheckNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostRepositoriesByRepositoryNameHealthCheckConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/{repositoryName}/health-check] PostRepositoriesByRepositoryNameHealthCheck", response, response.Code())
	}
}

// NewPostRepositoriesByRepositoryNameHealthCheckNoContent creates a PostRepositoriesByRepositoryNameHealthCheckNoContent with default headers values
func NewPostRepositoriesByRepositoryNameHealthCheckNoContent() *PostRepositoriesByRepositoryNameHealthCheckNoContent {
	return &PostRepositoriesByRepositoryNameHealthCheckNoContent{}
}

/*
PostRepositoriesByRepositoryNameHealthCheckNoContent describes a response with status code 204, with default header values.

Repository Health Check enabled
*/
type PostRepositoriesByRepositoryNameHealthCheckNoContent struct {
}

// IsSuccess returns true when this post repositories by repository name health check no content response has a 2xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post repositories by repository name health check no content response has a 3xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories by repository name health check no content response has a 4xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this post repositories by repository name health check no content response has a 5xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories by repository name health check no content response a status code equal to that given
func (o *PostRepositoriesByRepositoryNameHealthCheckNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the post repositories by repository name health check no content response
func (o *PostRepositoriesByRepositoryNameHealthCheckNoContent) Code() int {
	return 204
}

func (o *PostRepositoriesByRepositoryNameHealthCheckNoContent) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositoryNameHealthCheckNoContent", 204)
}

func (o *PostRepositoriesByRepositoryNameHealthCheckNoContent) String() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositoryNameHealthCheckNoContent", 204)
}

func (o *PostRepositoriesByRepositoryNameHealthCheckNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesByRepositoryNameHealthCheckUnauthorized creates a PostRepositoriesByRepositoryNameHealthCheckUnauthorized with default headers values
func NewPostRepositoriesByRepositoryNameHealthCheckUnauthorized() *PostRepositoriesByRepositoryNameHealthCheckUnauthorized {
	return &PostRepositoriesByRepositoryNameHealthCheckUnauthorized{}
}

/*
PostRepositoriesByRepositoryNameHealthCheckUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PostRepositoriesByRepositoryNameHealthCheckUnauthorized struct {
}

// IsSuccess returns true when this post repositories by repository name health check unauthorized response has a 2xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories by repository name health check unauthorized response has a 3xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories by repository name health check unauthorized response has a 4xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories by repository name health check unauthorized response has a 5xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories by repository name health check unauthorized response a status code equal to that given
func (o *PostRepositoriesByRepositoryNameHealthCheckUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post repositories by repository name health check unauthorized response
func (o *PostRepositoriesByRepositoryNameHealthCheckUnauthorized) Code() int {
	return 401
}

func (o *PostRepositoriesByRepositoryNameHealthCheckUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositoryNameHealthCheckUnauthorized", 401)
}

func (o *PostRepositoriesByRepositoryNameHealthCheckUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositoryNameHealthCheckUnauthorized", 401)
}

func (o *PostRepositoriesByRepositoryNameHealthCheckUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesByRepositoryNameHealthCheckForbidden creates a PostRepositoriesByRepositoryNameHealthCheckForbidden with default headers values
func NewPostRepositoriesByRepositoryNameHealthCheckForbidden() *PostRepositoriesByRepositoryNameHealthCheckForbidden {
	return &PostRepositoriesByRepositoryNameHealthCheckForbidden{}
}

/*
PostRepositoriesByRepositoryNameHealthCheckForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PostRepositoriesByRepositoryNameHealthCheckForbidden struct {
}

// IsSuccess returns true when this post repositories by repository name health check forbidden response has a 2xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories by repository name health check forbidden response has a 3xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories by repository name health check forbidden response has a 4xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories by repository name health check forbidden response has a 5xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories by repository name health check forbidden response a status code equal to that given
func (o *PostRepositoriesByRepositoryNameHealthCheckForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post repositories by repository name health check forbidden response
func (o *PostRepositoriesByRepositoryNameHealthCheckForbidden) Code() int {
	return 403
}

func (o *PostRepositoriesByRepositoryNameHealthCheckForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositoryNameHealthCheckForbidden", 403)
}

func (o *PostRepositoriesByRepositoryNameHealthCheckForbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositoryNameHealthCheckForbidden", 403)
}

func (o *PostRepositoriesByRepositoryNameHealthCheckForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesByRepositoryNameHealthCheckNotFound creates a PostRepositoriesByRepositoryNameHealthCheckNotFound with default headers values
func NewPostRepositoriesByRepositoryNameHealthCheckNotFound() *PostRepositoriesByRepositoryNameHealthCheckNotFound {
	return &PostRepositoriesByRepositoryNameHealthCheckNotFound{}
}

/*
PostRepositoriesByRepositoryNameHealthCheckNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type PostRepositoriesByRepositoryNameHealthCheckNotFound struct {
}

// IsSuccess returns true when this post repositories by repository name health check not found response has a 2xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories by repository name health check not found response has a 3xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories by repository name health check not found response has a 4xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories by repository name health check not found response has a 5xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories by repository name health check not found response a status code equal to that given
func (o *PostRepositoriesByRepositoryNameHealthCheckNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post repositories by repository name health check not found response
func (o *PostRepositoriesByRepositoryNameHealthCheckNotFound) Code() int {
	return 404
}

func (o *PostRepositoriesByRepositoryNameHealthCheckNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositoryNameHealthCheckNotFound", 404)
}

func (o *PostRepositoriesByRepositoryNameHealthCheckNotFound) String() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositoryNameHealthCheckNotFound", 404)
}

func (o *PostRepositoriesByRepositoryNameHealthCheckNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesByRepositoryNameHealthCheckConflict creates a PostRepositoriesByRepositoryNameHealthCheckConflict with default headers values
func NewPostRepositoriesByRepositoryNameHealthCheckConflict() *PostRepositoriesByRepositoryNameHealthCheckConflict {
	return &PostRepositoriesByRepositoryNameHealthCheckConflict{}
}

/*
PostRepositoriesByRepositoryNameHealthCheckConflict describes a response with status code 409, with default header values.

EULA not accepted or Repository Health Check capability not active
*/
type PostRepositoriesByRepositoryNameHealthCheckConflict struct {
}

// IsSuccess returns true when this post repositories by repository name health check conflict response has a 2xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories by repository name health check conflict response has a 3xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories by repository name health check conflict response has a 4xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories by repository name health check conflict response has a 5xx status code
func (o *PostRepositoriesByRepositoryNameHealthCheckConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories by repository name health check conflict response a status code equal to that given
func (o *PostRepositoriesByRepositoryNameHealthCheckConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the post repositories by repository name health check conflict response
func (o *PostRepositoriesByRepositoryNameHealthCheckConflict) Code() int {
	return 409
}

func (o *PostRepositoriesByRepositoryNameHealthCheckConflict) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositoryNameHealthCheckConflict", 409)
}

func (o *PostRepositoriesByRepositoryNameHealthCheckConflict) String() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositoryNameHealthCheckConflict", 409)
}

func (o *PostRepositoriesByRepositoryNameHealthCheckConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
