// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostRepositoriesGitlfsHostedReader is a Reader for the PostRepositoriesGitlfsHosted structure.
type PostRepositoriesGitlfsHostedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesGitlfsHostedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostRepositoriesGitlfsHostedCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostRepositoriesGitlfsHostedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRepositoriesGitlfsHostedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/gitlfs/hosted] PostRepositoriesGitlfsHosted", response, response.Code())
	}
}

// NewPostRepositoriesGitlfsHostedCreated creates a PostRepositoriesGitlfsHostedCreated with default headers values
func NewPostRepositoriesGitlfsHostedCreated() *PostRepositoriesGitlfsHostedCreated {
	return &PostRepositoriesGitlfsHostedCreated{}
}

/*
PostRepositoriesGitlfsHostedCreated describes a response with status code 201, with default header values.

Repository created
*/
type PostRepositoriesGitlfsHostedCreated struct {
}

// IsSuccess returns true when this post repositories gitlfs hosted created response has a 2xx status code
func (o *PostRepositoriesGitlfsHostedCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post repositories gitlfs hosted created response has a 3xx status code
func (o *PostRepositoriesGitlfsHostedCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories gitlfs hosted created response has a 4xx status code
func (o *PostRepositoriesGitlfsHostedCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post repositories gitlfs hosted created response has a 5xx status code
func (o *PostRepositoriesGitlfsHostedCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories gitlfs hosted created response a status code equal to that given
func (o *PostRepositoriesGitlfsHostedCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post repositories gitlfs hosted created response
func (o *PostRepositoriesGitlfsHostedCreated) Code() int {
	return 201
}

func (o *PostRepositoriesGitlfsHostedCreated) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/gitlfs/hosted][%d] postRepositoriesGitlfsHostedCreated", 201)
}

func (o *PostRepositoriesGitlfsHostedCreated) String() string {
	return fmt.Sprintf("[POST /v1/repositories/gitlfs/hosted][%d] postRepositoriesGitlfsHostedCreated", 201)
}

func (o *PostRepositoriesGitlfsHostedCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesGitlfsHostedUnauthorized creates a PostRepositoriesGitlfsHostedUnauthorized with default headers values
func NewPostRepositoriesGitlfsHostedUnauthorized() *PostRepositoriesGitlfsHostedUnauthorized {
	return &PostRepositoriesGitlfsHostedUnauthorized{}
}

/*
PostRepositoriesGitlfsHostedUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PostRepositoriesGitlfsHostedUnauthorized struct {
}

// IsSuccess returns true when this post repositories gitlfs hosted unauthorized response has a 2xx status code
func (o *PostRepositoriesGitlfsHostedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories gitlfs hosted unauthorized response has a 3xx status code
func (o *PostRepositoriesGitlfsHostedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories gitlfs hosted unauthorized response has a 4xx status code
func (o *PostRepositoriesGitlfsHostedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories gitlfs hosted unauthorized response has a 5xx status code
func (o *PostRepositoriesGitlfsHostedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories gitlfs hosted unauthorized response a status code equal to that given
func (o *PostRepositoriesGitlfsHostedUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post repositories gitlfs hosted unauthorized response
func (o *PostRepositoriesGitlfsHostedUnauthorized) Code() int {
	return 401
}

func (o *PostRepositoriesGitlfsHostedUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/gitlfs/hosted][%d] postRepositoriesGitlfsHostedUnauthorized", 401)
}

func (o *PostRepositoriesGitlfsHostedUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/gitlfs/hosted][%d] postRepositoriesGitlfsHostedUnauthorized", 401)
}

func (o *PostRepositoriesGitlfsHostedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesGitlfsHostedForbidden creates a PostRepositoriesGitlfsHostedForbidden with default headers values
func NewPostRepositoriesGitlfsHostedForbidden() *PostRepositoriesGitlfsHostedForbidden {
	return &PostRepositoriesGitlfsHostedForbidden{}
}

/*
PostRepositoriesGitlfsHostedForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PostRepositoriesGitlfsHostedForbidden struct {
}

// IsSuccess returns true when this post repositories gitlfs hosted forbidden response has a 2xx status code
func (o *PostRepositoriesGitlfsHostedForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories gitlfs hosted forbidden response has a 3xx status code
func (o *PostRepositoriesGitlfsHostedForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories gitlfs hosted forbidden response has a 4xx status code
func (o *PostRepositoriesGitlfsHostedForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories gitlfs hosted forbidden response has a 5xx status code
func (o *PostRepositoriesGitlfsHostedForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories gitlfs hosted forbidden response a status code equal to that given
func (o *PostRepositoriesGitlfsHostedForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post repositories gitlfs hosted forbidden response
func (o *PostRepositoriesGitlfsHostedForbidden) Code() int {
	return 403
}

func (o *PostRepositoriesGitlfsHostedForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/gitlfs/hosted][%d] postRepositoriesGitlfsHostedForbidden", 403)
}

func (o *PostRepositoriesGitlfsHostedForbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/gitlfs/hosted][%d] postRepositoriesGitlfsHostedForbidden", 403)
}

func (o *PostRepositoriesGitlfsHostedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
