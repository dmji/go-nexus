// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository7Reader is a Reader for the UpdateRepository7 structure.
type UpdateRepository7Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository7Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository7NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRepository7BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRepository7Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository7Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/raw/proxy/{repositoryName}] updateRepository_7", response, response.Code())
	}
}

// NewUpdateRepository7NoContent creates a UpdateRepository7NoContent with default headers values
func NewUpdateRepository7NoContent() *UpdateRepository7NoContent {
	return &UpdateRepository7NoContent{}
}

/*
UpdateRepository7NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository7NoContent struct {
}

// IsSuccess returns true when this update repository7 no content response has a 2xx status code
func (o *UpdateRepository7NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository7 no content response has a 3xx status code
func (o *UpdateRepository7NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository7 no content response has a 4xx status code
func (o *UpdateRepository7NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository7 no content response has a 5xx status code
func (o *UpdateRepository7NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository7 no content response a status code equal to that given
func (o *UpdateRepository7NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update repository7 no content response
func (o *UpdateRepository7NoContent) Code() int {
	return 204
}

func (o *UpdateRepository7NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7NoContent", 204)
}

func (o *UpdateRepository7NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7NoContent", 204)
}

func (o *UpdateRepository7NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository7BadRequest creates a UpdateRepository7BadRequest with default headers values
func NewUpdateRepository7BadRequest() *UpdateRepository7BadRequest {
	return &UpdateRepository7BadRequest{}
}

/*
UpdateRepository7BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateRepository7BadRequest struct {
}

// IsSuccess returns true when this update repository7 bad request response has a 2xx status code
func (o *UpdateRepository7BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository7 bad request response has a 3xx status code
func (o *UpdateRepository7BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository7 bad request response has a 4xx status code
func (o *UpdateRepository7BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository7 bad request response has a 5xx status code
func (o *UpdateRepository7BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository7 bad request response a status code equal to that given
func (o *UpdateRepository7BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update repository7 bad request response
func (o *UpdateRepository7BadRequest) Code() int {
	return 400
}

func (o *UpdateRepository7BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7BadRequest", 400)
}

func (o *UpdateRepository7BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7BadRequest", 400)
}

func (o *UpdateRepository7BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository7Unauthorized creates a UpdateRepository7Unauthorized with default headers values
func NewUpdateRepository7Unauthorized() *UpdateRepository7Unauthorized {
	return &UpdateRepository7Unauthorized{}
}

/*
UpdateRepository7Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository7Unauthorized struct {
}

// IsSuccess returns true when this update repository7 unauthorized response has a 2xx status code
func (o *UpdateRepository7Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository7 unauthorized response has a 3xx status code
func (o *UpdateRepository7Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository7 unauthorized response has a 4xx status code
func (o *UpdateRepository7Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository7 unauthorized response has a 5xx status code
func (o *UpdateRepository7Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository7 unauthorized response a status code equal to that given
func (o *UpdateRepository7Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update repository7 unauthorized response
func (o *UpdateRepository7Unauthorized) Code() int {
	return 401
}

func (o *UpdateRepository7Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7Unauthorized", 401)
}

func (o *UpdateRepository7Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7Unauthorized", 401)
}

func (o *UpdateRepository7Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository7Forbidden creates a UpdateRepository7Forbidden with default headers values
func NewUpdateRepository7Forbidden() *UpdateRepository7Forbidden {
	return &UpdateRepository7Forbidden{}
}

/*
UpdateRepository7Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository7Forbidden struct {
}

// IsSuccess returns true when this update repository7 forbidden response has a 2xx status code
func (o *UpdateRepository7Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository7 forbidden response has a 3xx status code
func (o *UpdateRepository7Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository7 forbidden response has a 4xx status code
func (o *UpdateRepository7Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository7 forbidden response has a 5xx status code
func (o *UpdateRepository7Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository7 forbidden response a status code equal to that given
func (o *UpdateRepository7Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update repository7 forbidden response
func (o *UpdateRepository7Forbidden) Code() int {
	return 403
}

func (o *UpdateRepository7Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7Forbidden", 403)
}

func (o *UpdateRepository7Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7Forbidden", 403)
}

func (o *UpdateRepository7Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
