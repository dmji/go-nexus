// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesPypiProxyByRepositorynameReader is a Reader for the PutRepositoriesPypiProxyByRepositoryname structure.
type PutRepositoriesPypiProxyByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesPypiProxyByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesPypiProxyByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesPypiProxyByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesPypiProxyByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesPypiProxyByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/pypi/proxy/{repositoryName}] PutRepositoriesPypiProxyByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesPypiProxyByRepositorynameNoContent creates a PutRepositoriesPypiProxyByRepositorynameNoContent with default headers values
func NewPutRepositoriesPypiProxyByRepositorynameNoContent() *PutRepositoriesPypiProxyByRepositorynameNoContent {
	return &PutRepositoriesPypiProxyByRepositorynameNoContent{}
}

/*
PutRepositoriesPypiProxyByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesPypiProxyByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories pypi proxy by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories pypi proxy by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi proxy by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories pypi proxy by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi proxy by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesPypiProxyByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories pypi proxy by repositoryname no content response
func (o *PutRepositoriesPypiProxyByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesPypiProxyByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesPypiProxyByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesPypiProxyByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesPypiProxyByRepositorynameBadRequest creates a PutRepositoriesPypiProxyByRepositorynameBadRequest with default headers values
func NewPutRepositoriesPypiProxyByRepositorynameBadRequest() *PutRepositoriesPypiProxyByRepositorynameBadRequest {
	return &PutRepositoriesPypiProxyByRepositorynameBadRequest{}
}

/*
PutRepositoriesPypiProxyByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesPypiProxyByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories pypi proxy by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories pypi proxy by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi proxy by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories pypi proxy by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi proxy by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesPypiProxyByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories pypi proxy by repositoryname bad request response
func (o *PutRepositoriesPypiProxyByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesPypiProxyByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesPypiProxyByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesPypiProxyByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesPypiProxyByRepositorynameUnauthorized creates a PutRepositoriesPypiProxyByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesPypiProxyByRepositorynameUnauthorized() *PutRepositoriesPypiProxyByRepositorynameUnauthorized {
	return &PutRepositoriesPypiProxyByRepositorynameUnauthorized{}
}

/*
PutRepositoriesPypiProxyByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesPypiProxyByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories pypi proxy by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories pypi proxy by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi proxy by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories pypi proxy by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi proxy by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesPypiProxyByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories pypi proxy by repositoryname unauthorized response
func (o *PutRepositoriesPypiProxyByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesPypiProxyByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesPypiProxyByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesPypiProxyByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesPypiProxyByRepositorynameForbidden creates a PutRepositoriesPypiProxyByRepositorynameForbidden with default headers values
func NewPutRepositoriesPypiProxyByRepositorynameForbidden() *PutRepositoriesPypiProxyByRepositorynameForbidden {
	return &PutRepositoriesPypiProxyByRepositorynameForbidden{}
}

/*
PutRepositoriesPypiProxyByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesPypiProxyByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories pypi proxy by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories pypi proxy by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi proxy by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories pypi proxy by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesPypiProxyByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi proxy by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesPypiProxyByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories pypi proxy by repositoryname forbidden response
func (o *PutRepositoriesPypiProxyByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesPypiProxyByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesPypiProxyByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesPypiProxyByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
