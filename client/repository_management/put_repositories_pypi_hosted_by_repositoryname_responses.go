// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesPypiHostedByRepositorynameReader is a Reader for the PutRepositoriesPypiHostedByRepositoryname structure.
type PutRepositoriesPypiHostedByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesPypiHostedByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesPypiHostedByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesPypiHostedByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesPypiHostedByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesPypiHostedByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/pypi/hosted/{repositoryName}] PutRepositoriesPypiHostedByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesPypiHostedByRepositorynameNoContent creates a PutRepositoriesPypiHostedByRepositorynameNoContent with default headers values
func NewPutRepositoriesPypiHostedByRepositorynameNoContent() *PutRepositoriesPypiHostedByRepositorynameNoContent {
	return &PutRepositoriesPypiHostedByRepositorynameNoContent{}
}

/*
PutRepositoriesPypiHostedByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesPypiHostedByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories pypi hosted by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories pypi hosted by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi hosted by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories pypi hosted by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi hosted by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesPypiHostedByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories pypi hosted by repositoryname no content response
func (o *PutRepositoriesPypiHostedByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesPypiHostedByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] putRepositoriesPypiHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesPypiHostedByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] putRepositoriesPypiHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesPypiHostedByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesPypiHostedByRepositorynameBadRequest creates a PutRepositoriesPypiHostedByRepositorynameBadRequest with default headers values
func NewPutRepositoriesPypiHostedByRepositorynameBadRequest() *PutRepositoriesPypiHostedByRepositorynameBadRequest {
	return &PutRepositoriesPypiHostedByRepositorynameBadRequest{}
}

/*
PutRepositoriesPypiHostedByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesPypiHostedByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories pypi hosted by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories pypi hosted by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi hosted by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories pypi hosted by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi hosted by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesPypiHostedByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories pypi hosted by repositoryname bad request response
func (o *PutRepositoriesPypiHostedByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesPypiHostedByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] putRepositoriesPypiHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesPypiHostedByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] putRepositoriesPypiHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesPypiHostedByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesPypiHostedByRepositorynameUnauthorized creates a PutRepositoriesPypiHostedByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesPypiHostedByRepositorynameUnauthorized() *PutRepositoriesPypiHostedByRepositorynameUnauthorized {
	return &PutRepositoriesPypiHostedByRepositorynameUnauthorized{}
}

/*
PutRepositoriesPypiHostedByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesPypiHostedByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories pypi hosted by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories pypi hosted by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi hosted by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories pypi hosted by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi hosted by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesPypiHostedByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories pypi hosted by repositoryname unauthorized response
func (o *PutRepositoriesPypiHostedByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesPypiHostedByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] putRepositoriesPypiHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesPypiHostedByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] putRepositoriesPypiHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesPypiHostedByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesPypiHostedByRepositorynameForbidden creates a PutRepositoriesPypiHostedByRepositorynameForbidden with default headers values
func NewPutRepositoriesPypiHostedByRepositorynameForbidden() *PutRepositoriesPypiHostedByRepositorynameForbidden {
	return &PutRepositoriesPypiHostedByRepositorynameForbidden{}
}

/*
PutRepositoriesPypiHostedByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesPypiHostedByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories pypi hosted by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories pypi hosted by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi hosted by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories pypi hosted by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesPypiHostedByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi hosted by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesPypiHostedByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories pypi hosted by repositoryname forbidden response
func (o *PutRepositoriesPypiHostedByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesPypiHostedByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] putRepositoriesPypiHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesPypiHostedByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] putRepositoriesPypiHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesPypiHostedByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
