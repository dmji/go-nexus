// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesRubygemsHostedByRepositorynameReader is a Reader for the PutRepositoriesRubygemsHostedByRepositoryname structure.
type PutRepositoriesRubygemsHostedByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesRubygemsHostedByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesRubygemsHostedByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesRubygemsHostedByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesRubygemsHostedByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesRubygemsHostedByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/rubygems/hosted/{repositoryName}] PutRepositoriesRubygemsHostedByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesRubygemsHostedByRepositorynameNoContent creates a PutRepositoriesRubygemsHostedByRepositorynameNoContent with default headers values
func NewPutRepositoriesRubygemsHostedByRepositorynameNoContent() *PutRepositoriesRubygemsHostedByRepositorynameNoContent {
	return &PutRepositoriesRubygemsHostedByRepositorynameNoContent{}
}

/*
PutRepositoriesRubygemsHostedByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesRubygemsHostedByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories rubygems hosted by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories rubygems hosted by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems hosted by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories rubygems hosted by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems hosted by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesRubygemsHostedByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories rubygems hosted by repositoryname no content response
func (o *PutRepositoriesRubygemsHostedByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/hosted/{repositoryName}][%d] putRepositoriesRubygemsHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/hosted/{repositoryName}][%d] putRepositoriesRubygemsHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRubygemsHostedByRepositorynameBadRequest creates a PutRepositoriesRubygemsHostedByRepositorynameBadRequest with default headers values
func NewPutRepositoriesRubygemsHostedByRepositorynameBadRequest() *PutRepositoriesRubygemsHostedByRepositorynameBadRequest {
	return &PutRepositoriesRubygemsHostedByRepositorynameBadRequest{}
}

/*
PutRepositoriesRubygemsHostedByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesRubygemsHostedByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories rubygems hosted by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories rubygems hosted by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems hosted by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories rubygems hosted by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems hosted by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesRubygemsHostedByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories rubygems hosted by repositoryname bad request response
func (o *PutRepositoriesRubygemsHostedByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/hosted/{repositoryName}][%d] putRepositoriesRubygemsHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/hosted/{repositoryName}][%d] putRepositoriesRubygemsHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRubygemsHostedByRepositorynameUnauthorized creates a PutRepositoriesRubygemsHostedByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesRubygemsHostedByRepositorynameUnauthorized() *PutRepositoriesRubygemsHostedByRepositorynameUnauthorized {
	return &PutRepositoriesRubygemsHostedByRepositorynameUnauthorized{}
}

/*
PutRepositoriesRubygemsHostedByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesRubygemsHostedByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories rubygems hosted by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories rubygems hosted by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems hosted by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories rubygems hosted by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems hosted by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesRubygemsHostedByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories rubygems hosted by repositoryname unauthorized response
func (o *PutRepositoriesRubygemsHostedByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/hosted/{repositoryName}][%d] putRepositoriesRubygemsHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/hosted/{repositoryName}][%d] putRepositoriesRubygemsHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRubygemsHostedByRepositorynameForbidden creates a PutRepositoriesRubygemsHostedByRepositorynameForbidden with default headers values
func NewPutRepositoriesRubygemsHostedByRepositorynameForbidden() *PutRepositoriesRubygemsHostedByRepositorynameForbidden {
	return &PutRepositoriesRubygemsHostedByRepositorynameForbidden{}
}

/*
PutRepositoriesRubygemsHostedByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesRubygemsHostedByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories rubygems hosted by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories rubygems hosted by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems hosted by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories rubygems hosted by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesRubygemsHostedByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems hosted by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesRubygemsHostedByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories rubygems hosted by repositoryname forbidden response
func (o *PutRepositoriesRubygemsHostedByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/hosted/{repositoryName}][%d] putRepositoriesRubygemsHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/hosted/{repositoryName}][%d] putRepositoriesRubygemsHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesRubygemsHostedByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
