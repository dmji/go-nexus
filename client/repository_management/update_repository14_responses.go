// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository14Reader is a Reader for the UpdateRepository14 structure.
type UpdateRepository14Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository14Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository14NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRepository14BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRepository14Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository14Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRepository14NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/conan/hosted/{repositoryName}] updateRepository_14", response, response.Code())
	}
}

// NewUpdateRepository14NoContent creates a UpdateRepository14NoContent with default headers values
func NewUpdateRepository14NoContent() *UpdateRepository14NoContent {
	return &UpdateRepository14NoContent{}
}

/*
UpdateRepository14NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository14NoContent struct {
}

// IsSuccess returns true when this update repository14 no content response has a 2xx status code
func (o *UpdateRepository14NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository14 no content response has a 3xx status code
func (o *UpdateRepository14NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository14 no content response has a 4xx status code
func (o *UpdateRepository14NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository14 no content response has a 5xx status code
func (o *UpdateRepository14NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository14 no content response a status code equal to that given
func (o *UpdateRepository14NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update repository14 no content response
func (o *UpdateRepository14NoContent) Code() int {
	return 204
}

func (o *UpdateRepository14NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] updateRepository14NoContent", 204)
}

func (o *UpdateRepository14NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] updateRepository14NoContent", 204)
}

func (o *UpdateRepository14NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository14BadRequest creates a UpdateRepository14BadRequest with default headers values
func NewUpdateRepository14BadRequest() *UpdateRepository14BadRequest {
	return &UpdateRepository14BadRequest{}
}

/*
UpdateRepository14BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateRepository14BadRequest struct {
}

// IsSuccess returns true when this update repository14 bad request response has a 2xx status code
func (o *UpdateRepository14BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository14 bad request response has a 3xx status code
func (o *UpdateRepository14BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository14 bad request response has a 4xx status code
func (o *UpdateRepository14BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository14 bad request response has a 5xx status code
func (o *UpdateRepository14BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository14 bad request response a status code equal to that given
func (o *UpdateRepository14BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update repository14 bad request response
func (o *UpdateRepository14BadRequest) Code() int {
	return 400
}

func (o *UpdateRepository14BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] updateRepository14BadRequest", 400)
}

func (o *UpdateRepository14BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] updateRepository14BadRequest", 400)
}

func (o *UpdateRepository14BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository14Unauthorized creates a UpdateRepository14Unauthorized with default headers values
func NewUpdateRepository14Unauthorized() *UpdateRepository14Unauthorized {
	return &UpdateRepository14Unauthorized{}
}

/*
UpdateRepository14Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository14Unauthorized struct {
}

// IsSuccess returns true when this update repository14 unauthorized response has a 2xx status code
func (o *UpdateRepository14Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository14 unauthorized response has a 3xx status code
func (o *UpdateRepository14Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository14 unauthorized response has a 4xx status code
func (o *UpdateRepository14Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository14 unauthorized response has a 5xx status code
func (o *UpdateRepository14Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository14 unauthorized response a status code equal to that given
func (o *UpdateRepository14Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update repository14 unauthorized response
func (o *UpdateRepository14Unauthorized) Code() int {
	return 401
}

func (o *UpdateRepository14Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] updateRepository14Unauthorized", 401)
}

func (o *UpdateRepository14Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] updateRepository14Unauthorized", 401)
}

func (o *UpdateRepository14Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository14Forbidden creates a UpdateRepository14Forbidden with default headers values
func NewUpdateRepository14Forbidden() *UpdateRepository14Forbidden {
	return &UpdateRepository14Forbidden{}
}

/*
UpdateRepository14Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository14Forbidden struct {
}

// IsSuccess returns true when this update repository14 forbidden response has a 2xx status code
func (o *UpdateRepository14Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository14 forbidden response has a 3xx status code
func (o *UpdateRepository14Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository14 forbidden response has a 4xx status code
func (o *UpdateRepository14Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository14 forbidden response has a 5xx status code
func (o *UpdateRepository14Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository14 forbidden response a status code equal to that given
func (o *UpdateRepository14Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update repository14 forbidden response
func (o *UpdateRepository14Forbidden) Code() int {
	return 403
}

func (o *UpdateRepository14Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] updateRepository14Forbidden", 403)
}

func (o *UpdateRepository14Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] updateRepository14Forbidden", 403)
}

func (o *UpdateRepository14Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository14NotFound creates a UpdateRepository14NotFound with default headers values
func NewUpdateRepository14NotFound() *UpdateRepository14NotFound {
	return &UpdateRepository14NotFound{}
}

/*
UpdateRepository14NotFound describes a response with status code 404, with default header values.

Repository not found
*/
type UpdateRepository14NotFound struct {
}

// IsSuccess returns true when this update repository14 not found response has a 2xx status code
func (o *UpdateRepository14NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository14 not found response has a 3xx status code
func (o *UpdateRepository14NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository14 not found response has a 4xx status code
func (o *UpdateRepository14NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository14 not found response has a 5xx status code
func (o *UpdateRepository14NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository14 not found response a status code equal to that given
func (o *UpdateRepository14NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update repository14 not found response
func (o *UpdateRepository14NotFound) Code() int {
	return 404
}

func (o *UpdateRepository14NotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] updateRepository14NotFound", 404)
}

func (o *UpdateRepository14NotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] updateRepository14NotFound", 404)
}

func (o *UpdateRepository14NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
