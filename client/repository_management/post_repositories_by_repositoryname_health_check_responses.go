// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostRepositoriesByRepositorynameHealthCheckReader is a Reader for the PostRepositoriesByRepositorynameHealthCheck structure.
type PostRepositoriesByRepositorynameHealthCheckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesByRepositorynameHealthCheckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostRepositoriesByRepositorynameHealthCheckNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostRepositoriesByRepositorynameHealthCheckUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRepositoriesByRepositorynameHealthCheckForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRepositoriesByRepositorynameHealthCheckNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostRepositoriesByRepositorynameHealthCheckConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/{repositoryName}/health-check] PostRepositoriesByRepositorynameHealthCheck", response, response.Code())
	}
}

// NewPostRepositoriesByRepositorynameHealthCheckNoContent creates a PostRepositoriesByRepositorynameHealthCheckNoContent with default headers values
func NewPostRepositoriesByRepositorynameHealthCheckNoContent() *PostRepositoriesByRepositorynameHealthCheckNoContent {
	return &PostRepositoriesByRepositorynameHealthCheckNoContent{}
}

/*
PostRepositoriesByRepositorynameHealthCheckNoContent describes a response with status code 204, with default header values.

Repository Health Check enabled
*/
type PostRepositoriesByRepositorynameHealthCheckNoContent struct {
}

// IsSuccess returns true when this post repositories by repositoryname health check no content response has a 2xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post repositories by repositoryname health check no content response has a 3xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories by repositoryname health check no content response has a 4xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this post repositories by repositoryname health check no content response has a 5xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories by repositoryname health check no content response a status code equal to that given
func (o *PostRepositoriesByRepositorynameHealthCheckNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the post repositories by repositoryname health check no content response
func (o *PostRepositoriesByRepositorynameHealthCheckNoContent) Code() int {
	return 204
}

func (o *PostRepositoriesByRepositorynameHealthCheckNoContent) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositorynameHealthCheckNoContent", 204)
}

func (o *PostRepositoriesByRepositorynameHealthCheckNoContent) String() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositorynameHealthCheckNoContent", 204)
}

func (o *PostRepositoriesByRepositorynameHealthCheckNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesByRepositorynameHealthCheckUnauthorized creates a PostRepositoriesByRepositorynameHealthCheckUnauthorized with default headers values
func NewPostRepositoriesByRepositorynameHealthCheckUnauthorized() *PostRepositoriesByRepositorynameHealthCheckUnauthorized {
	return &PostRepositoriesByRepositorynameHealthCheckUnauthorized{}
}

/*
PostRepositoriesByRepositorynameHealthCheckUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PostRepositoriesByRepositorynameHealthCheckUnauthorized struct {
}

// IsSuccess returns true when this post repositories by repositoryname health check unauthorized response has a 2xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories by repositoryname health check unauthorized response has a 3xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories by repositoryname health check unauthorized response has a 4xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories by repositoryname health check unauthorized response has a 5xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories by repositoryname health check unauthorized response a status code equal to that given
func (o *PostRepositoriesByRepositorynameHealthCheckUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post repositories by repositoryname health check unauthorized response
func (o *PostRepositoriesByRepositorynameHealthCheckUnauthorized) Code() int {
	return 401
}

func (o *PostRepositoriesByRepositorynameHealthCheckUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositorynameHealthCheckUnauthorized", 401)
}

func (o *PostRepositoriesByRepositorynameHealthCheckUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositorynameHealthCheckUnauthorized", 401)
}

func (o *PostRepositoriesByRepositorynameHealthCheckUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesByRepositorynameHealthCheckForbidden creates a PostRepositoriesByRepositorynameHealthCheckForbidden with default headers values
func NewPostRepositoriesByRepositorynameHealthCheckForbidden() *PostRepositoriesByRepositorynameHealthCheckForbidden {
	return &PostRepositoriesByRepositorynameHealthCheckForbidden{}
}

/*
PostRepositoriesByRepositorynameHealthCheckForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PostRepositoriesByRepositorynameHealthCheckForbidden struct {
}

// IsSuccess returns true when this post repositories by repositoryname health check forbidden response has a 2xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories by repositoryname health check forbidden response has a 3xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories by repositoryname health check forbidden response has a 4xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories by repositoryname health check forbidden response has a 5xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories by repositoryname health check forbidden response a status code equal to that given
func (o *PostRepositoriesByRepositorynameHealthCheckForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post repositories by repositoryname health check forbidden response
func (o *PostRepositoriesByRepositorynameHealthCheckForbidden) Code() int {
	return 403
}

func (o *PostRepositoriesByRepositorynameHealthCheckForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositorynameHealthCheckForbidden", 403)
}

func (o *PostRepositoriesByRepositorynameHealthCheckForbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositorynameHealthCheckForbidden", 403)
}

func (o *PostRepositoriesByRepositorynameHealthCheckForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesByRepositorynameHealthCheckNotFound creates a PostRepositoriesByRepositorynameHealthCheckNotFound with default headers values
func NewPostRepositoriesByRepositorynameHealthCheckNotFound() *PostRepositoriesByRepositorynameHealthCheckNotFound {
	return &PostRepositoriesByRepositorynameHealthCheckNotFound{}
}

/*
PostRepositoriesByRepositorynameHealthCheckNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type PostRepositoriesByRepositorynameHealthCheckNotFound struct {
}

// IsSuccess returns true when this post repositories by repositoryname health check not found response has a 2xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories by repositoryname health check not found response has a 3xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories by repositoryname health check not found response has a 4xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories by repositoryname health check not found response has a 5xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories by repositoryname health check not found response a status code equal to that given
func (o *PostRepositoriesByRepositorynameHealthCheckNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post repositories by repositoryname health check not found response
func (o *PostRepositoriesByRepositorynameHealthCheckNotFound) Code() int {
	return 404
}

func (o *PostRepositoriesByRepositorynameHealthCheckNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositorynameHealthCheckNotFound", 404)
}

func (o *PostRepositoriesByRepositorynameHealthCheckNotFound) String() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositorynameHealthCheckNotFound", 404)
}

func (o *PostRepositoriesByRepositorynameHealthCheckNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesByRepositorynameHealthCheckConflict creates a PostRepositoriesByRepositorynameHealthCheckConflict with default headers values
func NewPostRepositoriesByRepositorynameHealthCheckConflict() *PostRepositoriesByRepositorynameHealthCheckConflict {
	return &PostRepositoriesByRepositorynameHealthCheckConflict{}
}

/*
PostRepositoriesByRepositorynameHealthCheckConflict describes a response with status code 409, with default header values.

EULA not accepted or Repository Health Check capability not active
*/
type PostRepositoriesByRepositorynameHealthCheckConflict struct {
}

// IsSuccess returns true when this post repositories by repositoryname health check conflict response has a 2xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories by repositoryname health check conflict response has a 3xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories by repositoryname health check conflict response has a 4xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories by repositoryname health check conflict response has a 5xx status code
func (o *PostRepositoriesByRepositorynameHealthCheckConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories by repositoryname health check conflict response a status code equal to that given
func (o *PostRepositoriesByRepositorynameHealthCheckConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the post repositories by repositoryname health check conflict response
func (o *PostRepositoriesByRepositorynameHealthCheckConflict) Code() int {
	return 409
}

func (o *PostRepositoriesByRepositorynameHealthCheckConflict) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositorynameHealthCheckConflict", 409)
}

func (o *PostRepositoriesByRepositorynameHealthCheckConflict) String() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/health-check][%d] postRepositoriesByRepositorynameHealthCheckConflict", 409)
}

func (o *PostRepositoriesByRepositorynameHealthCheckConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
