// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesMavenHostedByRepositoryNameReader is a Reader for the PutRepositoriesMavenHostedByRepositoryName structure.
type PutRepositoriesMavenHostedByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesMavenHostedByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesMavenHostedByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesMavenHostedByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesMavenHostedByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesMavenHostedByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/maven/hosted/{repositoryName}] PutRepositoriesMavenHostedByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesMavenHostedByRepositoryNameNoContent creates a PutRepositoriesMavenHostedByRepositoryNameNoContent with default headers values
func NewPutRepositoriesMavenHostedByRepositoryNameNoContent() *PutRepositoriesMavenHostedByRepositoryNameNoContent {
	return &PutRepositoriesMavenHostedByRepositoryNameNoContent{}
}

/*
PutRepositoriesMavenHostedByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesMavenHostedByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories maven hosted by repository name no content response has a 2xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories maven hosted by repository name no content response has a 3xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven hosted by repository name no content response has a 4xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories maven hosted by repository name no content response has a 5xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven hosted by repository name no content response a status code equal to that given
func (o *PutRepositoriesMavenHostedByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories maven hosted by repository name no content response
func (o *PutRepositoriesMavenHostedByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesMavenHostedByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesMavenHostedByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesMavenHostedByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenHostedByRepositoryNameBadRequest creates a PutRepositoriesMavenHostedByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesMavenHostedByRepositoryNameBadRequest() *PutRepositoriesMavenHostedByRepositoryNameBadRequest {
	return &PutRepositoriesMavenHostedByRepositoryNameBadRequest{}
}

/*
PutRepositoriesMavenHostedByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesMavenHostedByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories maven hosted by repository name bad request response has a 2xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven hosted by repository name bad request response has a 3xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven hosted by repository name bad request response has a 4xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven hosted by repository name bad request response has a 5xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven hosted by repository name bad request response a status code equal to that given
func (o *PutRepositoriesMavenHostedByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories maven hosted by repository name bad request response
func (o *PutRepositoriesMavenHostedByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesMavenHostedByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesMavenHostedByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesMavenHostedByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenHostedByRepositoryNameUnauthorized creates a PutRepositoriesMavenHostedByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesMavenHostedByRepositoryNameUnauthorized() *PutRepositoriesMavenHostedByRepositoryNameUnauthorized {
	return &PutRepositoriesMavenHostedByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesMavenHostedByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesMavenHostedByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories maven hosted by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven hosted by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven hosted by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven hosted by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven hosted by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesMavenHostedByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories maven hosted by repository name unauthorized response
func (o *PutRepositoriesMavenHostedByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesMavenHostedByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesMavenHostedByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesMavenHostedByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenHostedByRepositoryNameForbidden creates a PutRepositoriesMavenHostedByRepositoryNameForbidden with default headers values
func NewPutRepositoriesMavenHostedByRepositoryNameForbidden() *PutRepositoriesMavenHostedByRepositoryNameForbidden {
	return &PutRepositoriesMavenHostedByRepositoryNameForbidden{}
}

/*
PutRepositoriesMavenHostedByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesMavenHostedByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories maven hosted by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven hosted by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven hosted by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven hosted by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesMavenHostedByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven hosted by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesMavenHostedByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories maven hosted by repository name forbidden response
func (o *PutRepositoriesMavenHostedByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesMavenHostedByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesMavenHostedByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/hosted/{repositoryName}][%d] putRepositoriesMavenHostedByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesMavenHostedByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
