// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository41Reader is a Reader for the UpdateRepository41 structure.
type UpdateRepository41Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository41Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository41NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRepository41BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRepository41Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository41Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/rubygems/proxy/{repositoryName}] updateRepository_41", response, response.Code())
	}
}

// NewUpdateRepository41NoContent creates a UpdateRepository41NoContent with default headers values
func NewUpdateRepository41NoContent() *UpdateRepository41NoContent {
	return &UpdateRepository41NoContent{}
}

/*
UpdateRepository41NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository41NoContent struct {
}

// IsSuccess returns true when this update repository41 no content response has a 2xx status code
func (o *UpdateRepository41NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository41 no content response has a 3xx status code
func (o *UpdateRepository41NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository41 no content response has a 4xx status code
func (o *UpdateRepository41NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository41 no content response has a 5xx status code
func (o *UpdateRepository41NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository41 no content response a status code equal to that given
func (o *UpdateRepository41NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update repository41 no content response
func (o *UpdateRepository41NoContent) Code() int {
	return 204
}

func (o *UpdateRepository41NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] updateRepository41NoContent", 204)
}

func (o *UpdateRepository41NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] updateRepository41NoContent", 204)
}

func (o *UpdateRepository41NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository41BadRequest creates a UpdateRepository41BadRequest with default headers values
func NewUpdateRepository41BadRequest() *UpdateRepository41BadRequest {
	return &UpdateRepository41BadRequest{}
}

/*
UpdateRepository41BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateRepository41BadRequest struct {
}

// IsSuccess returns true when this update repository41 bad request response has a 2xx status code
func (o *UpdateRepository41BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository41 bad request response has a 3xx status code
func (o *UpdateRepository41BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository41 bad request response has a 4xx status code
func (o *UpdateRepository41BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository41 bad request response has a 5xx status code
func (o *UpdateRepository41BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository41 bad request response a status code equal to that given
func (o *UpdateRepository41BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update repository41 bad request response
func (o *UpdateRepository41BadRequest) Code() int {
	return 400
}

func (o *UpdateRepository41BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] updateRepository41BadRequest", 400)
}

func (o *UpdateRepository41BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] updateRepository41BadRequest", 400)
}

func (o *UpdateRepository41BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository41Unauthorized creates a UpdateRepository41Unauthorized with default headers values
func NewUpdateRepository41Unauthorized() *UpdateRepository41Unauthorized {
	return &UpdateRepository41Unauthorized{}
}

/*
UpdateRepository41Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository41Unauthorized struct {
}

// IsSuccess returns true when this update repository41 unauthorized response has a 2xx status code
func (o *UpdateRepository41Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository41 unauthorized response has a 3xx status code
func (o *UpdateRepository41Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository41 unauthorized response has a 4xx status code
func (o *UpdateRepository41Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository41 unauthorized response has a 5xx status code
func (o *UpdateRepository41Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository41 unauthorized response a status code equal to that given
func (o *UpdateRepository41Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update repository41 unauthorized response
func (o *UpdateRepository41Unauthorized) Code() int {
	return 401
}

func (o *UpdateRepository41Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] updateRepository41Unauthorized", 401)
}

func (o *UpdateRepository41Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] updateRepository41Unauthorized", 401)
}

func (o *UpdateRepository41Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository41Forbidden creates a UpdateRepository41Forbidden with default headers values
func NewUpdateRepository41Forbidden() *UpdateRepository41Forbidden {
	return &UpdateRepository41Forbidden{}
}

/*
UpdateRepository41Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository41Forbidden struct {
}

// IsSuccess returns true when this update repository41 forbidden response has a 2xx status code
func (o *UpdateRepository41Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository41 forbidden response has a 3xx status code
func (o *UpdateRepository41Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository41 forbidden response has a 4xx status code
func (o *UpdateRepository41Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository41 forbidden response has a 5xx status code
func (o *UpdateRepository41Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository41 forbidden response a status code equal to that given
func (o *UpdateRepository41Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update repository41 forbidden response
func (o *UpdateRepository41Forbidden) Code() int {
	return 403
}

func (o *UpdateRepository41Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] updateRepository41Forbidden", 403)
}

func (o *UpdateRepository41Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] updateRepository41Forbidden", 403)
}

func (o *UpdateRepository41Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
