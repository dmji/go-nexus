// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostRepositoriesHuggingfaceProxyReader is a Reader for the PostRepositoriesHuggingfaceProxy structure.
type PostRepositoriesHuggingfaceProxyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesHuggingfaceProxyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostRepositoriesHuggingfaceProxyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostRepositoriesHuggingfaceProxyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRepositoriesHuggingfaceProxyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/huggingface/proxy] PostRepositoriesHuggingfaceProxy", response, response.Code())
	}
}

// NewPostRepositoriesHuggingfaceProxyCreated creates a PostRepositoriesHuggingfaceProxyCreated with default headers values
func NewPostRepositoriesHuggingfaceProxyCreated() *PostRepositoriesHuggingfaceProxyCreated {
	return &PostRepositoriesHuggingfaceProxyCreated{}
}

/*
PostRepositoriesHuggingfaceProxyCreated describes a response with status code 201, with default header values.

Repository created
*/
type PostRepositoriesHuggingfaceProxyCreated struct {
}

// IsSuccess returns true when this post repositories huggingface proxy created response has a 2xx status code
func (o *PostRepositoriesHuggingfaceProxyCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post repositories huggingface proxy created response has a 3xx status code
func (o *PostRepositoriesHuggingfaceProxyCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories huggingface proxy created response has a 4xx status code
func (o *PostRepositoriesHuggingfaceProxyCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post repositories huggingface proxy created response has a 5xx status code
func (o *PostRepositoriesHuggingfaceProxyCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories huggingface proxy created response a status code equal to that given
func (o *PostRepositoriesHuggingfaceProxyCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post repositories huggingface proxy created response
func (o *PostRepositoriesHuggingfaceProxyCreated) Code() int {
	return 201
}

func (o *PostRepositoriesHuggingfaceProxyCreated) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/huggingface/proxy][%d] postRepositoriesHuggingfaceProxyCreated", 201)
}

func (o *PostRepositoriesHuggingfaceProxyCreated) String() string {
	return fmt.Sprintf("[POST /v1/repositories/huggingface/proxy][%d] postRepositoriesHuggingfaceProxyCreated", 201)
}

func (o *PostRepositoriesHuggingfaceProxyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesHuggingfaceProxyUnauthorized creates a PostRepositoriesHuggingfaceProxyUnauthorized with default headers values
func NewPostRepositoriesHuggingfaceProxyUnauthorized() *PostRepositoriesHuggingfaceProxyUnauthorized {
	return &PostRepositoriesHuggingfaceProxyUnauthorized{}
}

/*
PostRepositoriesHuggingfaceProxyUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PostRepositoriesHuggingfaceProxyUnauthorized struct {
}

// IsSuccess returns true when this post repositories huggingface proxy unauthorized response has a 2xx status code
func (o *PostRepositoriesHuggingfaceProxyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories huggingface proxy unauthorized response has a 3xx status code
func (o *PostRepositoriesHuggingfaceProxyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories huggingface proxy unauthorized response has a 4xx status code
func (o *PostRepositoriesHuggingfaceProxyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories huggingface proxy unauthorized response has a 5xx status code
func (o *PostRepositoriesHuggingfaceProxyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories huggingface proxy unauthorized response a status code equal to that given
func (o *PostRepositoriesHuggingfaceProxyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post repositories huggingface proxy unauthorized response
func (o *PostRepositoriesHuggingfaceProxyUnauthorized) Code() int {
	return 401
}

func (o *PostRepositoriesHuggingfaceProxyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/huggingface/proxy][%d] postRepositoriesHuggingfaceProxyUnauthorized", 401)
}

func (o *PostRepositoriesHuggingfaceProxyUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/huggingface/proxy][%d] postRepositoriesHuggingfaceProxyUnauthorized", 401)
}

func (o *PostRepositoriesHuggingfaceProxyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesHuggingfaceProxyForbidden creates a PostRepositoriesHuggingfaceProxyForbidden with default headers values
func NewPostRepositoriesHuggingfaceProxyForbidden() *PostRepositoriesHuggingfaceProxyForbidden {
	return &PostRepositoriesHuggingfaceProxyForbidden{}
}

/*
PostRepositoriesHuggingfaceProxyForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PostRepositoriesHuggingfaceProxyForbidden struct {
}

// IsSuccess returns true when this post repositories huggingface proxy forbidden response has a 2xx status code
func (o *PostRepositoriesHuggingfaceProxyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories huggingface proxy forbidden response has a 3xx status code
func (o *PostRepositoriesHuggingfaceProxyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories huggingface proxy forbidden response has a 4xx status code
func (o *PostRepositoriesHuggingfaceProxyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories huggingface proxy forbidden response has a 5xx status code
func (o *PostRepositoriesHuggingfaceProxyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories huggingface proxy forbidden response a status code equal to that given
func (o *PostRepositoriesHuggingfaceProxyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post repositories huggingface proxy forbidden response
func (o *PostRepositoriesHuggingfaceProxyForbidden) Code() int {
	return 403
}

func (o *PostRepositoriesHuggingfaceProxyForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/huggingface/proxy][%d] postRepositoriesHuggingfaceProxyForbidden", 403)
}

func (o *PostRepositoriesHuggingfaceProxyForbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/huggingface/proxy][%d] postRepositoriesHuggingfaceProxyForbidden", 403)
}

func (o *PostRepositoriesHuggingfaceProxyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
