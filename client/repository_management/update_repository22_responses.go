// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository22Reader is a Reader for the UpdateRepository22 structure.
type UpdateRepository22Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository22Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository22NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRepository22BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRepository22Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository22Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRepository22NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/go/proxy/{repositoryName}] updateRepository_22", response, response.Code())
	}
}

// NewUpdateRepository22NoContent creates a UpdateRepository22NoContent with default headers values
func NewUpdateRepository22NoContent() *UpdateRepository22NoContent {
	return &UpdateRepository22NoContent{}
}

/*
UpdateRepository22NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository22NoContent struct {
}

// IsSuccess returns true when this update repository22 no content response has a 2xx status code
func (o *UpdateRepository22NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository22 no content response has a 3xx status code
func (o *UpdateRepository22NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository22 no content response has a 4xx status code
func (o *UpdateRepository22NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository22 no content response has a 5xx status code
func (o *UpdateRepository22NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository22 no content response a status code equal to that given
func (o *UpdateRepository22NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update repository22 no content response
func (o *UpdateRepository22NoContent) Code() int {
	return 204
}

func (o *UpdateRepository22NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository22NoContent", 204)
}

func (o *UpdateRepository22NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository22NoContent", 204)
}

func (o *UpdateRepository22NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository22BadRequest creates a UpdateRepository22BadRequest with default headers values
func NewUpdateRepository22BadRequest() *UpdateRepository22BadRequest {
	return &UpdateRepository22BadRequest{}
}

/*
UpdateRepository22BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateRepository22BadRequest struct {
}

// IsSuccess returns true when this update repository22 bad request response has a 2xx status code
func (o *UpdateRepository22BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository22 bad request response has a 3xx status code
func (o *UpdateRepository22BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository22 bad request response has a 4xx status code
func (o *UpdateRepository22BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository22 bad request response has a 5xx status code
func (o *UpdateRepository22BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository22 bad request response a status code equal to that given
func (o *UpdateRepository22BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update repository22 bad request response
func (o *UpdateRepository22BadRequest) Code() int {
	return 400
}

func (o *UpdateRepository22BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository22BadRequest", 400)
}

func (o *UpdateRepository22BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository22BadRequest", 400)
}

func (o *UpdateRepository22BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository22Unauthorized creates a UpdateRepository22Unauthorized with default headers values
func NewUpdateRepository22Unauthorized() *UpdateRepository22Unauthorized {
	return &UpdateRepository22Unauthorized{}
}

/*
UpdateRepository22Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository22Unauthorized struct {
}

// IsSuccess returns true when this update repository22 unauthorized response has a 2xx status code
func (o *UpdateRepository22Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository22 unauthorized response has a 3xx status code
func (o *UpdateRepository22Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository22 unauthorized response has a 4xx status code
func (o *UpdateRepository22Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository22 unauthorized response has a 5xx status code
func (o *UpdateRepository22Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository22 unauthorized response a status code equal to that given
func (o *UpdateRepository22Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update repository22 unauthorized response
func (o *UpdateRepository22Unauthorized) Code() int {
	return 401
}

func (o *UpdateRepository22Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository22Unauthorized", 401)
}

func (o *UpdateRepository22Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository22Unauthorized", 401)
}

func (o *UpdateRepository22Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository22Forbidden creates a UpdateRepository22Forbidden with default headers values
func NewUpdateRepository22Forbidden() *UpdateRepository22Forbidden {
	return &UpdateRepository22Forbidden{}
}

/*
UpdateRepository22Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository22Forbidden struct {
}

// IsSuccess returns true when this update repository22 forbidden response has a 2xx status code
func (o *UpdateRepository22Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository22 forbidden response has a 3xx status code
func (o *UpdateRepository22Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository22 forbidden response has a 4xx status code
func (o *UpdateRepository22Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository22 forbidden response has a 5xx status code
func (o *UpdateRepository22Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository22 forbidden response a status code equal to that given
func (o *UpdateRepository22Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update repository22 forbidden response
func (o *UpdateRepository22Forbidden) Code() int {
	return 403
}

func (o *UpdateRepository22Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository22Forbidden", 403)
}

func (o *UpdateRepository22Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository22Forbidden", 403)
}

func (o *UpdateRepository22Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository22NotFound creates a UpdateRepository22NotFound with default headers values
func NewUpdateRepository22NotFound() *UpdateRepository22NotFound {
	return &UpdateRepository22NotFound{}
}

/*
UpdateRepository22NotFound describes a response with status code 404, with default header values.

Repository not found
*/
type UpdateRepository22NotFound struct {
}

// IsSuccess returns true when this update repository22 not found response has a 2xx status code
func (o *UpdateRepository22NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository22 not found response has a 3xx status code
func (o *UpdateRepository22NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository22 not found response has a 4xx status code
func (o *UpdateRepository22NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository22 not found response has a 5xx status code
func (o *UpdateRepository22NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository22 not found response a status code equal to that given
func (o *UpdateRepository22NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update repository22 not found response
func (o *UpdateRepository22NotFound) Code() int {
	return 404
}

func (o *UpdateRepository22NotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository22NotFound", 404)
}

func (o *UpdateRepository22NotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository22NotFound", 404)
}

func (o *UpdateRepository22NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
