// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesCocoapodsProxyByRepositoryNameReader is a Reader for the PutRepositoriesCocoapodsProxyByRepositoryName structure.
type PutRepositoriesCocoapodsProxyByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesCocoapodsProxyByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesCocoapodsProxyByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesCocoapodsProxyByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}] PutRepositoriesCocoapodsProxyByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesCocoapodsProxyByRepositoryNameNoContent creates a PutRepositoriesCocoapodsProxyByRepositoryNameNoContent with default headers values
func NewPutRepositoriesCocoapodsProxyByRepositoryNameNoContent() *PutRepositoriesCocoapodsProxyByRepositoryNameNoContent {
	return &PutRepositoriesCocoapodsProxyByRepositoryNameNoContent{}
}

/*
PutRepositoriesCocoapodsProxyByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesCocoapodsProxyByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories cocoapods proxy by repository name no content response has a 2xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories cocoapods proxy by repository name no content response has a 3xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cocoapods proxy by repository name no content response has a 4xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories cocoapods proxy by repository name no content response has a 5xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cocoapods proxy by repository name no content response a status code equal to that given
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories cocoapods proxy by repository name no content response
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCocoapodsProxyByRepositoryNameBadRequest creates a PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesCocoapodsProxyByRepositoryNameBadRequest() *PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest {
	return &PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest{}
}

/*
PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories cocoapods proxy by repository name bad request response has a 2xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cocoapods proxy by repository name bad request response has a 3xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cocoapods proxy by repository name bad request response has a 4xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cocoapods proxy by repository name bad request response has a 5xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cocoapods proxy by repository name bad request response a status code equal to that given
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories cocoapods proxy by repository name bad request response
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized creates a PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized() *PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized {
	return &PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories cocoapods proxy by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cocoapods proxy by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cocoapods proxy by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cocoapods proxy by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cocoapods proxy by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories cocoapods proxy by repository name unauthorized response
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCocoapodsProxyByRepositoryNameForbidden creates a PutRepositoriesCocoapodsProxyByRepositoryNameForbidden with default headers values
func NewPutRepositoriesCocoapodsProxyByRepositoryNameForbidden() *PutRepositoriesCocoapodsProxyByRepositoryNameForbidden {
	return &PutRepositoriesCocoapodsProxyByRepositoryNameForbidden{}
}

/*
PutRepositoriesCocoapodsProxyByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesCocoapodsProxyByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories cocoapods proxy by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cocoapods proxy by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cocoapods proxy by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cocoapods proxy by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cocoapods proxy by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories cocoapods proxy by repository name forbidden response
func (o *PutRepositoriesCocoapodsProxyByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cocoapods/proxy/{repositoryName}][%d] putRepositoriesCocoapodsProxyByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesCocoapodsProxyByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
