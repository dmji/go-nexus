// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesRubygemsProxyByRepositorynameReader is a Reader for the PutRepositoriesRubygemsProxyByRepositoryname structure.
type PutRepositoriesRubygemsProxyByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesRubygemsProxyByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesRubygemsProxyByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesRubygemsProxyByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesRubygemsProxyByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesRubygemsProxyByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/rubygems/proxy/{repositoryName}] PutRepositoriesRubygemsProxyByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesRubygemsProxyByRepositorynameNoContent creates a PutRepositoriesRubygemsProxyByRepositorynameNoContent with default headers values
func NewPutRepositoriesRubygemsProxyByRepositorynameNoContent() *PutRepositoriesRubygemsProxyByRepositorynameNoContent {
	return &PutRepositoriesRubygemsProxyByRepositorynameNoContent{}
}

/*
PutRepositoriesRubygemsProxyByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesRubygemsProxyByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories rubygems proxy by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories rubygems proxy by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems proxy by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories rubygems proxy by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems proxy by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesRubygemsProxyByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories rubygems proxy by repositoryname no content response
func (o *PutRepositoriesRubygemsProxyByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRubygemsProxyByRepositorynameBadRequest creates a PutRepositoriesRubygemsProxyByRepositorynameBadRequest with default headers values
func NewPutRepositoriesRubygemsProxyByRepositorynameBadRequest() *PutRepositoriesRubygemsProxyByRepositorynameBadRequest {
	return &PutRepositoriesRubygemsProxyByRepositorynameBadRequest{}
}

/*
PutRepositoriesRubygemsProxyByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesRubygemsProxyByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories rubygems proxy by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories rubygems proxy by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems proxy by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories rubygems proxy by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems proxy by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesRubygemsProxyByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories rubygems proxy by repositoryname bad request response
func (o *PutRepositoriesRubygemsProxyByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRubygemsProxyByRepositorynameUnauthorized creates a PutRepositoriesRubygemsProxyByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesRubygemsProxyByRepositorynameUnauthorized() *PutRepositoriesRubygemsProxyByRepositorynameUnauthorized {
	return &PutRepositoriesRubygemsProxyByRepositorynameUnauthorized{}
}

/*
PutRepositoriesRubygemsProxyByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesRubygemsProxyByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories rubygems proxy by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories rubygems proxy by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems proxy by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories rubygems proxy by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems proxy by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesRubygemsProxyByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories rubygems proxy by repositoryname unauthorized response
func (o *PutRepositoriesRubygemsProxyByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRubygemsProxyByRepositorynameForbidden creates a PutRepositoriesRubygemsProxyByRepositorynameForbidden with default headers values
func NewPutRepositoriesRubygemsProxyByRepositorynameForbidden() *PutRepositoriesRubygemsProxyByRepositorynameForbidden {
	return &PutRepositoriesRubygemsProxyByRepositorynameForbidden{}
}

/*
PutRepositoriesRubygemsProxyByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesRubygemsProxyByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories rubygems proxy by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories rubygems proxy by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems proxy by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories rubygems proxy by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesRubygemsProxyByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems proxy by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesRubygemsProxyByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories rubygems proxy by repositoryname forbidden response
func (o *PutRepositoriesRubygemsProxyByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesRubygemsProxyByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
