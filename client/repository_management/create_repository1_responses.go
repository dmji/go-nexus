// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateRepository1Reader is a Reader for the CreateRepository1 structure.
type CreateRepository1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRepository1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRepository1Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateRepository1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRepository1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateRepository1MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/apt/proxy] createRepository_1", response, response.Code())
	}
}

// NewCreateRepository1Created creates a CreateRepository1Created with default headers values
func NewCreateRepository1Created() *CreateRepository1Created {
	return &CreateRepository1Created{}
}

/*
CreateRepository1Created describes a response with status code 201, with default header values.

Repository created
*/
type CreateRepository1Created struct {
}

// IsSuccess returns true when this create repository1 created response has a 2xx status code
func (o *CreateRepository1Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create repository1 created response has a 3xx status code
func (o *CreateRepository1Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository1 created response has a 4xx status code
func (o *CreateRepository1Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this create repository1 created response has a 5xx status code
func (o *CreateRepository1Created) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository1 created response a status code equal to that given
func (o *CreateRepository1Created) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create repository1 created response
func (o *CreateRepository1Created) Code() int {
	return 201
}

func (o *CreateRepository1Created) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository1Created", 201)
}

func (o *CreateRepository1Created) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository1Created", 201)
}

func (o *CreateRepository1Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository1Unauthorized creates a CreateRepository1Unauthorized with default headers values
func NewCreateRepository1Unauthorized() *CreateRepository1Unauthorized {
	return &CreateRepository1Unauthorized{}
}

/*
CreateRepository1Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type CreateRepository1Unauthorized struct {
}

// IsSuccess returns true when this create repository1 unauthorized response has a 2xx status code
func (o *CreateRepository1Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository1 unauthorized response has a 3xx status code
func (o *CreateRepository1Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository1 unauthorized response has a 4xx status code
func (o *CreateRepository1Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository1 unauthorized response has a 5xx status code
func (o *CreateRepository1Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository1 unauthorized response a status code equal to that given
func (o *CreateRepository1Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create repository1 unauthorized response
func (o *CreateRepository1Unauthorized) Code() int {
	return 401
}

func (o *CreateRepository1Unauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository1Unauthorized", 401)
}

func (o *CreateRepository1Unauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository1Unauthorized", 401)
}

func (o *CreateRepository1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository1Forbidden creates a CreateRepository1Forbidden with default headers values
func NewCreateRepository1Forbidden() *CreateRepository1Forbidden {
	return &CreateRepository1Forbidden{}
}

/*
CreateRepository1Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type CreateRepository1Forbidden struct {
}

// IsSuccess returns true when this create repository1 forbidden response has a 2xx status code
func (o *CreateRepository1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository1 forbidden response has a 3xx status code
func (o *CreateRepository1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository1 forbidden response has a 4xx status code
func (o *CreateRepository1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository1 forbidden response has a 5xx status code
func (o *CreateRepository1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository1 forbidden response a status code equal to that given
func (o *CreateRepository1Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create repository1 forbidden response
func (o *CreateRepository1Forbidden) Code() int {
	return 403
}

func (o *CreateRepository1Forbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository1Forbidden", 403)
}

func (o *CreateRepository1Forbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository1Forbidden", 403)
}

func (o *CreateRepository1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository1MethodNotAllowed creates a CreateRepository1MethodNotAllowed with default headers values
func NewCreateRepository1MethodNotAllowed() *CreateRepository1MethodNotAllowed {
	return &CreateRepository1MethodNotAllowed{}
}

/*
CreateRepository1MethodNotAllowed describes a response with status code 405, with default header values.

Feature is disabled in High Availability
*/
type CreateRepository1MethodNotAllowed struct {
}

// IsSuccess returns true when this create repository1 method not allowed response has a 2xx status code
func (o *CreateRepository1MethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository1 method not allowed response has a 3xx status code
func (o *CreateRepository1MethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository1 method not allowed response has a 4xx status code
func (o *CreateRepository1MethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository1 method not allowed response has a 5xx status code
func (o *CreateRepository1MethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository1 method not allowed response a status code equal to that given
func (o *CreateRepository1MethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create repository1 method not allowed response
func (o *CreateRepository1MethodNotAllowed) Code() int {
	return 405
}

func (o *CreateRepository1MethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository1MethodNotAllowed", 405)
}

func (o *CreateRepository1MethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository1MethodNotAllowed", 405)
}

func (o *CreateRepository1MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
