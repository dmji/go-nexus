// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostRepositoriesAptHostedReader is a Reader for the PostRepositoriesAptHosted structure.
type PostRepositoriesAptHostedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesAptHostedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostRepositoriesAptHostedCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostRepositoriesAptHostedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRepositoriesAptHostedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostRepositoriesAptHostedMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/apt/hosted] PostRepositoriesAptHosted", response, response.Code())
	}
}

// NewPostRepositoriesAptHostedCreated creates a PostRepositoriesAptHostedCreated with default headers values
func NewPostRepositoriesAptHostedCreated() *PostRepositoriesAptHostedCreated {
	return &PostRepositoriesAptHostedCreated{}
}

/*
PostRepositoriesAptHostedCreated describes a response with status code 201, with default header values.

Repository created
*/
type PostRepositoriesAptHostedCreated struct {
}

// IsSuccess returns true when this post repositories apt hosted created response has a 2xx status code
func (o *PostRepositoriesAptHostedCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post repositories apt hosted created response has a 3xx status code
func (o *PostRepositoriesAptHostedCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories apt hosted created response has a 4xx status code
func (o *PostRepositoriesAptHostedCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post repositories apt hosted created response has a 5xx status code
func (o *PostRepositoriesAptHostedCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories apt hosted created response a status code equal to that given
func (o *PostRepositoriesAptHostedCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post repositories apt hosted created response
func (o *PostRepositoriesAptHostedCreated) Code() int {
	return 201
}

func (o *PostRepositoriesAptHostedCreated) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/hosted][%d] postRepositoriesAptHostedCreated", 201)
}

func (o *PostRepositoriesAptHostedCreated) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/hosted][%d] postRepositoriesAptHostedCreated", 201)
}

func (o *PostRepositoriesAptHostedCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesAptHostedUnauthorized creates a PostRepositoriesAptHostedUnauthorized with default headers values
func NewPostRepositoriesAptHostedUnauthorized() *PostRepositoriesAptHostedUnauthorized {
	return &PostRepositoriesAptHostedUnauthorized{}
}

/*
PostRepositoriesAptHostedUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PostRepositoriesAptHostedUnauthorized struct {
}

// IsSuccess returns true when this post repositories apt hosted unauthorized response has a 2xx status code
func (o *PostRepositoriesAptHostedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories apt hosted unauthorized response has a 3xx status code
func (o *PostRepositoriesAptHostedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories apt hosted unauthorized response has a 4xx status code
func (o *PostRepositoriesAptHostedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories apt hosted unauthorized response has a 5xx status code
func (o *PostRepositoriesAptHostedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories apt hosted unauthorized response a status code equal to that given
func (o *PostRepositoriesAptHostedUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post repositories apt hosted unauthorized response
func (o *PostRepositoriesAptHostedUnauthorized) Code() int {
	return 401
}

func (o *PostRepositoriesAptHostedUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/hosted][%d] postRepositoriesAptHostedUnauthorized", 401)
}

func (o *PostRepositoriesAptHostedUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/hosted][%d] postRepositoriesAptHostedUnauthorized", 401)
}

func (o *PostRepositoriesAptHostedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesAptHostedForbidden creates a PostRepositoriesAptHostedForbidden with default headers values
func NewPostRepositoriesAptHostedForbidden() *PostRepositoriesAptHostedForbidden {
	return &PostRepositoriesAptHostedForbidden{}
}

/*
PostRepositoriesAptHostedForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PostRepositoriesAptHostedForbidden struct {
}

// IsSuccess returns true when this post repositories apt hosted forbidden response has a 2xx status code
func (o *PostRepositoriesAptHostedForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories apt hosted forbidden response has a 3xx status code
func (o *PostRepositoriesAptHostedForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories apt hosted forbidden response has a 4xx status code
func (o *PostRepositoriesAptHostedForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories apt hosted forbidden response has a 5xx status code
func (o *PostRepositoriesAptHostedForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories apt hosted forbidden response a status code equal to that given
func (o *PostRepositoriesAptHostedForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post repositories apt hosted forbidden response
func (o *PostRepositoriesAptHostedForbidden) Code() int {
	return 403
}

func (o *PostRepositoriesAptHostedForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/hosted][%d] postRepositoriesAptHostedForbidden", 403)
}

func (o *PostRepositoriesAptHostedForbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/hosted][%d] postRepositoriesAptHostedForbidden", 403)
}

func (o *PostRepositoriesAptHostedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesAptHostedMethodNotAllowed creates a PostRepositoriesAptHostedMethodNotAllowed with default headers values
func NewPostRepositoriesAptHostedMethodNotAllowed() *PostRepositoriesAptHostedMethodNotAllowed {
	return &PostRepositoriesAptHostedMethodNotAllowed{}
}

/*
PostRepositoriesAptHostedMethodNotAllowed describes a response with status code 405, with default header values.

Feature is disabled in High Availability
*/
type PostRepositoriesAptHostedMethodNotAllowed struct {
}

// IsSuccess returns true when this post repositories apt hosted method not allowed response has a 2xx status code
func (o *PostRepositoriesAptHostedMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories apt hosted method not allowed response has a 3xx status code
func (o *PostRepositoriesAptHostedMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories apt hosted method not allowed response has a 4xx status code
func (o *PostRepositoriesAptHostedMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories apt hosted method not allowed response has a 5xx status code
func (o *PostRepositoriesAptHostedMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories apt hosted method not allowed response a status code equal to that given
func (o *PostRepositoriesAptHostedMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the post repositories apt hosted method not allowed response
func (o *PostRepositoriesAptHostedMethodNotAllowed) Code() int {
	return 405
}

func (o *PostRepositoriesAptHostedMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/hosted][%d] postRepositoriesAptHostedMethodNotAllowed", 405)
}

func (o *PostRepositoriesAptHostedMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/hosted][%d] postRepositoriesAptHostedMethodNotAllowed", 405)
}

func (o *PostRepositoriesAptHostedMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
