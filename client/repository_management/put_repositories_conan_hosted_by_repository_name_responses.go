// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesConanHostedByRepositoryNameReader is a Reader for the PutRepositoriesConanHostedByRepositoryName structure.
type PutRepositoriesConanHostedByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesConanHostedByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesConanHostedByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesConanHostedByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesConanHostedByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesConanHostedByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRepositoriesConanHostedByRepositoryNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/conan/hosted/{repositoryName}] PutRepositoriesConanHostedByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesConanHostedByRepositoryNameNoContent creates a PutRepositoriesConanHostedByRepositoryNameNoContent with default headers values
func NewPutRepositoriesConanHostedByRepositoryNameNoContent() *PutRepositoriesConanHostedByRepositoryNameNoContent {
	return &PutRepositoriesConanHostedByRepositoryNameNoContent{}
}

/*
PutRepositoriesConanHostedByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesConanHostedByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories conan hosted by repository name no content response has a 2xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories conan hosted by repository name no content response has a 3xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan hosted by repository name no content response has a 4xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories conan hosted by repository name no content response has a 5xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan hosted by repository name no content response a status code equal to that given
func (o *PutRepositoriesConanHostedByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories conan hosted by repository name no content response
func (o *PutRepositoriesConanHostedByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesConanHostedByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesConanHostedByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesConanHostedByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanHostedByRepositoryNameBadRequest creates a PutRepositoriesConanHostedByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesConanHostedByRepositoryNameBadRequest() *PutRepositoriesConanHostedByRepositoryNameBadRequest {
	return &PutRepositoriesConanHostedByRepositoryNameBadRequest{}
}

/*
PutRepositoriesConanHostedByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesConanHostedByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories conan hosted by repository name bad request response has a 2xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan hosted by repository name bad request response has a 3xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan hosted by repository name bad request response has a 4xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan hosted by repository name bad request response has a 5xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan hosted by repository name bad request response a status code equal to that given
func (o *PutRepositoriesConanHostedByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories conan hosted by repository name bad request response
func (o *PutRepositoriesConanHostedByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesConanHostedByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesConanHostedByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesConanHostedByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanHostedByRepositoryNameUnauthorized creates a PutRepositoriesConanHostedByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesConanHostedByRepositoryNameUnauthorized() *PutRepositoriesConanHostedByRepositoryNameUnauthorized {
	return &PutRepositoriesConanHostedByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesConanHostedByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesConanHostedByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories conan hosted by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan hosted by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan hosted by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan hosted by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan hosted by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesConanHostedByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories conan hosted by repository name unauthorized response
func (o *PutRepositoriesConanHostedByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesConanHostedByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesConanHostedByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesConanHostedByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanHostedByRepositoryNameForbidden creates a PutRepositoriesConanHostedByRepositoryNameForbidden with default headers values
func NewPutRepositoriesConanHostedByRepositoryNameForbidden() *PutRepositoriesConanHostedByRepositoryNameForbidden {
	return &PutRepositoriesConanHostedByRepositoryNameForbidden{}
}

/*
PutRepositoriesConanHostedByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesConanHostedByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories conan hosted by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan hosted by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan hosted by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan hosted by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan hosted by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesConanHostedByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories conan hosted by repository name forbidden response
func (o *PutRepositoriesConanHostedByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesConanHostedByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesConanHostedByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesConanHostedByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanHostedByRepositoryNameNotFound creates a PutRepositoriesConanHostedByRepositoryNameNotFound with default headers values
func NewPutRepositoriesConanHostedByRepositoryNameNotFound() *PutRepositoriesConanHostedByRepositoryNameNotFound {
	return &PutRepositoriesConanHostedByRepositoryNameNotFound{}
}

/*
PutRepositoriesConanHostedByRepositoryNameNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type PutRepositoriesConanHostedByRepositoryNameNotFound struct {
}

// IsSuccess returns true when this put repositories conan hosted by repository name not found response has a 2xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan hosted by repository name not found response has a 3xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan hosted by repository name not found response has a 4xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan hosted by repository name not found response has a 5xx status code
func (o *PutRepositoriesConanHostedByRepositoryNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan hosted by repository name not found response a status code equal to that given
func (o *PutRepositoriesConanHostedByRepositoryNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put repositories conan hosted by repository name not found response
func (o *PutRepositoriesConanHostedByRepositoryNameNotFound) Code() int {
	return 404
}

func (o *PutRepositoriesConanHostedByRepositoryNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositoryNameNotFound", 404)
}

func (o *PutRepositoriesConanHostedByRepositoryNameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/hosted/{repositoryName}][%d] putRepositoriesConanHostedByRepositoryNameNotFound", 404)
}

func (o *PutRepositoriesConanHostedByRepositoryNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
