// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesConanProxyByRepositorynameReader is a Reader for the PutRepositoriesConanProxyByRepositoryname structure.
type PutRepositoriesConanProxyByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesConanProxyByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesConanProxyByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesConanProxyByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesConanProxyByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesConanProxyByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRepositoriesConanProxyByRepositorynameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/conan/proxy/{repositoryName}] PutRepositoriesConanProxyByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesConanProxyByRepositorynameNoContent creates a PutRepositoriesConanProxyByRepositorynameNoContent with default headers values
func NewPutRepositoriesConanProxyByRepositorynameNoContent() *PutRepositoriesConanProxyByRepositorynameNoContent {
	return &PutRepositoriesConanProxyByRepositorynameNoContent{}
}

/*
PutRepositoriesConanProxyByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesConanProxyByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories conan proxy by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesConanProxyByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories conan proxy by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesConanProxyByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan proxy by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesConanProxyByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories conan proxy by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesConanProxyByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan proxy by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesConanProxyByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories conan proxy by repositoryname no content response
func (o *PutRepositoriesConanProxyByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesConanProxyByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/proxy/{repositoryName}][%d] putRepositoriesConanProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesConanProxyByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/proxy/{repositoryName}][%d] putRepositoriesConanProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesConanProxyByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanProxyByRepositorynameBadRequest creates a PutRepositoriesConanProxyByRepositorynameBadRequest with default headers values
func NewPutRepositoriesConanProxyByRepositorynameBadRequest() *PutRepositoriesConanProxyByRepositorynameBadRequest {
	return &PutRepositoriesConanProxyByRepositorynameBadRequest{}
}

/*
PutRepositoriesConanProxyByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesConanProxyByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories conan proxy by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesConanProxyByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan proxy by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesConanProxyByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan proxy by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesConanProxyByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan proxy by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesConanProxyByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan proxy by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesConanProxyByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories conan proxy by repositoryname bad request response
func (o *PutRepositoriesConanProxyByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesConanProxyByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/proxy/{repositoryName}][%d] putRepositoriesConanProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesConanProxyByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/proxy/{repositoryName}][%d] putRepositoriesConanProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesConanProxyByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanProxyByRepositorynameUnauthorized creates a PutRepositoriesConanProxyByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesConanProxyByRepositorynameUnauthorized() *PutRepositoriesConanProxyByRepositorynameUnauthorized {
	return &PutRepositoriesConanProxyByRepositorynameUnauthorized{}
}

/*
PutRepositoriesConanProxyByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesConanProxyByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories conan proxy by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesConanProxyByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan proxy by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesConanProxyByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan proxy by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesConanProxyByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan proxy by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesConanProxyByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan proxy by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesConanProxyByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories conan proxy by repositoryname unauthorized response
func (o *PutRepositoriesConanProxyByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesConanProxyByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/proxy/{repositoryName}][%d] putRepositoriesConanProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesConanProxyByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/proxy/{repositoryName}][%d] putRepositoriesConanProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesConanProxyByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanProxyByRepositorynameForbidden creates a PutRepositoriesConanProxyByRepositorynameForbidden with default headers values
func NewPutRepositoriesConanProxyByRepositorynameForbidden() *PutRepositoriesConanProxyByRepositorynameForbidden {
	return &PutRepositoriesConanProxyByRepositorynameForbidden{}
}

/*
PutRepositoriesConanProxyByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesConanProxyByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories conan proxy by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesConanProxyByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan proxy by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesConanProxyByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan proxy by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesConanProxyByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan proxy by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesConanProxyByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan proxy by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesConanProxyByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories conan proxy by repositoryname forbidden response
func (o *PutRepositoriesConanProxyByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesConanProxyByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/proxy/{repositoryName}][%d] putRepositoriesConanProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesConanProxyByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/proxy/{repositoryName}][%d] putRepositoriesConanProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesConanProxyByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesConanProxyByRepositorynameNotFound creates a PutRepositoriesConanProxyByRepositorynameNotFound with default headers values
func NewPutRepositoriesConanProxyByRepositorynameNotFound() *PutRepositoriesConanProxyByRepositorynameNotFound {
	return &PutRepositoriesConanProxyByRepositorynameNotFound{}
}

/*
PutRepositoriesConanProxyByRepositorynameNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type PutRepositoriesConanProxyByRepositorynameNotFound struct {
}

// IsSuccess returns true when this put repositories conan proxy by repositoryname not found response has a 2xx status code
func (o *PutRepositoriesConanProxyByRepositorynameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories conan proxy by repositoryname not found response has a 3xx status code
func (o *PutRepositoriesConanProxyByRepositorynameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories conan proxy by repositoryname not found response has a 4xx status code
func (o *PutRepositoriesConanProxyByRepositorynameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories conan proxy by repositoryname not found response has a 5xx status code
func (o *PutRepositoriesConanProxyByRepositorynameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories conan proxy by repositoryname not found response a status code equal to that given
func (o *PutRepositoriesConanProxyByRepositorynameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put repositories conan proxy by repositoryname not found response
func (o *PutRepositoriesConanProxyByRepositorynameNotFound) Code() int {
	return 404
}

func (o *PutRepositoriesConanProxyByRepositorynameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/proxy/{repositoryName}][%d] putRepositoriesConanProxyByRepositorynameNotFound", 404)
}

func (o *PutRepositoriesConanProxyByRepositorynameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/conan/proxy/{repositoryName}][%d] putRepositoriesConanProxyByRepositorynameNotFound", 404)
}

func (o *PutRepositoriesConanProxyByRepositorynameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
