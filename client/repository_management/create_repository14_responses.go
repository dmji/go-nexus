// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateRepository14Reader is a Reader for the CreateRepository14 structure.
type CreateRepository14Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRepository14Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRepository14Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateRepository14Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRepository14Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/conan/hosted] createRepository_14", response, response.Code())
	}
}

// NewCreateRepository14Created creates a CreateRepository14Created with default headers values
func NewCreateRepository14Created() *CreateRepository14Created {
	return &CreateRepository14Created{}
}

/*
CreateRepository14Created describes a response with status code 201, with default header values.

Repository created
*/
type CreateRepository14Created struct {
}

// IsSuccess returns true when this create repository14 created response has a 2xx status code
func (o *CreateRepository14Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create repository14 created response has a 3xx status code
func (o *CreateRepository14Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository14 created response has a 4xx status code
func (o *CreateRepository14Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this create repository14 created response has a 5xx status code
func (o *CreateRepository14Created) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository14 created response a status code equal to that given
func (o *CreateRepository14Created) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create repository14 created response
func (o *CreateRepository14Created) Code() int {
	return 201
}

func (o *CreateRepository14Created) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/conan/hosted][%d] createRepository14Created", 201)
}

func (o *CreateRepository14Created) String() string {
	return fmt.Sprintf("[POST /v1/repositories/conan/hosted][%d] createRepository14Created", 201)
}

func (o *CreateRepository14Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository14Unauthorized creates a CreateRepository14Unauthorized with default headers values
func NewCreateRepository14Unauthorized() *CreateRepository14Unauthorized {
	return &CreateRepository14Unauthorized{}
}

/*
CreateRepository14Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type CreateRepository14Unauthorized struct {
}

// IsSuccess returns true when this create repository14 unauthorized response has a 2xx status code
func (o *CreateRepository14Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository14 unauthorized response has a 3xx status code
func (o *CreateRepository14Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository14 unauthorized response has a 4xx status code
func (o *CreateRepository14Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository14 unauthorized response has a 5xx status code
func (o *CreateRepository14Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository14 unauthorized response a status code equal to that given
func (o *CreateRepository14Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create repository14 unauthorized response
func (o *CreateRepository14Unauthorized) Code() int {
	return 401
}

func (o *CreateRepository14Unauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/conan/hosted][%d] createRepository14Unauthorized", 401)
}

func (o *CreateRepository14Unauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/conan/hosted][%d] createRepository14Unauthorized", 401)
}

func (o *CreateRepository14Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository14Forbidden creates a CreateRepository14Forbidden with default headers values
func NewCreateRepository14Forbidden() *CreateRepository14Forbidden {
	return &CreateRepository14Forbidden{}
}

/*
CreateRepository14Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type CreateRepository14Forbidden struct {
}

// IsSuccess returns true when this create repository14 forbidden response has a 2xx status code
func (o *CreateRepository14Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository14 forbidden response has a 3xx status code
func (o *CreateRepository14Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository14 forbidden response has a 4xx status code
func (o *CreateRepository14Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository14 forbidden response has a 5xx status code
func (o *CreateRepository14Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository14 forbidden response a status code equal to that given
func (o *CreateRepository14Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create repository14 forbidden response
func (o *CreateRepository14Forbidden) Code() int {
	return 403
}

func (o *CreateRepository14Forbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/conan/hosted][%d] createRepository14Forbidden", 403)
}

func (o *CreateRepository14Forbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/conan/hosted][%d] createRepository14Forbidden", 403)
}

func (o *CreateRepository14Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
