// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository27Reader is a Reader for the UpdateRepository27 structure.
type UpdateRepository27Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository27Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository27NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRepository27BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRepository27Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository27Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/npm/hosted/{repositoryName}] updateRepository_27", response, response.Code())
	}
}

// NewUpdateRepository27NoContent creates a UpdateRepository27NoContent with default headers values
func NewUpdateRepository27NoContent() *UpdateRepository27NoContent {
	return &UpdateRepository27NoContent{}
}

/*
UpdateRepository27NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository27NoContent struct {
}

// IsSuccess returns true when this update repository27 no content response has a 2xx status code
func (o *UpdateRepository27NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository27 no content response has a 3xx status code
func (o *UpdateRepository27NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository27 no content response has a 4xx status code
func (o *UpdateRepository27NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository27 no content response has a 5xx status code
func (o *UpdateRepository27NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository27 no content response a status code equal to that given
func (o *UpdateRepository27NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update repository27 no content response
func (o *UpdateRepository27NoContent) Code() int {
	return 204
}

func (o *UpdateRepository27NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository27NoContent", 204)
}

func (o *UpdateRepository27NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository27NoContent", 204)
}

func (o *UpdateRepository27NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository27BadRequest creates a UpdateRepository27BadRequest with default headers values
func NewUpdateRepository27BadRequest() *UpdateRepository27BadRequest {
	return &UpdateRepository27BadRequest{}
}

/*
UpdateRepository27BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateRepository27BadRequest struct {
}

// IsSuccess returns true when this update repository27 bad request response has a 2xx status code
func (o *UpdateRepository27BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository27 bad request response has a 3xx status code
func (o *UpdateRepository27BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository27 bad request response has a 4xx status code
func (o *UpdateRepository27BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository27 bad request response has a 5xx status code
func (o *UpdateRepository27BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository27 bad request response a status code equal to that given
func (o *UpdateRepository27BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update repository27 bad request response
func (o *UpdateRepository27BadRequest) Code() int {
	return 400
}

func (o *UpdateRepository27BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository27BadRequest", 400)
}

func (o *UpdateRepository27BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository27BadRequest", 400)
}

func (o *UpdateRepository27BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository27Unauthorized creates a UpdateRepository27Unauthorized with default headers values
func NewUpdateRepository27Unauthorized() *UpdateRepository27Unauthorized {
	return &UpdateRepository27Unauthorized{}
}

/*
UpdateRepository27Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository27Unauthorized struct {
}

// IsSuccess returns true when this update repository27 unauthorized response has a 2xx status code
func (o *UpdateRepository27Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository27 unauthorized response has a 3xx status code
func (o *UpdateRepository27Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository27 unauthorized response has a 4xx status code
func (o *UpdateRepository27Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository27 unauthorized response has a 5xx status code
func (o *UpdateRepository27Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository27 unauthorized response a status code equal to that given
func (o *UpdateRepository27Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update repository27 unauthorized response
func (o *UpdateRepository27Unauthorized) Code() int {
	return 401
}

func (o *UpdateRepository27Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository27Unauthorized", 401)
}

func (o *UpdateRepository27Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository27Unauthorized", 401)
}

func (o *UpdateRepository27Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository27Forbidden creates a UpdateRepository27Forbidden with default headers values
func NewUpdateRepository27Forbidden() *UpdateRepository27Forbidden {
	return &UpdateRepository27Forbidden{}
}

/*
UpdateRepository27Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository27Forbidden struct {
}

// IsSuccess returns true when this update repository27 forbidden response has a 2xx status code
func (o *UpdateRepository27Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository27 forbidden response has a 3xx status code
func (o *UpdateRepository27Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository27 forbidden response has a 4xx status code
func (o *UpdateRepository27Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository27 forbidden response has a 5xx status code
func (o *UpdateRepository27Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository27 forbidden response a status code equal to that given
func (o *UpdateRepository27Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update repository27 forbidden response
func (o *UpdateRepository27Forbidden) Code() int {
	return 403
}

func (o *UpdateRepository27Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository27Forbidden", 403)
}

func (o *UpdateRepository27Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository27Forbidden", 403)
}

func (o *UpdateRepository27Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
