// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository37Reader is a Reader for the UpdateRepository37 structure.
type UpdateRepository37Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository37Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository37NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRepository37BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRepository37Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository37Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/r/hosted/{repositoryName}] updateRepository_37", response, response.Code())
	}
}

// NewUpdateRepository37NoContent creates a UpdateRepository37NoContent with default headers values
func NewUpdateRepository37NoContent() *UpdateRepository37NoContent {
	return &UpdateRepository37NoContent{}
}

/*
UpdateRepository37NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository37NoContent struct {
}

// IsSuccess returns true when this update repository37 no content response has a 2xx status code
func (o *UpdateRepository37NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository37 no content response has a 3xx status code
func (o *UpdateRepository37NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository37 no content response has a 4xx status code
func (o *UpdateRepository37NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository37 no content response has a 5xx status code
func (o *UpdateRepository37NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository37 no content response a status code equal to that given
func (o *UpdateRepository37NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update repository37 no content response
func (o *UpdateRepository37NoContent) Code() int {
	return 204
}

func (o *UpdateRepository37NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/hosted/{repositoryName}][%d] updateRepository37NoContent", 204)
}

func (o *UpdateRepository37NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/hosted/{repositoryName}][%d] updateRepository37NoContent", 204)
}

func (o *UpdateRepository37NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository37BadRequest creates a UpdateRepository37BadRequest with default headers values
func NewUpdateRepository37BadRequest() *UpdateRepository37BadRequest {
	return &UpdateRepository37BadRequest{}
}

/*
UpdateRepository37BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateRepository37BadRequest struct {
}

// IsSuccess returns true when this update repository37 bad request response has a 2xx status code
func (o *UpdateRepository37BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository37 bad request response has a 3xx status code
func (o *UpdateRepository37BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository37 bad request response has a 4xx status code
func (o *UpdateRepository37BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository37 bad request response has a 5xx status code
func (o *UpdateRepository37BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository37 bad request response a status code equal to that given
func (o *UpdateRepository37BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update repository37 bad request response
func (o *UpdateRepository37BadRequest) Code() int {
	return 400
}

func (o *UpdateRepository37BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/hosted/{repositoryName}][%d] updateRepository37BadRequest", 400)
}

func (o *UpdateRepository37BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/hosted/{repositoryName}][%d] updateRepository37BadRequest", 400)
}

func (o *UpdateRepository37BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository37Unauthorized creates a UpdateRepository37Unauthorized with default headers values
func NewUpdateRepository37Unauthorized() *UpdateRepository37Unauthorized {
	return &UpdateRepository37Unauthorized{}
}

/*
UpdateRepository37Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository37Unauthorized struct {
}

// IsSuccess returns true when this update repository37 unauthorized response has a 2xx status code
func (o *UpdateRepository37Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository37 unauthorized response has a 3xx status code
func (o *UpdateRepository37Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository37 unauthorized response has a 4xx status code
func (o *UpdateRepository37Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository37 unauthorized response has a 5xx status code
func (o *UpdateRepository37Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository37 unauthorized response a status code equal to that given
func (o *UpdateRepository37Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update repository37 unauthorized response
func (o *UpdateRepository37Unauthorized) Code() int {
	return 401
}

func (o *UpdateRepository37Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/hosted/{repositoryName}][%d] updateRepository37Unauthorized", 401)
}

func (o *UpdateRepository37Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/hosted/{repositoryName}][%d] updateRepository37Unauthorized", 401)
}

func (o *UpdateRepository37Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository37Forbidden creates a UpdateRepository37Forbidden with default headers values
func NewUpdateRepository37Forbidden() *UpdateRepository37Forbidden {
	return &UpdateRepository37Forbidden{}
}

/*
UpdateRepository37Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository37Forbidden struct {
}

// IsSuccess returns true when this update repository37 forbidden response has a 2xx status code
func (o *UpdateRepository37Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository37 forbidden response has a 3xx status code
func (o *UpdateRepository37Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository37 forbidden response has a 4xx status code
func (o *UpdateRepository37Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository37 forbidden response has a 5xx status code
func (o *UpdateRepository37Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository37 forbidden response a status code equal to that given
func (o *UpdateRepository37Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update repository37 forbidden response
func (o *UpdateRepository37Forbidden) Code() int {
	return 403
}

func (o *UpdateRepository37Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/hosted/{repositoryName}][%d] updateRepository37Forbidden", 403)
}

func (o *UpdateRepository37Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/hosted/{repositoryName}][%d] updateRepository37Forbidden", 403)
}

func (o *UpdateRepository37Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
