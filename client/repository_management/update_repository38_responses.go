// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository38Reader is a Reader for the UpdateRepository38 structure.
type UpdateRepository38Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository38Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository38NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRepository38BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRepository38Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository38Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRepository38NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/r/proxy/{repositoryName}] updateRepository_38", response, response.Code())
	}
}

// NewUpdateRepository38NoContent creates a UpdateRepository38NoContent with default headers values
func NewUpdateRepository38NoContent() *UpdateRepository38NoContent {
	return &UpdateRepository38NoContent{}
}

/*
UpdateRepository38NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository38NoContent struct {
}

// IsSuccess returns true when this update repository38 no content response has a 2xx status code
func (o *UpdateRepository38NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository38 no content response has a 3xx status code
func (o *UpdateRepository38NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository38 no content response has a 4xx status code
func (o *UpdateRepository38NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository38 no content response has a 5xx status code
func (o *UpdateRepository38NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository38 no content response a status code equal to that given
func (o *UpdateRepository38NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update repository38 no content response
func (o *UpdateRepository38NoContent) Code() int {
	return 204
}

func (o *UpdateRepository38NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] updateRepository38NoContent", 204)
}

func (o *UpdateRepository38NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] updateRepository38NoContent", 204)
}

func (o *UpdateRepository38NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository38BadRequest creates a UpdateRepository38BadRequest with default headers values
func NewUpdateRepository38BadRequest() *UpdateRepository38BadRequest {
	return &UpdateRepository38BadRequest{}
}

/*
UpdateRepository38BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateRepository38BadRequest struct {
}

// IsSuccess returns true when this update repository38 bad request response has a 2xx status code
func (o *UpdateRepository38BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository38 bad request response has a 3xx status code
func (o *UpdateRepository38BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository38 bad request response has a 4xx status code
func (o *UpdateRepository38BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository38 bad request response has a 5xx status code
func (o *UpdateRepository38BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository38 bad request response a status code equal to that given
func (o *UpdateRepository38BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update repository38 bad request response
func (o *UpdateRepository38BadRequest) Code() int {
	return 400
}

func (o *UpdateRepository38BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] updateRepository38BadRequest", 400)
}

func (o *UpdateRepository38BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] updateRepository38BadRequest", 400)
}

func (o *UpdateRepository38BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository38Unauthorized creates a UpdateRepository38Unauthorized with default headers values
func NewUpdateRepository38Unauthorized() *UpdateRepository38Unauthorized {
	return &UpdateRepository38Unauthorized{}
}

/*
UpdateRepository38Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository38Unauthorized struct {
}

// IsSuccess returns true when this update repository38 unauthorized response has a 2xx status code
func (o *UpdateRepository38Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository38 unauthorized response has a 3xx status code
func (o *UpdateRepository38Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository38 unauthorized response has a 4xx status code
func (o *UpdateRepository38Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository38 unauthorized response has a 5xx status code
func (o *UpdateRepository38Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository38 unauthorized response a status code equal to that given
func (o *UpdateRepository38Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update repository38 unauthorized response
func (o *UpdateRepository38Unauthorized) Code() int {
	return 401
}

func (o *UpdateRepository38Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] updateRepository38Unauthorized", 401)
}

func (o *UpdateRepository38Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] updateRepository38Unauthorized", 401)
}

func (o *UpdateRepository38Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository38Forbidden creates a UpdateRepository38Forbidden with default headers values
func NewUpdateRepository38Forbidden() *UpdateRepository38Forbidden {
	return &UpdateRepository38Forbidden{}
}

/*
UpdateRepository38Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository38Forbidden struct {
}

// IsSuccess returns true when this update repository38 forbidden response has a 2xx status code
func (o *UpdateRepository38Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository38 forbidden response has a 3xx status code
func (o *UpdateRepository38Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository38 forbidden response has a 4xx status code
func (o *UpdateRepository38Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository38 forbidden response has a 5xx status code
func (o *UpdateRepository38Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository38 forbidden response a status code equal to that given
func (o *UpdateRepository38Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update repository38 forbidden response
func (o *UpdateRepository38Forbidden) Code() int {
	return 403
}

func (o *UpdateRepository38Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] updateRepository38Forbidden", 403)
}

func (o *UpdateRepository38Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] updateRepository38Forbidden", 403)
}

func (o *UpdateRepository38Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository38NotFound creates a UpdateRepository38NotFound with default headers values
func NewUpdateRepository38NotFound() *UpdateRepository38NotFound {
	return &UpdateRepository38NotFound{}
}

/*
UpdateRepository38NotFound describes a response with status code 404, with default header values.

Repository not found
*/
type UpdateRepository38NotFound struct {
}

// IsSuccess returns true when this update repository38 not found response has a 2xx status code
func (o *UpdateRepository38NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository38 not found response has a 3xx status code
func (o *UpdateRepository38NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository38 not found response has a 4xx status code
func (o *UpdateRepository38NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository38 not found response has a 5xx status code
func (o *UpdateRepository38NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository38 not found response a status code equal to that given
func (o *UpdateRepository38NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update repository38 not found response
func (o *UpdateRepository38NotFound) Code() int {
	return 404
}

func (o *UpdateRepository38NotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] updateRepository38NotFound", 404)
}

func (o *UpdateRepository38NotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] updateRepository38NotFound", 404)
}

func (o *UpdateRepository38NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
