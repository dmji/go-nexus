// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesMavenGroupByRepositorynameReader is a Reader for the PutRepositoriesMavenGroupByRepositoryname structure.
type PutRepositoriesMavenGroupByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesMavenGroupByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesMavenGroupByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesMavenGroupByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesMavenGroupByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesMavenGroupByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/maven/group/{repositoryName}] PutRepositoriesMavenGroupByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesMavenGroupByRepositorynameNoContent creates a PutRepositoriesMavenGroupByRepositorynameNoContent with default headers values
func NewPutRepositoriesMavenGroupByRepositorynameNoContent() *PutRepositoriesMavenGroupByRepositorynameNoContent {
	return &PutRepositoriesMavenGroupByRepositorynameNoContent{}
}

/*
PutRepositoriesMavenGroupByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesMavenGroupByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories maven group by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories maven group by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven group by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories maven group by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven group by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesMavenGroupByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories maven group by repositoryname no content response
func (o *PutRepositoriesMavenGroupByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesMavenGroupByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesMavenGroupByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesMavenGroupByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenGroupByRepositorynameBadRequest creates a PutRepositoriesMavenGroupByRepositorynameBadRequest with default headers values
func NewPutRepositoriesMavenGroupByRepositorynameBadRequest() *PutRepositoriesMavenGroupByRepositorynameBadRequest {
	return &PutRepositoriesMavenGroupByRepositorynameBadRequest{}
}

/*
PutRepositoriesMavenGroupByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesMavenGroupByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories maven group by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven group by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven group by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven group by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven group by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesMavenGroupByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories maven group by repositoryname bad request response
func (o *PutRepositoriesMavenGroupByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesMavenGroupByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesMavenGroupByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesMavenGroupByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenGroupByRepositorynameUnauthorized creates a PutRepositoriesMavenGroupByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesMavenGroupByRepositorynameUnauthorized() *PutRepositoriesMavenGroupByRepositorynameUnauthorized {
	return &PutRepositoriesMavenGroupByRepositorynameUnauthorized{}
}

/*
PutRepositoriesMavenGroupByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesMavenGroupByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories maven group by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven group by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven group by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven group by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven group by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesMavenGroupByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories maven group by repositoryname unauthorized response
func (o *PutRepositoriesMavenGroupByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesMavenGroupByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesMavenGroupByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesMavenGroupByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenGroupByRepositorynameForbidden creates a PutRepositoriesMavenGroupByRepositorynameForbidden with default headers values
func NewPutRepositoriesMavenGroupByRepositorynameForbidden() *PutRepositoriesMavenGroupByRepositorynameForbidden {
	return &PutRepositoriesMavenGroupByRepositorynameForbidden{}
}

/*
PutRepositoriesMavenGroupByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesMavenGroupByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories maven group by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven group by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven group by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven group by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesMavenGroupByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven group by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesMavenGroupByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories maven group by repositoryname forbidden response
func (o *PutRepositoriesMavenGroupByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesMavenGroupByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesMavenGroupByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesMavenGroupByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
