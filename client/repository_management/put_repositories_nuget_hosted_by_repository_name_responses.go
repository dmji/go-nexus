// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesNugetHostedByRepositoryNameReader is a Reader for the PutRepositoriesNugetHostedByRepositoryName structure.
type PutRepositoriesNugetHostedByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesNugetHostedByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesNugetHostedByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesNugetHostedByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesNugetHostedByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesNugetHostedByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/nuget/hosted/{repositoryName}] PutRepositoriesNugetHostedByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesNugetHostedByRepositoryNameNoContent creates a PutRepositoriesNugetHostedByRepositoryNameNoContent with default headers values
func NewPutRepositoriesNugetHostedByRepositoryNameNoContent() *PutRepositoriesNugetHostedByRepositoryNameNoContent {
	return &PutRepositoriesNugetHostedByRepositoryNameNoContent{}
}

/*
PutRepositoriesNugetHostedByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesNugetHostedByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories nuget hosted by repository name no content response has a 2xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories nuget hosted by repository name no content response has a 3xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories nuget hosted by repository name no content response has a 4xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories nuget hosted by repository name no content response has a 5xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories nuget hosted by repository name no content response a status code equal to that given
func (o *PutRepositoriesNugetHostedByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories nuget hosted by repository name no content response
func (o *PutRepositoriesNugetHostedByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesNugetHostedByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesNugetHostedByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesNugetHostedByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNugetHostedByRepositoryNameBadRequest creates a PutRepositoriesNugetHostedByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesNugetHostedByRepositoryNameBadRequest() *PutRepositoriesNugetHostedByRepositoryNameBadRequest {
	return &PutRepositoriesNugetHostedByRepositoryNameBadRequest{}
}

/*
PutRepositoriesNugetHostedByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesNugetHostedByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories nuget hosted by repository name bad request response has a 2xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories nuget hosted by repository name bad request response has a 3xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories nuget hosted by repository name bad request response has a 4xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories nuget hosted by repository name bad request response has a 5xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories nuget hosted by repository name bad request response a status code equal to that given
func (o *PutRepositoriesNugetHostedByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories nuget hosted by repository name bad request response
func (o *PutRepositoriesNugetHostedByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesNugetHostedByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesNugetHostedByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesNugetHostedByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNugetHostedByRepositoryNameUnauthorized creates a PutRepositoriesNugetHostedByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesNugetHostedByRepositoryNameUnauthorized() *PutRepositoriesNugetHostedByRepositoryNameUnauthorized {
	return &PutRepositoriesNugetHostedByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesNugetHostedByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesNugetHostedByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories nuget hosted by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories nuget hosted by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories nuget hosted by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories nuget hosted by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories nuget hosted by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesNugetHostedByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories nuget hosted by repository name unauthorized response
func (o *PutRepositoriesNugetHostedByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesNugetHostedByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesNugetHostedByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesNugetHostedByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNugetHostedByRepositoryNameForbidden creates a PutRepositoriesNugetHostedByRepositoryNameForbidden with default headers values
func NewPutRepositoriesNugetHostedByRepositoryNameForbidden() *PutRepositoriesNugetHostedByRepositoryNameForbidden {
	return &PutRepositoriesNugetHostedByRepositoryNameForbidden{}
}

/*
PutRepositoriesNugetHostedByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesNugetHostedByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories nuget hosted by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories nuget hosted by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories nuget hosted by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories nuget hosted by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesNugetHostedByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories nuget hosted by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesNugetHostedByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories nuget hosted by repository name forbidden response
func (o *PutRepositoriesNugetHostedByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesNugetHostedByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesNugetHostedByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesNugetHostedByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
