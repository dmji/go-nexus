// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesNpmHostedByRepositorynameReader is a Reader for the PutRepositoriesNpmHostedByRepositoryname structure.
type PutRepositoriesNpmHostedByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesNpmHostedByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesNpmHostedByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesNpmHostedByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesNpmHostedByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesNpmHostedByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/npm/hosted/{repositoryName}] PutRepositoriesNpmHostedByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesNpmHostedByRepositorynameNoContent creates a PutRepositoriesNpmHostedByRepositorynameNoContent with default headers values
func NewPutRepositoriesNpmHostedByRepositorynameNoContent() *PutRepositoriesNpmHostedByRepositorynameNoContent {
	return &PutRepositoriesNpmHostedByRepositorynameNoContent{}
}

/*
PutRepositoriesNpmHostedByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesNpmHostedByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories npm hosted by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories npm hosted by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories npm hosted by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories npm hosted by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories npm hosted by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesNpmHostedByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories npm hosted by repositoryname no content response
func (o *PutRepositoriesNpmHostedByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesNpmHostedByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] putRepositoriesNpmHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesNpmHostedByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] putRepositoriesNpmHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesNpmHostedByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNpmHostedByRepositorynameBadRequest creates a PutRepositoriesNpmHostedByRepositorynameBadRequest with default headers values
func NewPutRepositoriesNpmHostedByRepositorynameBadRequest() *PutRepositoriesNpmHostedByRepositorynameBadRequest {
	return &PutRepositoriesNpmHostedByRepositorynameBadRequest{}
}

/*
PutRepositoriesNpmHostedByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesNpmHostedByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories npm hosted by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories npm hosted by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories npm hosted by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories npm hosted by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories npm hosted by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesNpmHostedByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories npm hosted by repositoryname bad request response
func (o *PutRepositoriesNpmHostedByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesNpmHostedByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] putRepositoriesNpmHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesNpmHostedByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] putRepositoriesNpmHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesNpmHostedByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNpmHostedByRepositorynameUnauthorized creates a PutRepositoriesNpmHostedByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesNpmHostedByRepositorynameUnauthorized() *PutRepositoriesNpmHostedByRepositorynameUnauthorized {
	return &PutRepositoriesNpmHostedByRepositorynameUnauthorized{}
}

/*
PutRepositoriesNpmHostedByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesNpmHostedByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories npm hosted by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories npm hosted by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories npm hosted by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories npm hosted by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories npm hosted by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesNpmHostedByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories npm hosted by repositoryname unauthorized response
func (o *PutRepositoriesNpmHostedByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesNpmHostedByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] putRepositoriesNpmHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesNpmHostedByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] putRepositoriesNpmHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesNpmHostedByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNpmHostedByRepositorynameForbidden creates a PutRepositoriesNpmHostedByRepositorynameForbidden with default headers values
func NewPutRepositoriesNpmHostedByRepositorynameForbidden() *PutRepositoriesNpmHostedByRepositorynameForbidden {
	return &PutRepositoriesNpmHostedByRepositorynameForbidden{}
}

/*
PutRepositoriesNpmHostedByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesNpmHostedByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories npm hosted by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories npm hosted by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories npm hosted by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories npm hosted by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesNpmHostedByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories npm hosted by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesNpmHostedByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories npm hosted by repositoryname forbidden response
func (o *PutRepositoriesNpmHostedByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesNpmHostedByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] putRepositoriesNpmHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesNpmHostedByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] putRepositoriesNpmHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesNpmHostedByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
