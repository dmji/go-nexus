// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository26Reader is a Reader for the UpdateRepository26 structure.
type UpdateRepository26Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository26Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository26NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRepository26BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRepository26Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository26Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/npm/group/{repositoryName}] updateRepository_26", response, response.Code())
	}
}

// NewUpdateRepository26NoContent creates a UpdateRepository26NoContent with default headers values
func NewUpdateRepository26NoContent() *UpdateRepository26NoContent {
	return &UpdateRepository26NoContent{}
}

/*
UpdateRepository26NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository26NoContent struct {
}

// IsSuccess returns true when this update repository26 no content response has a 2xx status code
func (o *UpdateRepository26NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository26 no content response has a 3xx status code
func (o *UpdateRepository26NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository26 no content response has a 4xx status code
func (o *UpdateRepository26NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository26 no content response has a 5xx status code
func (o *UpdateRepository26NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository26 no content response a status code equal to that given
func (o *UpdateRepository26NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update repository26 no content response
func (o *UpdateRepository26NoContent) Code() int {
	return 204
}

func (o *UpdateRepository26NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/group/{repositoryName}][%d] updateRepository26NoContent", 204)
}

func (o *UpdateRepository26NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/group/{repositoryName}][%d] updateRepository26NoContent", 204)
}

func (o *UpdateRepository26NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository26BadRequest creates a UpdateRepository26BadRequest with default headers values
func NewUpdateRepository26BadRequest() *UpdateRepository26BadRequest {
	return &UpdateRepository26BadRequest{}
}

/*
UpdateRepository26BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateRepository26BadRequest struct {
}

// IsSuccess returns true when this update repository26 bad request response has a 2xx status code
func (o *UpdateRepository26BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository26 bad request response has a 3xx status code
func (o *UpdateRepository26BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository26 bad request response has a 4xx status code
func (o *UpdateRepository26BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository26 bad request response has a 5xx status code
func (o *UpdateRepository26BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository26 bad request response a status code equal to that given
func (o *UpdateRepository26BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update repository26 bad request response
func (o *UpdateRepository26BadRequest) Code() int {
	return 400
}

func (o *UpdateRepository26BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/group/{repositoryName}][%d] updateRepository26BadRequest", 400)
}

func (o *UpdateRepository26BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/group/{repositoryName}][%d] updateRepository26BadRequest", 400)
}

func (o *UpdateRepository26BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository26Unauthorized creates a UpdateRepository26Unauthorized with default headers values
func NewUpdateRepository26Unauthorized() *UpdateRepository26Unauthorized {
	return &UpdateRepository26Unauthorized{}
}

/*
UpdateRepository26Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository26Unauthorized struct {
}

// IsSuccess returns true when this update repository26 unauthorized response has a 2xx status code
func (o *UpdateRepository26Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository26 unauthorized response has a 3xx status code
func (o *UpdateRepository26Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository26 unauthorized response has a 4xx status code
func (o *UpdateRepository26Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository26 unauthorized response has a 5xx status code
func (o *UpdateRepository26Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository26 unauthorized response a status code equal to that given
func (o *UpdateRepository26Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update repository26 unauthorized response
func (o *UpdateRepository26Unauthorized) Code() int {
	return 401
}

func (o *UpdateRepository26Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/group/{repositoryName}][%d] updateRepository26Unauthorized", 401)
}

func (o *UpdateRepository26Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/group/{repositoryName}][%d] updateRepository26Unauthorized", 401)
}

func (o *UpdateRepository26Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository26Forbidden creates a UpdateRepository26Forbidden with default headers values
func NewUpdateRepository26Forbidden() *UpdateRepository26Forbidden {
	return &UpdateRepository26Forbidden{}
}

/*
UpdateRepository26Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository26Forbidden struct {
}

// IsSuccess returns true when this update repository26 forbidden response has a 2xx status code
func (o *UpdateRepository26Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository26 forbidden response has a 3xx status code
func (o *UpdateRepository26Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository26 forbidden response has a 4xx status code
func (o *UpdateRepository26Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository26 forbidden response has a 5xx status code
func (o *UpdateRepository26Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository26 forbidden response a status code equal to that given
func (o *UpdateRepository26Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update repository26 forbidden response
func (o *UpdateRepository26Forbidden) Code() int {
	return 403
}

func (o *UpdateRepository26Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/group/{repositoryName}][%d] updateRepository26Forbidden", 403)
}

func (o *UpdateRepository26Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/group/{repositoryName}][%d] updateRepository26Forbidden", 403)
}

func (o *UpdateRepository26Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
