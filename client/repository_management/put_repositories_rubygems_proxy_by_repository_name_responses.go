// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesRubygemsProxyByRepositoryNameReader is a Reader for the PutRepositoriesRubygemsProxyByRepositoryName structure.
type PutRepositoriesRubygemsProxyByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesRubygemsProxyByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesRubygemsProxyByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesRubygemsProxyByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesRubygemsProxyByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesRubygemsProxyByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/rubygems/proxy/{repositoryName}] PutRepositoriesRubygemsProxyByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesRubygemsProxyByRepositoryNameNoContent creates a PutRepositoriesRubygemsProxyByRepositoryNameNoContent with default headers values
func NewPutRepositoriesRubygemsProxyByRepositoryNameNoContent() *PutRepositoriesRubygemsProxyByRepositoryNameNoContent {
	return &PutRepositoriesRubygemsProxyByRepositoryNameNoContent{}
}

/*
PutRepositoriesRubygemsProxyByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesRubygemsProxyByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories rubygems proxy by repository name no content response has a 2xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories rubygems proxy by repository name no content response has a 3xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems proxy by repository name no content response has a 4xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories rubygems proxy by repository name no content response has a 5xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems proxy by repository name no content response a status code equal to that given
func (o *PutRepositoriesRubygemsProxyByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories rubygems proxy by repository name no content response
func (o *PutRepositoriesRubygemsProxyByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRubygemsProxyByRepositoryNameBadRequest creates a PutRepositoriesRubygemsProxyByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesRubygemsProxyByRepositoryNameBadRequest() *PutRepositoriesRubygemsProxyByRepositoryNameBadRequest {
	return &PutRepositoriesRubygemsProxyByRepositoryNameBadRequest{}
}

/*
PutRepositoriesRubygemsProxyByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesRubygemsProxyByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories rubygems proxy by repository name bad request response has a 2xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories rubygems proxy by repository name bad request response has a 3xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems proxy by repository name bad request response has a 4xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories rubygems proxy by repository name bad request response has a 5xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems proxy by repository name bad request response a status code equal to that given
func (o *PutRepositoriesRubygemsProxyByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories rubygems proxy by repository name bad request response
func (o *PutRepositoriesRubygemsProxyByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRubygemsProxyByRepositoryNameUnauthorized creates a PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesRubygemsProxyByRepositoryNameUnauthorized() *PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized {
	return &PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories rubygems proxy by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories rubygems proxy by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems proxy by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories rubygems proxy by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems proxy by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories rubygems proxy by repository name unauthorized response
func (o *PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRubygemsProxyByRepositoryNameForbidden creates a PutRepositoriesRubygemsProxyByRepositoryNameForbidden with default headers values
func NewPutRepositoriesRubygemsProxyByRepositoryNameForbidden() *PutRepositoriesRubygemsProxyByRepositoryNameForbidden {
	return &PutRepositoriesRubygemsProxyByRepositoryNameForbidden{}
}

/*
PutRepositoriesRubygemsProxyByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesRubygemsProxyByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories rubygems proxy by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories rubygems proxy by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories rubygems proxy by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories rubygems proxy by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesRubygemsProxyByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories rubygems proxy by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesRubygemsProxyByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories rubygems proxy by repository name forbidden response
func (o *PutRepositoriesRubygemsProxyByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/proxy/{repositoryName}][%d] putRepositoriesRubygemsProxyByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesRubygemsProxyByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
