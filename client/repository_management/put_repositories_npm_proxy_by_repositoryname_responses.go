// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesNpmProxyByRepositorynameReader is a Reader for the PutRepositoriesNpmProxyByRepositoryname structure.
type PutRepositoriesNpmProxyByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesNpmProxyByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesNpmProxyByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesNpmProxyByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesNpmProxyByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesNpmProxyByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/npm/proxy/{repositoryName}] PutRepositoriesNpmProxyByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesNpmProxyByRepositorynameNoContent creates a PutRepositoriesNpmProxyByRepositorynameNoContent with default headers values
func NewPutRepositoriesNpmProxyByRepositorynameNoContent() *PutRepositoriesNpmProxyByRepositorynameNoContent {
	return &PutRepositoriesNpmProxyByRepositorynameNoContent{}
}

/*
PutRepositoriesNpmProxyByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesNpmProxyByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories npm proxy by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories npm proxy by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories npm proxy by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories npm proxy by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories npm proxy by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesNpmProxyByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories npm proxy by repositoryname no content response
func (o *PutRepositoriesNpmProxyByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesNpmProxyByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/proxy/{repositoryName}][%d] putRepositoriesNpmProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesNpmProxyByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/proxy/{repositoryName}][%d] putRepositoriesNpmProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesNpmProxyByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNpmProxyByRepositorynameBadRequest creates a PutRepositoriesNpmProxyByRepositorynameBadRequest with default headers values
func NewPutRepositoriesNpmProxyByRepositorynameBadRequest() *PutRepositoriesNpmProxyByRepositorynameBadRequest {
	return &PutRepositoriesNpmProxyByRepositorynameBadRequest{}
}

/*
PutRepositoriesNpmProxyByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesNpmProxyByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories npm proxy by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories npm proxy by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories npm proxy by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories npm proxy by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories npm proxy by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesNpmProxyByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories npm proxy by repositoryname bad request response
func (o *PutRepositoriesNpmProxyByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesNpmProxyByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/proxy/{repositoryName}][%d] putRepositoriesNpmProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesNpmProxyByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/proxy/{repositoryName}][%d] putRepositoriesNpmProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesNpmProxyByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNpmProxyByRepositorynameUnauthorized creates a PutRepositoriesNpmProxyByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesNpmProxyByRepositorynameUnauthorized() *PutRepositoriesNpmProxyByRepositorynameUnauthorized {
	return &PutRepositoriesNpmProxyByRepositorynameUnauthorized{}
}

/*
PutRepositoriesNpmProxyByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesNpmProxyByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories npm proxy by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories npm proxy by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories npm proxy by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories npm proxy by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories npm proxy by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesNpmProxyByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories npm proxy by repositoryname unauthorized response
func (o *PutRepositoriesNpmProxyByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesNpmProxyByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/proxy/{repositoryName}][%d] putRepositoriesNpmProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesNpmProxyByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/proxy/{repositoryName}][%d] putRepositoriesNpmProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesNpmProxyByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNpmProxyByRepositorynameForbidden creates a PutRepositoriesNpmProxyByRepositorynameForbidden with default headers values
func NewPutRepositoriesNpmProxyByRepositorynameForbidden() *PutRepositoriesNpmProxyByRepositorynameForbidden {
	return &PutRepositoriesNpmProxyByRepositorynameForbidden{}
}

/*
PutRepositoriesNpmProxyByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesNpmProxyByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories npm proxy by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories npm proxy by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories npm proxy by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories npm proxy by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesNpmProxyByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories npm proxy by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesNpmProxyByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories npm proxy by repositoryname forbidden response
func (o *PutRepositoriesNpmProxyByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesNpmProxyByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/proxy/{repositoryName}][%d] putRepositoriesNpmProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesNpmProxyByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/proxy/{repositoryName}][%d] putRepositoriesNpmProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesNpmProxyByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
