// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesPypiProxyByRepositoryNameReader is a Reader for the PutRepositoriesPypiProxyByRepositoryName structure.
type PutRepositoriesPypiProxyByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesPypiProxyByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesPypiProxyByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesPypiProxyByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesPypiProxyByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesPypiProxyByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/pypi/proxy/{repositoryName}] PutRepositoriesPypiProxyByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesPypiProxyByRepositoryNameNoContent creates a PutRepositoriesPypiProxyByRepositoryNameNoContent with default headers values
func NewPutRepositoriesPypiProxyByRepositoryNameNoContent() *PutRepositoriesPypiProxyByRepositoryNameNoContent {
	return &PutRepositoriesPypiProxyByRepositoryNameNoContent{}
}

/*
PutRepositoriesPypiProxyByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesPypiProxyByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories pypi proxy by repository name no content response has a 2xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories pypi proxy by repository name no content response has a 3xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi proxy by repository name no content response has a 4xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories pypi proxy by repository name no content response has a 5xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi proxy by repository name no content response a status code equal to that given
func (o *PutRepositoriesPypiProxyByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories pypi proxy by repository name no content response
func (o *PutRepositoriesPypiProxyByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesPypiProxyByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesPypiProxyByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesPypiProxyByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesPypiProxyByRepositoryNameBadRequest creates a PutRepositoriesPypiProxyByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesPypiProxyByRepositoryNameBadRequest() *PutRepositoriesPypiProxyByRepositoryNameBadRequest {
	return &PutRepositoriesPypiProxyByRepositoryNameBadRequest{}
}

/*
PutRepositoriesPypiProxyByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesPypiProxyByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories pypi proxy by repository name bad request response has a 2xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories pypi proxy by repository name bad request response has a 3xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi proxy by repository name bad request response has a 4xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories pypi proxy by repository name bad request response has a 5xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi proxy by repository name bad request response a status code equal to that given
func (o *PutRepositoriesPypiProxyByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories pypi proxy by repository name bad request response
func (o *PutRepositoriesPypiProxyByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesPypiProxyByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesPypiProxyByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesPypiProxyByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesPypiProxyByRepositoryNameUnauthorized creates a PutRepositoriesPypiProxyByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesPypiProxyByRepositoryNameUnauthorized() *PutRepositoriesPypiProxyByRepositoryNameUnauthorized {
	return &PutRepositoriesPypiProxyByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesPypiProxyByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesPypiProxyByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories pypi proxy by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories pypi proxy by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi proxy by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories pypi proxy by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi proxy by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesPypiProxyByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories pypi proxy by repository name unauthorized response
func (o *PutRepositoriesPypiProxyByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesPypiProxyByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesPypiProxyByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesPypiProxyByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesPypiProxyByRepositoryNameForbidden creates a PutRepositoriesPypiProxyByRepositoryNameForbidden with default headers values
func NewPutRepositoriesPypiProxyByRepositoryNameForbidden() *PutRepositoriesPypiProxyByRepositoryNameForbidden {
	return &PutRepositoriesPypiProxyByRepositoryNameForbidden{}
}

/*
PutRepositoriesPypiProxyByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesPypiProxyByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories pypi proxy by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories pypi proxy by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories pypi proxy by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories pypi proxy by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesPypiProxyByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories pypi proxy by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesPypiProxyByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories pypi proxy by repository name forbidden response
func (o *PutRepositoriesPypiProxyByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesPypiProxyByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesPypiProxyByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/proxy/{repositoryName}][%d] putRepositoriesPypiProxyByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesPypiProxyByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
