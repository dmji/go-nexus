// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesDockerHostedByRepositoryNameReader is a Reader for the PutRepositoriesDockerHostedByRepositoryName structure.
type PutRepositoriesDockerHostedByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesDockerHostedByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesDockerHostedByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesDockerHostedByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesDockerHostedByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesDockerHostedByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRepositoriesDockerHostedByRepositoryNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/docker/hosted/{repositoryName}] PutRepositoriesDockerHostedByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesDockerHostedByRepositoryNameNoContent creates a PutRepositoriesDockerHostedByRepositoryNameNoContent with default headers values
func NewPutRepositoriesDockerHostedByRepositoryNameNoContent() *PutRepositoriesDockerHostedByRepositoryNameNoContent {
	return &PutRepositoriesDockerHostedByRepositoryNameNoContent{}
}

/*
PutRepositoriesDockerHostedByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesDockerHostedByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories docker hosted by repository name no content response has a 2xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories docker hosted by repository name no content response has a 3xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker hosted by repository name no content response has a 4xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories docker hosted by repository name no content response has a 5xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker hosted by repository name no content response a status code equal to that given
func (o *PutRepositoriesDockerHostedByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories docker hosted by repository name no content response
func (o *PutRepositoriesDockerHostedByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesDockerHostedByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] putRepositoriesDockerHostedByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesDockerHostedByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] putRepositoriesDockerHostedByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesDockerHostedByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerHostedByRepositoryNameBadRequest creates a PutRepositoriesDockerHostedByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesDockerHostedByRepositoryNameBadRequest() *PutRepositoriesDockerHostedByRepositoryNameBadRequest {
	return &PutRepositoriesDockerHostedByRepositoryNameBadRequest{}
}

/*
PutRepositoriesDockerHostedByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesDockerHostedByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories docker hosted by repository name bad request response has a 2xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker hosted by repository name bad request response has a 3xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker hosted by repository name bad request response has a 4xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker hosted by repository name bad request response has a 5xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker hosted by repository name bad request response a status code equal to that given
func (o *PutRepositoriesDockerHostedByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories docker hosted by repository name bad request response
func (o *PutRepositoriesDockerHostedByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesDockerHostedByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] putRepositoriesDockerHostedByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesDockerHostedByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] putRepositoriesDockerHostedByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesDockerHostedByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerHostedByRepositoryNameUnauthorized creates a PutRepositoriesDockerHostedByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesDockerHostedByRepositoryNameUnauthorized() *PutRepositoriesDockerHostedByRepositoryNameUnauthorized {
	return &PutRepositoriesDockerHostedByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesDockerHostedByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesDockerHostedByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories docker hosted by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker hosted by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker hosted by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker hosted by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker hosted by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesDockerHostedByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories docker hosted by repository name unauthorized response
func (o *PutRepositoriesDockerHostedByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesDockerHostedByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] putRepositoriesDockerHostedByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesDockerHostedByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] putRepositoriesDockerHostedByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesDockerHostedByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerHostedByRepositoryNameForbidden creates a PutRepositoriesDockerHostedByRepositoryNameForbidden with default headers values
func NewPutRepositoriesDockerHostedByRepositoryNameForbidden() *PutRepositoriesDockerHostedByRepositoryNameForbidden {
	return &PutRepositoriesDockerHostedByRepositoryNameForbidden{}
}

/*
PutRepositoriesDockerHostedByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesDockerHostedByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories docker hosted by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker hosted by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker hosted by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker hosted by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker hosted by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesDockerHostedByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories docker hosted by repository name forbidden response
func (o *PutRepositoriesDockerHostedByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesDockerHostedByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] putRepositoriesDockerHostedByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesDockerHostedByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] putRepositoriesDockerHostedByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesDockerHostedByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerHostedByRepositoryNameNotFound creates a PutRepositoriesDockerHostedByRepositoryNameNotFound with default headers values
func NewPutRepositoriesDockerHostedByRepositoryNameNotFound() *PutRepositoriesDockerHostedByRepositoryNameNotFound {
	return &PutRepositoriesDockerHostedByRepositoryNameNotFound{}
}

/*
PutRepositoriesDockerHostedByRepositoryNameNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type PutRepositoriesDockerHostedByRepositoryNameNotFound struct {
}

// IsSuccess returns true when this put repositories docker hosted by repository name not found response has a 2xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker hosted by repository name not found response has a 3xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker hosted by repository name not found response has a 4xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker hosted by repository name not found response has a 5xx status code
func (o *PutRepositoriesDockerHostedByRepositoryNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker hosted by repository name not found response a status code equal to that given
func (o *PutRepositoriesDockerHostedByRepositoryNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put repositories docker hosted by repository name not found response
func (o *PutRepositoriesDockerHostedByRepositoryNameNotFound) Code() int {
	return 404
}

func (o *PutRepositoriesDockerHostedByRepositoryNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] putRepositoriesDockerHostedByRepositoryNameNotFound", 404)
}

func (o *PutRepositoriesDockerHostedByRepositoryNameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] putRepositoriesDockerHostedByRepositoryNameNotFound", 404)
}

func (o *PutRepositoriesDockerHostedByRepositoryNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
