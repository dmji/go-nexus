// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository29Reader is a Reader for the UpdateRepository29 structure.
type UpdateRepository29Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository29Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository29NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRepository29BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRepository29Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository29Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/nuget/group/{repositoryName}] updateRepository_29", response, response.Code())
	}
}

// NewUpdateRepository29NoContent creates a UpdateRepository29NoContent with default headers values
func NewUpdateRepository29NoContent() *UpdateRepository29NoContent {
	return &UpdateRepository29NoContent{}
}

/*
UpdateRepository29NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository29NoContent struct {
}

// IsSuccess returns true when this update repository29 no content response has a 2xx status code
func (o *UpdateRepository29NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository29 no content response has a 3xx status code
func (o *UpdateRepository29NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository29 no content response has a 4xx status code
func (o *UpdateRepository29NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository29 no content response has a 5xx status code
func (o *UpdateRepository29NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository29 no content response a status code equal to that given
func (o *UpdateRepository29NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update repository29 no content response
func (o *UpdateRepository29NoContent) Code() int {
	return 204
}

func (o *UpdateRepository29NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository29NoContent", 204)
}

func (o *UpdateRepository29NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository29NoContent", 204)
}

func (o *UpdateRepository29NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository29BadRequest creates a UpdateRepository29BadRequest with default headers values
func NewUpdateRepository29BadRequest() *UpdateRepository29BadRequest {
	return &UpdateRepository29BadRequest{}
}

/*
UpdateRepository29BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateRepository29BadRequest struct {
}

// IsSuccess returns true when this update repository29 bad request response has a 2xx status code
func (o *UpdateRepository29BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository29 bad request response has a 3xx status code
func (o *UpdateRepository29BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository29 bad request response has a 4xx status code
func (o *UpdateRepository29BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository29 bad request response has a 5xx status code
func (o *UpdateRepository29BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository29 bad request response a status code equal to that given
func (o *UpdateRepository29BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update repository29 bad request response
func (o *UpdateRepository29BadRequest) Code() int {
	return 400
}

func (o *UpdateRepository29BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository29BadRequest", 400)
}

func (o *UpdateRepository29BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository29BadRequest", 400)
}

func (o *UpdateRepository29BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository29Unauthorized creates a UpdateRepository29Unauthorized with default headers values
func NewUpdateRepository29Unauthorized() *UpdateRepository29Unauthorized {
	return &UpdateRepository29Unauthorized{}
}

/*
UpdateRepository29Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository29Unauthorized struct {
}

// IsSuccess returns true when this update repository29 unauthorized response has a 2xx status code
func (o *UpdateRepository29Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository29 unauthorized response has a 3xx status code
func (o *UpdateRepository29Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository29 unauthorized response has a 4xx status code
func (o *UpdateRepository29Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository29 unauthorized response has a 5xx status code
func (o *UpdateRepository29Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository29 unauthorized response a status code equal to that given
func (o *UpdateRepository29Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update repository29 unauthorized response
func (o *UpdateRepository29Unauthorized) Code() int {
	return 401
}

func (o *UpdateRepository29Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository29Unauthorized", 401)
}

func (o *UpdateRepository29Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository29Unauthorized", 401)
}

func (o *UpdateRepository29Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository29Forbidden creates a UpdateRepository29Forbidden with default headers values
func NewUpdateRepository29Forbidden() *UpdateRepository29Forbidden {
	return &UpdateRepository29Forbidden{}
}

/*
UpdateRepository29Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository29Forbidden struct {
}

// IsSuccess returns true when this update repository29 forbidden response has a 2xx status code
func (o *UpdateRepository29Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository29 forbidden response has a 3xx status code
func (o *UpdateRepository29Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository29 forbidden response has a 4xx status code
func (o *UpdateRepository29Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository29 forbidden response has a 5xx status code
func (o *UpdateRepository29Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository29 forbidden response a status code equal to that given
func (o *UpdateRepository29Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update repository29 forbidden response
func (o *UpdateRepository29Forbidden) Code() int {
	return 403
}

func (o *UpdateRepository29Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository29Forbidden", 403)
}

func (o *UpdateRepository29Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository29Forbidden", 403)
}

func (o *UpdateRepository29Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
