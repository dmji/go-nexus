// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostRepositoriesRProxyReader is a Reader for the PostRepositoriesRProxy structure.
type PostRepositoriesRProxyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesRProxyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostRepositoriesRProxyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostRepositoriesRProxyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRepositoriesRProxyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostRepositoriesRProxyMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/r/proxy] PostRepositoriesRProxy", response, response.Code())
	}
}

// NewPostRepositoriesRProxyCreated creates a PostRepositoriesRProxyCreated with default headers values
func NewPostRepositoriesRProxyCreated() *PostRepositoriesRProxyCreated {
	return &PostRepositoriesRProxyCreated{}
}

/*
PostRepositoriesRProxyCreated describes a response with status code 201, with default header values.

Repository created
*/
type PostRepositoriesRProxyCreated struct {
}

// IsSuccess returns true when this post repositories r proxy created response has a 2xx status code
func (o *PostRepositoriesRProxyCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post repositories r proxy created response has a 3xx status code
func (o *PostRepositoriesRProxyCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories r proxy created response has a 4xx status code
func (o *PostRepositoriesRProxyCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post repositories r proxy created response has a 5xx status code
func (o *PostRepositoriesRProxyCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories r proxy created response a status code equal to that given
func (o *PostRepositoriesRProxyCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post repositories r proxy created response
func (o *PostRepositoriesRProxyCreated) Code() int {
	return 201
}

func (o *PostRepositoriesRProxyCreated) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/proxy][%d] postRepositoriesRProxyCreated", 201)
}

func (o *PostRepositoriesRProxyCreated) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/proxy][%d] postRepositoriesRProxyCreated", 201)
}

func (o *PostRepositoriesRProxyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesRProxyUnauthorized creates a PostRepositoriesRProxyUnauthorized with default headers values
func NewPostRepositoriesRProxyUnauthorized() *PostRepositoriesRProxyUnauthorized {
	return &PostRepositoriesRProxyUnauthorized{}
}

/*
PostRepositoriesRProxyUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PostRepositoriesRProxyUnauthorized struct {
}

// IsSuccess returns true when this post repositories r proxy unauthorized response has a 2xx status code
func (o *PostRepositoriesRProxyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories r proxy unauthorized response has a 3xx status code
func (o *PostRepositoriesRProxyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories r proxy unauthorized response has a 4xx status code
func (o *PostRepositoriesRProxyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories r proxy unauthorized response has a 5xx status code
func (o *PostRepositoriesRProxyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories r proxy unauthorized response a status code equal to that given
func (o *PostRepositoriesRProxyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post repositories r proxy unauthorized response
func (o *PostRepositoriesRProxyUnauthorized) Code() int {
	return 401
}

func (o *PostRepositoriesRProxyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/proxy][%d] postRepositoriesRProxyUnauthorized", 401)
}

func (o *PostRepositoriesRProxyUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/proxy][%d] postRepositoriesRProxyUnauthorized", 401)
}

func (o *PostRepositoriesRProxyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesRProxyForbidden creates a PostRepositoriesRProxyForbidden with default headers values
func NewPostRepositoriesRProxyForbidden() *PostRepositoriesRProxyForbidden {
	return &PostRepositoriesRProxyForbidden{}
}

/*
PostRepositoriesRProxyForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PostRepositoriesRProxyForbidden struct {
}

// IsSuccess returns true when this post repositories r proxy forbidden response has a 2xx status code
func (o *PostRepositoriesRProxyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories r proxy forbidden response has a 3xx status code
func (o *PostRepositoriesRProxyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories r proxy forbidden response has a 4xx status code
func (o *PostRepositoriesRProxyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories r proxy forbidden response has a 5xx status code
func (o *PostRepositoriesRProxyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories r proxy forbidden response a status code equal to that given
func (o *PostRepositoriesRProxyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post repositories r proxy forbidden response
func (o *PostRepositoriesRProxyForbidden) Code() int {
	return 403
}

func (o *PostRepositoriesRProxyForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/proxy][%d] postRepositoriesRProxyForbidden", 403)
}

func (o *PostRepositoriesRProxyForbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/proxy][%d] postRepositoriesRProxyForbidden", 403)
}

func (o *PostRepositoriesRProxyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesRProxyMethodNotAllowed creates a PostRepositoriesRProxyMethodNotAllowed with default headers values
func NewPostRepositoriesRProxyMethodNotAllowed() *PostRepositoriesRProxyMethodNotAllowed {
	return &PostRepositoriesRProxyMethodNotAllowed{}
}

/*
PostRepositoriesRProxyMethodNotAllowed describes a response with status code 405, with default header values.

Feature is disabled in High Availability
*/
type PostRepositoriesRProxyMethodNotAllowed struct {
}

// IsSuccess returns true when this post repositories r proxy method not allowed response has a 2xx status code
func (o *PostRepositoriesRProxyMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories r proxy method not allowed response has a 3xx status code
func (o *PostRepositoriesRProxyMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories r proxy method not allowed response has a 4xx status code
func (o *PostRepositoriesRProxyMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories r proxy method not allowed response has a 5xx status code
func (o *PostRepositoriesRProxyMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories r proxy method not allowed response a status code equal to that given
func (o *PostRepositoriesRProxyMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the post repositories r proxy method not allowed response
func (o *PostRepositoriesRProxyMethodNotAllowed) Code() int {
	return 405
}

func (o *PostRepositoriesRProxyMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/proxy][%d] postRepositoriesRProxyMethodNotAllowed", 405)
}

func (o *PostRepositoriesRProxyMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/proxy][%d] postRepositoriesRProxyMethodNotAllowed", 405)
}

func (o *PostRepositoriesRProxyMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
