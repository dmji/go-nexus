// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateRepository9Reader is a Reader for the CreateRepository9 structure.
type CreateRepository9Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRepository9Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRepository9Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateRepository9Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRepository9Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/cargo/hosted] createRepository_9", response, response.Code())
	}
}

// NewCreateRepository9Created creates a CreateRepository9Created with default headers values
func NewCreateRepository9Created() *CreateRepository9Created {
	return &CreateRepository9Created{}
}

/*
CreateRepository9Created describes a response with status code 201, with default header values.

Repository created
*/
type CreateRepository9Created struct {
}

// IsSuccess returns true when this create repository9 created response has a 2xx status code
func (o *CreateRepository9Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create repository9 created response has a 3xx status code
func (o *CreateRepository9Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository9 created response has a 4xx status code
func (o *CreateRepository9Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this create repository9 created response has a 5xx status code
func (o *CreateRepository9Created) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository9 created response a status code equal to that given
func (o *CreateRepository9Created) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create repository9 created response
func (o *CreateRepository9Created) Code() int {
	return 201
}

func (o *CreateRepository9Created) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/cargo/hosted][%d] createRepository9Created", 201)
}

func (o *CreateRepository9Created) String() string {
	return fmt.Sprintf("[POST /v1/repositories/cargo/hosted][%d] createRepository9Created", 201)
}

func (o *CreateRepository9Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository9Unauthorized creates a CreateRepository9Unauthorized with default headers values
func NewCreateRepository9Unauthorized() *CreateRepository9Unauthorized {
	return &CreateRepository9Unauthorized{}
}

/*
CreateRepository9Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type CreateRepository9Unauthorized struct {
}

// IsSuccess returns true when this create repository9 unauthorized response has a 2xx status code
func (o *CreateRepository9Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository9 unauthorized response has a 3xx status code
func (o *CreateRepository9Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository9 unauthorized response has a 4xx status code
func (o *CreateRepository9Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository9 unauthorized response has a 5xx status code
func (o *CreateRepository9Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository9 unauthorized response a status code equal to that given
func (o *CreateRepository9Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create repository9 unauthorized response
func (o *CreateRepository9Unauthorized) Code() int {
	return 401
}

func (o *CreateRepository9Unauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/cargo/hosted][%d] createRepository9Unauthorized", 401)
}

func (o *CreateRepository9Unauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/cargo/hosted][%d] createRepository9Unauthorized", 401)
}

func (o *CreateRepository9Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository9Forbidden creates a CreateRepository9Forbidden with default headers values
func NewCreateRepository9Forbidden() *CreateRepository9Forbidden {
	return &CreateRepository9Forbidden{}
}

/*
CreateRepository9Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type CreateRepository9Forbidden struct {
}

// IsSuccess returns true when this create repository9 forbidden response has a 2xx status code
func (o *CreateRepository9Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository9 forbidden response has a 3xx status code
func (o *CreateRepository9Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository9 forbidden response has a 4xx status code
func (o *CreateRepository9Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository9 forbidden response has a 5xx status code
func (o *CreateRepository9Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository9 forbidden response a status code equal to that given
func (o *CreateRepository9Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create repository9 forbidden response
func (o *CreateRepository9Forbidden) Code() int {
	return 403
}

func (o *CreateRepository9Forbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/cargo/hosted][%d] createRepository9Forbidden", 403)
}

func (o *CreateRepository9Forbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/cargo/hosted][%d] createRepository9Forbidden", 403)
}

func (o *CreateRepository9Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
