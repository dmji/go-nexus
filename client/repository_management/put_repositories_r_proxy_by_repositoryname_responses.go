// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesRProxyByRepositorynameReader is a Reader for the PutRepositoriesRProxyByRepositoryname structure.
type PutRepositoriesRProxyByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesRProxyByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesRProxyByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesRProxyByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesRProxyByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesRProxyByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRepositoriesRProxyByRepositorynameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/r/proxy/{repositoryName}] PutRepositoriesRProxyByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesRProxyByRepositorynameNoContent creates a PutRepositoriesRProxyByRepositorynameNoContent with default headers values
func NewPutRepositoriesRProxyByRepositorynameNoContent() *PutRepositoriesRProxyByRepositorynameNoContent {
	return &PutRepositoriesRProxyByRepositorynameNoContent{}
}

/*
PutRepositoriesRProxyByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesRProxyByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories r proxy by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesRProxyByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories r proxy by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesRProxyByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories r proxy by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesRProxyByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories r proxy by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesRProxyByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories r proxy by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesRProxyByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories r proxy by repositoryname no content response
func (o *PutRepositoriesRProxyByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesRProxyByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] putRepositoriesRProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesRProxyByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] putRepositoriesRProxyByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesRProxyByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRProxyByRepositorynameBadRequest creates a PutRepositoriesRProxyByRepositorynameBadRequest with default headers values
func NewPutRepositoriesRProxyByRepositorynameBadRequest() *PutRepositoriesRProxyByRepositorynameBadRequest {
	return &PutRepositoriesRProxyByRepositorynameBadRequest{}
}

/*
PutRepositoriesRProxyByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesRProxyByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories r proxy by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesRProxyByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories r proxy by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesRProxyByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories r proxy by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesRProxyByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories r proxy by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesRProxyByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories r proxy by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesRProxyByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories r proxy by repositoryname bad request response
func (o *PutRepositoriesRProxyByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesRProxyByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] putRepositoriesRProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesRProxyByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] putRepositoriesRProxyByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesRProxyByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRProxyByRepositorynameUnauthorized creates a PutRepositoriesRProxyByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesRProxyByRepositorynameUnauthorized() *PutRepositoriesRProxyByRepositorynameUnauthorized {
	return &PutRepositoriesRProxyByRepositorynameUnauthorized{}
}

/*
PutRepositoriesRProxyByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesRProxyByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories r proxy by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesRProxyByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories r proxy by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesRProxyByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories r proxy by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesRProxyByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories r proxy by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesRProxyByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories r proxy by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesRProxyByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories r proxy by repositoryname unauthorized response
func (o *PutRepositoriesRProxyByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesRProxyByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] putRepositoriesRProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesRProxyByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] putRepositoriesRProxyByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesRProxyByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRProxyByRepositorynameForbidden creates a PutRepositoriesRProxyByRepositorynameForbidden with default headers values
func NewPutRepositoriesRProxyByRepositorynameForbidden() *PutRepositoriesRProxyByRepositorynameForbidden {
	return &PutRepositoriesRProxyByRepositorynameForbidden{}
}

/*
PutRepositoriesRProxyByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesRProxyByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories r proxy by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesRProxyByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories r proxy by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesRProxyByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories r proxy by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesRProxyByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories r proxy by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesRProxyByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories r proxy by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesRProxyByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories r proxy by repositoryname forbidden response
func (o *PutRepositoriesRProxyByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesRProxyByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] putRepositoriesRProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesRProxyByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] putRepositoriesRProxyByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesRProxyByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesRProxyByRepositorynameNotFound creates a PutRepositoriesRProxyByRepositorynameNotFound with default headers values
func NewPutRepositoriesRProxyByRepositorynameNotFound() *PutRepositoriesRProxyByRepositorynameNotFound {
	return &PutRepositoriesRProxyByRepositorynameNotFound{}
}

/*
PutRepositoriesRProxyByRepositorynameNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type PutRepositoriesRProxyByRepositorynameNotFound struct {
}

// IsSuccess returns true when this put repositories r proxy by repositoryname not found response has a 2xx status code
func (o *PutRepositoriesRProxyByRepositorynameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories r proxy by repositoryname not found response has a 3xx status code
func (o *PutRepositoriesRProxyByRepositorynameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories r proxy by repositoryname not found response has a 4xx status code
func (o *PutRepositoriesRProxyByRepositorynameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories r proxy by repositoryname not found response has a 5xx status code
func (o *PutRepositoriesRProxyByRepositorynameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories r proxy by repositoryname not found response a status code equal to that given
func (o *PutRepositoriesRProxyByRepositorynameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put repositories r proxy by repositoryname not found response
func (o *PutRepositoriesRProxyByRepositorynameNotFound) Code() int {
	return 404
}

func (o *PutRepositoriesRProxyByRepositorynameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] putRepositoriesRProxyByRepositorynameNotFound", 404)
}

func (o *PutRepositoriesRProxyByRepositorynameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/proxy/{repositoryName}][%d] putRepositoriesRProxyByRepositorynameNotFound", 404)
}

func (o *PutRepositoriesRProxyByRepositorynameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
