// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesDockerProxyByRepositoryNameReader is a Reader for the PutRepositoriesDockerProxyByRepositoryName structure.
type PutRepositoriesDockerProxyByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesDockerProxyByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesDockerProxyByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesDockerProxyByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesDockerProxyByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesDockerProxyByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRepositoriesDockerProxyByRepositoryNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/docker/proxy/{repositoryName}] PutRepositoriesDockerProxyByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesDockerProxyByRepositoryNameNoContent creates a PutRepositoriesDockerProxyByRepositoryNameNoContent with default headers values
func NewPutRepositoriesDockerProxyByRepositoryNameNoContent() *PutRepositoriesDockerProxyByRepositoryNameNoContent {
	return &PutRepositoriesDockerProxyByRepositoryNameNoContent{}
}

/*
PutRepositoriesDockerProxyByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesDockerProxyByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories docker proxy by repository name no content response has a 2xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories docker proxy by repository name no content response has a 3xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker proxy by repository name no content response has a 4xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories docker proxy by repository name no content response has a 5xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker proxy by repository name no content response a status code equal to that given
func (o *PutRepositoriesDockerProxyByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories docker proxy by repository name no content response
func (o *PutRepositoriesDockerProxyByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesDockerProxyByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/proxy/{repositoryName}][%d] putRepositoriesDockerProxyByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesDockerProxyByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/proxy/{repositoryName}][%d] putRepositoriesDockerProxyByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesDockerProxyByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerProxyByRepositoryNameBadRequest creates a PutRepositoriesDockerProxyByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesDockerProxyByRepositoryNameBadRequest() *PutRepositoriesDockerProxyByRepositoryNameBadRequest {
	return &PutRepositoriesDockerProxyByRepositoryNameBadRequest{}
}

/*
PutRepositoriesDockerProxyByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesDockerProxyByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories docker proxy by repository name bad request response has a 2xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker proxy by repository name bad request response has a 3xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker proxy by repository name bad request response has a 4xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker proxy by repository name bad request response has a 5xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker proxy by repository name bad request response a status code equal to that given
func (o *PutRepositoriesDockerProxyByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories docker proxy by repository name bad request response
func (o *PutRepositoriesDockerProxyByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesDockerProxyByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/proxy/{repositoryName}][%d] putRepositoriesDockerProxyByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesDockerProxyByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/proxy/{repositoryName}][%d] putRepositoriesDockerProxyByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesDockerProxyByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerProxyByRepositoryNameUnauthorized creates a PutRepositoriesDockerProxyByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesDockerProxyByRepositoryNameUnauthorized() *PutRepositoriesDockerProxyByRepositoryNameUnauthorized {
	return &PutRepositoriesDockerProxyByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesDockerProxyByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesDockerProxyByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories docker proxy by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker proxy by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker proxy by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker proxy by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker proxy by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesDockerProxyByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories docker proxy by repository name unauthorized response
func (o *PutRepositoriesDockerProxyByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesDockerProxyByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/proxy/{repositoryName}][%d] putRepositoriesDockerProxyByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesDockerProxyByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/proxy/{repositoryName}][%d] putRepositoriesDockerProxyByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesDockerProxyByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerProxyByRepositoryNameForbidden creates a PutRepositoriesDockerProxyByRepositoryNameForbidden with default headers values
func NewPutRepositoriesDockerProxyByRepositoryNameForbidden() *PutRepositoriesDockerProxyByRepositoryNameForbidden {
	return &PutRepositoriesDockerProxyByRepositoryNameForbidden{}
}

/*
PutRepositoriesDockerProxyByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesDockerProxyByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories docker proxy by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker proxy by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker proxy by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker proxy by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker proxy by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesDockerProxyByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories docker proxy by repository name forbidden response
func (o *PutRepositoriesDockerProxyByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesDockerProxyByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/proxy/{repositoryName}][%d] putRepositoriesDockerProxyByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesDockerProxyByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/proxy/{repositoryName}][%d] putRepositoriesDockerProxyByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesDockerProxyByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesDockerProxyByRepositoryNameNotFound creates a PutRepositoriesDockerProxyByRepositoryNameNotFound with default headers values
func NewPutRepositoriesDockerProxyByRepositoryNameNotFound() *PutRepositoriesDockerProxyByRepositoryNameNotFound {
	return &PutRepositoriesDockerProxyByRepositoryNameNotFound{}
}

/*
PutRepositoriesDockerProxyByRepositoryNameNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type PutRepositoriesDockerProxyByRepositoryNameNotFound struct {
}

// IsSuccess returns true when this put repositories docker proxy by repository name not found response has a 2xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories docker proxy by repository name not found response has a 3xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories docker proxy by repository name not found response has a 4xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories docker proxy by repository name not found response has a 5xx status code
func (o *PutRepositoriesDockerProxyByRepositoryNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories docker proxy by repository name not found response a status code equal to that given
func (o *PutRepositoriesDockerProxyByRepositoryNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put repositories docker proxy by repository name not found response
func (o *PutRepositoriesDockerProxyByRepositoryNameNotFound) Code() int {
	return 404
}

func (o *PutRepositoriesDockerProxyByRepositoryNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/proxy/{repositoryName}][%d] putRepositoriesDockerProxyByRepositoryNameNotFound", 404)
}

func (o *PutRepositoriesDockerProxyByRepositoryNameNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/proxy/{repositoryName}][%d] putRepositoriesDockerProxyByRepositoryNameNotFound", 404)
}

func (o *PutRepositoriesDockerProxyByRepositoryNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
