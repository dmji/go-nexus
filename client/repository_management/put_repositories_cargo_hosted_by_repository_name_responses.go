// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesCargoHostedByRepositoryNameReader is a Reader for the PutRepositoriesCargoHostedByRepositoryName structure.
type PutRepositoriesCargoHostedByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesCargoHostedByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesCargoHostedByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesCargoHostedByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesCargoHostedByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesCargoHostedByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/cargo/hosted/{repositoryName}] PutRepositoriesCargoHostedByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesCargoHostedByRepositoryNameNoContent creates a PutRepositoriesCargoHostedByRepositoryNameNoContent with default headers values
func NewPutRepositoriesCargoHostedByRepositoryNameNoContent() *PutRepositoriesCargoHostedByRepositoryNameNoContent {
	return &PutRepositoriesCargoHostedByRepositoryNameNoContent{}
}

/*
PutRepositoriesCargoHostedByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesCargoHostedByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories cargo hosted by repository name no content response has a 2xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories cargo hosted by repository name no content response has a 3xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cargo hosted by repository name no content response has a 4xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories cargo hosted by repository name no content response has a 5xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cargo hosted by repository name no content response a status code equal to that given
func (o *PutRepositoriesCargoHostedByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories cargo hosted by repository name no content response
func (o *PutRepositoriesCargoHostedByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesCargoHostedByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesCargoHostedByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesCargoHostedByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCargoHostedByRepositoryNameBadRequest creates a PutRepositoriesCargoHostedByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesCargoHostedByRepositoryNameBadRequest() *PutRepositoriesCargoHostedByRepositoryNameBadRequest {
	return &PutRepositoriesCargoHostedByRepositoryNameBadRequest{}
}

/*
PutRepositoriesCargoHostedByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesCargoHostedByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories cargo hosted by repository name bad request response has a 2xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cargo hosted by repository name bad request response has a 3xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cargo hosted by repository name bad request response has a 4xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cargo hosted by repository name bad request response has a 5xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cargo hosted by repository name bad request response a status code equal to that given
func (o *PutRepositoriesCargoHostedByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories cargo hosted by repository name bad request response
func (o *PutRepositoriesCargoHostedByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesCargoHostedByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesCargoHostedByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesCargoHostedByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCargoHostedByRepositoryNameUnauthorized creates a PutRepositoriesCargoHostedByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesCargoHostedByRepositoryNameUnauthorized() *PutRepositoriesCargoHostedByRepositoryNameUnauthorized {
	return &PutRepositoriesCargoHostedByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesCargoHostedByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesCargoHostedByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories cargo hosted by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cargo hosted by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cargo hosted by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cargo hosted by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cargo hosted by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesCargoHostedByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories cargo hosted by repository name unauthorized response
func (o *PutRepositoriesCargoHostedByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesCargoHostedByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesCargoHostedByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesCargoHostedByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCargoHostedByRepositoryNameForbidden creates a PutRepositoriesCargoHostedByRepositoryNameForbidden with default headers values
func NewPutRepositoriesCargoHostedByRepositoryNameForbidden() *PutRepositoriesCargoHostedByRepositoryNameForbidden {
	return &PutRepositoriesCargoHostedByRepositoryNameForbidden{}
}

/*
PutRepositoriesCargoHostedByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesCargoHostedByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories cargo hosted by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cargo hosted by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cargo hosted by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cargo hosted by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesCargoHostedByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cargo hosted by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesCargoHostedByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories cargo hosted by repository name forbidden response
func (o *PutRepositoriesCargoHostedByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesCargoHostedByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesCargoHostedByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesCargoHostedByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
