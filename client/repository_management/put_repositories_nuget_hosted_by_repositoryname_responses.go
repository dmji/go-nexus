// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesNugetHostedByRepositorynameReader is a Reader for the PutRepositoriesNugetHostedByRepositoryname structure.
type PutRepositoriesNugetHostedByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesNugetHostedByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesNugetHostedByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesNugetHostedByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesNugetHostedByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesNugetHostedByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/nuget/hosted/{repositoryName}] PutRepositoriesNugetHostedByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesNugetHostedByRepositorynameNoContent creates a PutRepositoriesNugetHostedByRepositorynameNoContent with default headers values
func NewPutRepositoriesNugetHostedByRepositorynameNoContent() *PutRepositoriesNugetHostedByRepositorynameNoContent {
	return &PutRepositoriesNugetHostedByRepositorynameNoContent{}
}

/*
PutRepositoriesNugetHostedByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesNugetHostedByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories nuget hosted by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories nuget hosted by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories nuget hosted by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories nuget hosted by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories nuget hosted by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesNugetHostedByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories nuget hosted by repositoryname no content response
func (o *PutRepositoriesNugetHostedByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesNugetHostedByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesNugetHostedByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesNugetHostedByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNugetHostedByRepositorynameBadRequest creates a PutRepositoriesNugetHostedByRepositorynameBadRequest with default headers values
func NewPutRepositoriesNugetHostedByRepositorynameBadRequest() *PutRepositoriesNugetHostedByRepositorynameBadRequest {
	return &PutRepositoriesNugetHostedByRepositorynameBadRequest{}
}

/*
PutRepositoriesNugetHostedByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesNugetHostedByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories nuget hosted by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories nuget hosted by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories nuget hosted by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories nuget hosted by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories nuget hosted by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesNugetHostedByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories nuget hosted by repositoryname bad request response
func (o *PutRepositoriesNugetHostedByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesNugetHostedByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesNugetHostedByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesNugetHostedByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNugetHostedByRepositorynameUnauthorized creates a PutRepositoriesNugetHostedByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesNugetHostedByRepositorynameUnauthorized() *PutRepositoriesNugetHostedByRepositorynameUnauthorized {
	return &PutRepositoriesNugetHostedByRepositorynameUnauthorized{}
}

/*
PutRepositoriesNugetHostedByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesNugetHostedByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories nuget hosted by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories nuget hosted by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories nuget hosted by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories nuget hosted by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories nuget hosted by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesNugetHostedByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories nuget hosted by repositoryname unauthorized response
func (o *PutRepositoriesNugetHostedByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesNugetHostedByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesNugetHostedByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesNugetHostedByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesNugetHostedByRepositorynameForbidden creates a PutRepositoriesNugetHostedByRepositorynameForbidden with default headers values
func NewPutRepositoriesNugetHostedByRepositorynameForbidden() *PutRepositoriesNugetHostedByRepositorynameForbidden {
	return &PutRepositoriesNugetHostedByRepositorynameForbidden{}
}

/*
PutRepositoriesNugetHostedByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesNugetHostedByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories nuget hosted by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories nuget hosted by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories nuget hosted by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories nuget hosted by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesNugetHostedByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories nuget hosted by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesNugetHostedByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories nuget hosted by repositoryname forbidden response
func (o *PutRepositoriesNugetHostedByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesNugetHostedByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesNugetHostedByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] putRepositoriesNugetHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesNugetHostedByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
