// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostRepositoriesRGroupReader is a Reader for the PostRepositoriesRGroup structure.
type PostRepositoriesRGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesRGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostRepositoriesRGroupCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostRepositoriesRGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRepositoriesRGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostRepositoriesRGroupMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/r/group] PostRepositoriesRGroup", response, response.Code())
	}
}

// NewPostRepositoriesRGroupCreated creates a PostRepositoriesRGroupCreated with default headers values
func NewPostRepositoriesRGroupCreated() *PostRepositoriesRGroupCreated {
	return &PostRepositoriesRGroupCreated{}
}

/*
PostRepositoriesRGroupCreated describes a response with status code 201, with default header values.

Repository created
*/
type PostRepositoriesRGroupCreated struct {
}

// IsSuccess returns true when this post repositories r group created response has a 2xx status code
func (o *PostRepositoriesRGroupCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post repositories r group created response has a 3xx status code
func (o *PostRepositoriesRGroupCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories r group created response has a 4xx status code
func (o *PostRepositoriesRGroupCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post repositories r group created response has a 5xx status code
func (o *PostRepositoriesRGroupCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories r group created response a status code equal to that given
func (o *PostRepositoriesRGroupCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post repositories r group created response
func (o *PostRepositoriesRGroupCreated) Code() int {
	return 201
}

func (o *PostRepositoriesRGroupCreated) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/group][%d] postRepositoriesRGroupCreated", 201)
}

func (o *PostRepositoriesRGroupCreated) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/group][%d] postRepositoriesRGroupCreated", 201)
}

func (o *PostRepositoriesRGroupCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesRGroupUnauthorized creates a PostRepositoriesRGroupUnauthorized with default headers values
func NewPostRepositoriesRGroupUnauthorized() *PostRepositoriesRGroupUnauthorized {
	return &PostRepositoriesRGroupUnauthorized{}
}

/*
PostRepositoriesRGroupUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PostRepositoriesRGroupUnauthorized struct {
}

// IsSuccess returns true when this post repositories r group unauthorized response has a 2xx status code
func (o *PostRepositoriesRGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories r group unauthorized response has a 3xx status code
func (o *PostRepositoriesRGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories r group unauthorized response has a 4xx status code
func (o *PostRepositoriesRGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories r group unauthorized response has a 5xx status code
func (o *PostRepositoriesRGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories r group unauthorized response a status code equal to that given
func (o *PostRepositoriesRGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post repositories r group unauthorized response
func (o *PostRepositoriesRGroupUnauthorized) Code() int {
	return 401
}

func (o *PostRepositoriesRGroupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/group][%d] postRepositoriesRGroupUnauthorized", 401)
}

func (o *PostRepositoriesRGroupUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/group][%d] postRepositoriesRGroupUnauthorized", 401)
}

func (o *PostRepositoriesRGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesRGroupForbidden creates a PostRepositoriesRGroupForbidden with default headers values
func NewPostRepositoriesRGroupForbidden() *PostRepositoriesRGroupForbidden {
	return &PostRepositoriesRGroupForbidden{}
}

/*
PostRepositoriesRGroupForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PostRepositoriesRGroupForbidden struct {
}

// IsSuccess returns true when this post repositories r group forbidden response has a 2xx status code
func (o *PostRepositoriesRGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories r group forbidden response has a 3xx status code
func (o *PostRepositoriesRGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories r group forbidden response has a 4xx status code
func (o *PostRepositoriesRGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories r group forbidden response has a 5xx status code
func (o *PostRepositoriesRGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories r group forbidden response a status code equal to that given
func (o *PostRepositoriesRGroupForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post repositories r group forbidden response
func (o *PostRepositoriesRGroupForbidden) Code() int {
	return 403
}

func (o *PostRepositoriesRGroupForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/group][%d] postRepositoriesRGroupForbidden", 403)
}

func (o *PostRepositoriesRGroupForbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/group][%d] postRepositoriesRGroupForbidden", 403)
}

func (o *PostRepositoriesRGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesRGroupMethodNotAllowed creates a PostRepositoriesRGroupMethodNotAllowed with default headers values
func NewPostRepositoriesRGroupMethodNotAllowed() *PostRepositoriesRGroupMethodNotAllowed {
	return &PostRepositoriesRGroupMethodNotAllowed{}
}

/*
PostRepositoriesRGroupMethodNotAllowed describes a response with status code 405, with default header values.

Feature is disabled in High Availability
*/
type PostRepositoriesRGroupMethodNotAllowed struct {
}

// IsSuccess returns true when this post repositories r group method not allowed response has a 2xx status code
func (o *PostRepositoriesRGroupMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post repositories r group method not allowed response has a 3xx status code
func (o *PostRepositoriesRGroupMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post repositories r group method not allowed response has a 4xx status code
func (o *PostRepositoriesRGroupMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this post repositories r group method not allowed response has a 5xx status code
func (o *PostRepositoriesRGroupMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this post repositories r group method not allowed response a status code equal to that given
func (o *PostRepositoriesRGroupMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the post repositories r group method not allowed response
func (o *PostRepositoriesRGroupMethodNotAllowed) Code() int {
	return 405
}

func (o *PostRepositoriesRGroupMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/group][%d] postRepositoriesRGroupMethodNotAllowed", 405)
}

func (o *PostRepositoriesRGroupMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/group][%d] postRepositoriesRGroupMethodNotAllowed", 405)
}

func (o *PostRepositoriesRGroupMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
