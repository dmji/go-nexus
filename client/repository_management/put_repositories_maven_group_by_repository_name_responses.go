// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesMavenGroupByRepositoryNameReader is a Reader for the PutRepositoriesMavenGroupByRepositoryName structure.
type PutRepositoriesMavenGroupByRepositoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesMavenGroupByRepositoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesMavenGroupByRepositoryNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesMavenGroupByRepositoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesMavenGroupByRepositoryNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesMavenGroupByRepositoryNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/maven/group/{repositoryName}] PutRepositoriesMavenGroupByRepositoryName", response, response.Code())
	}
}

// NewPutRepositoriesMavenGroupByRepositoryNameNoContent creates a PutRepositoriesMavenGroupByRepositoryNameNoContent with default headers values
func NewPutRepositoriesMavenGroupByRepositoryNameNoContent() *PutRepositoriesMavenGroupByRepositoryNameNoContent {
	return &PutRepositoriesMavenGroupByRepositoryNameNoContent{}
}

/*
PutRepositoriesMavenGroupByRepositoryNameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesMavenGroupByRepositoryNameNoContent struct {
}

// IsSuccess returns true when this put repositories maven group by repository name no content response has a 2xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories maven group by repository name no content response has a 3xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven group by repository name no content response has a 4xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories maven group by repository name no content response has a 5xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven group by repository name no content response a status code equal to that given
func (o *PutRepositoriesMavenGroupByRepositoryNameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories maven group by repository name no content response
func (o *PutRepositoriesMavenGroupByRepositoryNameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesMavenGroupByRepositoryNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesMavenGroupByRepositoryNameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositoryNameNoContent", 204)
}

func (o *PutRepositoriesMavenGroupByRepositoryNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenGroupByRepositoryNameBadRequest creates a PutRepositoriesMavenGroupByRepositoryNameBadRequest with default headers values
func NewPutRepositoriesMavenGroupByRepositoryNameBadRequest() *PutRepositoriesMavenGroupByRepositoryNameBadRequest {
	return &PutRepositoriesMavenGroupByRepositoryNameBadRequest{}
}

/*
PutRepositoriesMavenGroupByRepositoryNameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesMavenGroupByRepositoryNameBadRequest struct {
}

// IsSuccess returns true when this put repositories maven group by repository name bad request response has a 2xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven group by repository name bad request response has a 3xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven group by repository name bad request response has a 4xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven group by repository name bad request response has a 5xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven group by repository name bad request response a status code equal to that given
func (o *PutRepositoriesMavenGroupByRepositoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories maven group by repository name bad request response
func (o *PutRepositoriesMavenGroupByRepositoryNameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesMavenGroupByRepositoryNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesMavenGroupByRepositoryNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositoryNameBadRequest", 400)
}

func (o *PutRepositoriesMavenGroupByRepositoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenGroupByRepositoryNameUnauthorized creates a PutRepositoriesMavenGroupByRepositoryNameUnauthorized with default headers values
func NewPutRepositoriesMavenGroupByRepositoryNameUnauthorized() *PutRepositoriesMavenGroupByRepositoryNameUnauthorized {
	return &PutRepositoriesMavenGroupByRepositoryNameUnauthorized{}
}

/*
PutRepositoriesMavenGroupByRepositoryNameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesMavenGroupByRepositoryNameUnauthorized struct {
}

// IsSuccess returns true when this put repositories maven group by repository name unauthorized response has a 2xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven group by repository name unauthorized response has a 3xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven group by repository name unauthorized response has a 4xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven group by repository name unauthorized response has a 5xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven group by repository name unauthorized response a status code equal to that given
func (o *PutRepositoriesMavenGroupByRepositoryNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories maven group by repository name unauthorized response
func (o *PutRepositoriesMavenGroupByRepositoryNameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesMavenGroupByRepositoryNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesMavenGroupByRepositoryNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositoryNameUnauthorized", 401)
}

func (o *PutRepositoriesMavenGroupByRepositoryNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesMavenGroupByRepositoryNameForbidden creates a PutRepositoriesMavenGroupByRepositoryNameForbidden with default headers values
func NewPutRepositoriesMavenGroupByRepositoryNameForbidden() *PutRepositoriesMavenGroupByRepositoryNameForbidden {
	return &PutRepositoriesMavenGroupByRepositoryNameForbidden{}
}

/*
PutRepositoriesMavenGroupByRepositoryNameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesMavenGroupByRepositoryNameForbidden struct {
}

// IsSuccess returns true when this put repositories maven group by repository name forbidden response has a 2xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories maven group by repository name forbidden response has a 3xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories maven group by repository name forbidden response has a 4xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories maven group by repository name forbidden response has a 5xx status code
func (o *PutRepositoriesMavenGroupByRepositoryNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories maven group by repository name forbidden response a status code equal to that given
func (o *PutRepositoriesMavenGroupByRepositoryNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories maven group by repository name forbidden response
func (o *PutRepositoriesMavenGroupByRepositoryNameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesMavenGroupByRepositoryNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesMavenGroupByRepositoryNameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/maven/group/{repositoryName}][%d] putRepositoriesMavenGroupByRepositoryNameForbidden", 403)
}

func (o *PutRepositoriesMavenGroupByRepositoryNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
