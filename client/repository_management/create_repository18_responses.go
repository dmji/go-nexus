// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateRepository18Reader is a Reader for the CreateRepository18 structure.
type CreateRepository18Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRepository18Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRepository18Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateRepository18Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRepository18Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/repositories/docker/hosted] createRepository_18", response, response.Code())
	}
}

// NewCreateRepository18Created creates a CreateRepository18Created with default headers values
func NewCreateRepository18Created() *CreateRepository18Created {
	return &CreateRepository18Created{}
}

/*
CreateRepository18Created describes a response with status code 201, with default header values.

Repository created
*/
type CreateRepository18Created struct {
}

// IsSuccess returns true when this create repository18 created response has a 2xx status code
func (o *CreateRepository18Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create repository18 created response has a 3xx status code
func (o *CreateRepository18Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository18 created response has a 4xx status code
func (o *CreateRepository18Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this create repository18 created response has a 5xx status code
func (o *CreateRepository18Created) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository18 created response a status code equal to that given
func (o *CreateRepository18Created) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create repository18 created response
func (o *CreateRepository18Created) Code() int {
	return 201
}

func (o *CreateRepository18Created) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/docker/hosted][%d] createRepository18Created", 201)
}

func (o *CreateRepository18Created) String() string {
	return fmt.Sprintf("[POST /v1/repositories/docker/hosted][%d] createRepository18Created", 201)
}

func (o *CreateRepository18Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository18Unauthorized creates a CreateRepository18Unauthorized with default headers values
func NewCreateRepository18Unauthorized() *CreateRepository18Unauthorized {
	return &CreateRepository18Unauthorized{}
}

/*
CreateRepository18Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type CreateRepository18Unauthorized struct {
}

// IsSuccess returns true when this create repository18 unauthorized response has a 2xx status code
func (o *CreateRepository18Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository18 unauthorized response has a 3xx status code
func (o *CreateRepository18Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository18 unauthorized response has a 4xx status code
func (o *CreateRepository18Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository18 unauthorized response has a 5xx status code
func (o *CreateRepository18Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository18 unauthorized response a status code equal to that given
func (o *CreateRepository18Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create repository18 unauthorized response
func (o *CreateRepository18Unauthorized) Code() int {
	return 401
}

func (o *CreateRepository18Unauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/docker/hosted][%d] createRepository18Unauthorized", 401)
}

func (o *CreateRepository18Unauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/docker/hosted][%d] createRepository18Unauthorized", 401)
}

func (o *CreateRepository18Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository18Forbidden creates a CreateRepository18Forbidden with default headers values
func NewCreateRepository18Forbidden() *CreateRepository18Forbidden {
	return &CreateRepository18Forbidden{}
}

/*
CreateRepository18Forbidden describes a response with status code 403, with default header values.

Repository not found
*/
type CreateRepository18Forbidden struct {
}

// IsSuccess returns true when this create repository18 forbidden response has a 2xx status code
func (o *CreateRepository18Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository18 forbidden response has a 3xx status code
func (o *CreateRepository18Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository18 forbidden response has a 4xx status code
func (o *CreateRepository18Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository18 forbidden response has a 5xx status code
func (o *CreateRepository18Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository18 forbidden response a status code equal to that given
func (o *CreateRepository18Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create repository18 forbidden response
func (o *CreateRepository18Forbidden) Code() int {
	return 403
}

func (o *CreateRepository18Forbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/docker/hosted][%d] createRepository18Forbidden", 403)
}

func (o *CreateRepository18Forbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/docker/hosted][%d] createRepository18Forbidden", 403)
}

func (o *CreateRepository18Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
