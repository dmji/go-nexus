// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository30Reader is a Reader for the UpdateRepository30 structure.
type UpdateRepository30Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository30Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository30NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRepository30BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRepository30Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository30Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/nuget/hosted/{repositoryName}] updateRepository_30", response, response.Code())
	}
}

// NewUpdateRepository30NoContent creates a UpdateRepository30NoContent with default headers values
func NewUpdateRepository30NoContent() *UpdateRepository30NoContent {
	return &UpdateRepository30NoContent{}
}

/*
UpdateRepository30NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository30NoContent struct {
}

// IsSuccess returns true when this update repository30 no content response has a 2xx status code
func (o *UpdateRepository30NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository30 no content response has a 3xx status code
func (o *UpdateRepository30NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository30 no content response has a 4xx status code
func (o *UpdateRepository30NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository30 no content response has a 5xx status code
func (o *UpdateRepository30NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository30 no content response a status code equal to that given
func (o *UpdateRepository30NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update repository30 no content response
func (o *UpdateRepository30NoContent) Code() int {
	return 204
}

func (o *UpdateRepository30NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository30NoContent", 204)
}

func (o *UpdateRepository30NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository30NoContent", 204)
}

func (o *UpdateRepository30NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository30BadRequest creates a UpdateRepository30BadRequest with default headers values
func NewUpdateRepository30BadRequest() *UpdateRepository30BadRequest {
	return &UpdateRepository30BadRequest{}
}

/*
UpdateRepository30BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateRepository30BadRequest struct {
}

// IsSuccess returns true when this update repository30 bad request response has a 2xx status code
func (o *UpdateRepository30BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository30 bad request response has a 3xx status code
func (o *UpdateRepository30BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository30 bad request response has a 4xx status code
func (o *UpdateRepository30BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository30 bad request response has a 5xx status code
func (o *UpdateRepository30BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository30 bad request response a status code equal to that given
func (o *UpdateRepository30BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update repository30 bad request response
func (o *UpdateRepository30BadRequest) Code() int {
	return 400
}

func (o *UpdateRepository30BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository30BadRequest", 400)
}

func (o *UpdateRepository30BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository30BadRequest", 400)
}

func (o *UpdateRepository30BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository30Unauthorized creates a UpdateRepository30Unauthorized with default headers values
func NewUpdateRepository30Unauthorized() *UpdateRepository30Unauthorized {
	return &UpdateRepository30Unauthorized{}
}

/*
UpdateRepository30Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository30Unauthorized struct {
}

// IsSuccess returns true when this update repository30 unauthorized response has a 2xx status code
func (o *UpdateRepository30Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository30 unauthorized response has a 3xx status code
func (o *UpdateRepository30Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository30 unauthorized response has a 4xx status code
func (o *UpdateRepository30Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository30 unauthorized response has a 5xx status code
func (o *UpdateRepository30Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository30 unauthorized response a status code equal to that given
func (o *UpdateRepository30Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update repository30 unauthorized response
func (o *UpdateRepository30Unauthorized) Code() int {
	return 401
}

func (o *UpdateRepository30Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository30Unauthorized", 401)
}

func (o *UpdateRepository30Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository30Unauthorized", 401)
}

func (o *UpdateRepository30Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository30Forbidden creates a UpdateRepository30Forbidden with default headers values
func NewUpdateRepository30Forbidden() *UpdateRepository30Forbidden {
	return &UpdateRepository30Forbidden{}
}

/*
UpdateRepository30Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository30Forbidden struct {
}

// IsSuccess returns true when this update repository30 forbidden response has a 2xx status code
func (o *UpdateRepository30Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository30 forbidden response has a 3xx status code
func (o *UpdateRepository30Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository30 forbidden response has a 4xx status code
func (o *UpdateRepository30Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository30 forbidden response has a 5xx status code
func (o *UpdateRepository30Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository30 forbidden response a status code equal to that given
func (o *UpdateRepository30Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update repository30 forbidden response
func (o *UpdateRepository30Forbidden) Code() int {
	return 403
}

func (o *UpdateRepository30Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository30Forbidden", 403)
}

func (o *UpdateRepository30Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository30Forbidden", 403)
}

func (o *UpdateRepository30Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
