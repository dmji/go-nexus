// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository44Reader is a Reader for the UpdateRepository44 structure.
type UpdateRepository44Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository44Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository44NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRepository44BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRepository44Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository44Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/yum/proxy/{repositoryName}] updateRepository_44", response, response.Code())
	}
}

// NewUpdateRepository44NoContent creates a UpdateRepository44NoContent with default headers values
func NewUpdateRepository44NoContent() *UpdateRepository44NoContent {
	return &UpdateRepository44NoContent{}
}

/*
UpdateRepository44NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository44NoContent struct {
}

// IsSuccess returns true when this update repository44 no content response has a 2xx status code
func (o *UpdateRepository44NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository44 no content response has a 3xx status code
func (o *UpdateRepository44NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository44 no content response has a 4xx status code
func (o *UpdateRepository44NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository44 no content response has a 5xx status code
func (o *UpdateRepository44NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository44 no content response a status code equal to that given
func (o *UpdateRepository44NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update repository44 no content response
func (o *UpdateRepository44NoContent) Code() int {
	return 204
}

func (o *UpdateRepository44NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/proxy/{repositoryName}][%d] updateRepository44NoContent", 204)
}

func (o *UpdateRepository44NoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/proxy/{repositoryName}][%d] updateRepository44NoContent", 204)
}

func (o *UpdateRepository44NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository44BadRequest creates a UpdateRepository44BadRequest with default headers values
func NewUpdateRepository44BadRequest() *UpdateRepository44BadRequest {
	return &UpdateRepository44BadRequest{}
}

/*
UpdateRepository44BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateRepository44BadRequest struct {
}

// IsSuccess returns true when this update repository44 bad request response has a 2xx status code
func (o *UpdateRepository44BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository44 bad request response has a 3xx status code
func (o *UpdateRepository44BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository44 bad request response has a 4xx status code
func (o *UpdateRepository44BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository44 bad request response has a 5xx status code
func (o *UpdateRepository44BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository44 bad request response a status code equal to that given
func (o *UpdateRepository44BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update repository44 bad request response
func (o *UpdateRepository44BadRequest) Code() int {
	return 400
}

func (o *UpdateRepository44BadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/proxy/{repositoryName}][%d] updateRepository44BadRequest", 400)
}

func (o *UpdateRepository44BadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/proxy/{repositoryName}][%d] updateRepository44BadRequest", 400)
}

func (o *UpdateRepository44BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository44Unauthorized creates a UpdateRepository44Unauthorized with default headers values
func NewUpdateRepository44Unauthorized() *UpdateRepository44Unauthorized {
	return &UpdateRepository44Unauthorized{}
}

/*
UpdateRepository44Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository44Unauthorized struct {
}

// IsSuccess returns true when this update repository44 unauthorized response has a 2xx status code
func (o *UpdateRepository44Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository44 unauthorized response has a 3xx status code
func (o *UpdateRepository44Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository44 unauthorized response has a 4xx status code
func (o *UpdateRepository44Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository44 unauthorized response has a 5xx status code
func (o *UpdateRepository44Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository44 unauthorized response a status code equal to that given
func (o *UpdateRepository44Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update repository44 unauthorized response
func (o *UpdateRepository44Unauthorized) Code() int {
	return 401
}

func (o *UpdateRepository44Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/proxy/{repositoryName}][%d] updateRepository44Unauthorized", 401)
}

func (o *UpdateRepository44Unauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/proxy/{repositoryName}][%d] updateRepository44Unauthorized", 401)
}

func (o *UpdateRepository44Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository44Forbidden creates a UpdateRepository44Forbidden with default headers values
func NewUpdateRepository44Forbidden() *UpdateRepository44Forbidden {
	return &UpdateRepository44Forbidden{}
}

/*
UpdateRepository44Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository44Forbidden struct {
}

// IsSuccess returns true when this update repository44 forbidden response has a 2xx status code
func (o *UpdateRepository44Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository44 forbidden response has a 3xx status code
func (o *UpdateRepository44Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository44 forbidden response has a 4xx status code
func (o *UpdateRepository44Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository44 forbidden response has a 5xx status code
func (o *UpdateRepository44Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository44 forbidden response a status code equal to that given
func (o *UpdateRepository44Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update repository44 forbidden response
func (o *UpdateRepository44Forbidden) Code() int {
	return 403
}

func (o *UpdateRepository44Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/proxy/{repositoryName}][%d] updateRepository44Forbidden", 403)
}

func (o *UpdateRepository44Forbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/proxy/{repositoryName}][%d] updateRepository44Forbidden", 403)
}

func (o *UpdateRepository44Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
