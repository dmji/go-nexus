// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutRepositoriesCargoHostedByRepositorynameReader is a Reader for the PutRepositoriesCargoHostedByRepositoryname structure.
type PutRepositoriesCargoHostedByRepositorynameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRepositoriesCargoHostedByRepositorynameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutRepositoriesCargoHostedByRepositorynameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRepositoriesCargoHostedByRepositorynameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRepositoriesCargoHostedByRepositorynameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRepositoriesCargoHostedByRepositorynameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/repositories/cargo/hosted/{repositoryName}] PutRepositoriesCargoHostedByRepositoryname", response, response.Code())
	}
}

// NewPutRepositoriesCargoHostedByRepositorynameNoContent creates a PutRepositoriesCargoHostedByRepositorynameNoContent with default headers values
func NewPutRepositoriesCargoHostedByRepositorynameNoContent() *PutRepositoriesCargoHostedByRepositorynameNoContent {
	return &PutRepositoriesCargoHostedByRepositorynameNoContent{}
}

/*
PutRepositoriesCargoHostedByRepositorynameNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type PutRepositoriesCargoHostedByRepositorynameNoContent struct {
}

// IsSuccess returns true when this put repositories cargo hosted by repositoryname no content response has a 2xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put repositories cargo hosted by repositoryname no content response has a 3xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cargo hosted by repositoryname no content response has a 4xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put repositories cargo hosted by repositoryname no content response has a 5xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cargo hosted by repositoryname no content response a status code equal to that given
func (o *PutRepositoriesCargoHostedByRepositorynameNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put repositories cargo hosted by repositoryname no content response
func (o *PutRepositoriesCargoHostedByRepositorynameNoContent) Code() int {
	return 204
}

func (o *PutRepositoriesCargoHostedByRepositorynameNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesCargoHostedByRepositorynameNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositorynameNoContent", 204)
}

func (o *PutRepositoriesCargoHostedByRepositorynameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCargoHostedByRepositorynameBadRequest creates a PutRepositoriesCargoHostedByRepositorynameBadRequest with default headers values
func NewPutRepositoriesCargoHostedByRepositorynameBadRequest() *PutRepositoriesCargoHostedByRepositorynameBadRequest {
	return &PutRepositoriesCargoHostedByRepositorynameBadRequest{}
}

/*
PutRepositoriesCargoHostedByRepositorynameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutRepositoriesCargoHostedByRepositorynameBadRequest struct {
}

// IsSuccess returns true when this put repositories cargo hosted by repositoryname bad request response has a 2xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cargo hosted by repositoryname bad request response has a 3xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cargo hosted by repositoryname bad request response has a 4xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cargo hosted by repositoryname bad request response has a 5xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cargo hosted by repositoryname bad request response a status code equal to that given
func (o *PutRepositoriesCargoHostedByRepositorynameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put repositories cargo hosted by repositoryname bad request response
func (o *PutRepositoriesCargoHostedByRepositorynameBadRequest) Code() int {
	return 400
}

func (o *PutRepositoriesCargoHostedByRepositorynameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesCargoHostedByRepositorynameBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositorynameBadRequest", 400)
}

func (o *PutRepositoriesCargoHostedByRepositorynameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCargoHostedByRepositorynameUnauthorized creates a PutRepositoriesCargoHostedByRepositorynameUnauthorized with default headers values
func NewPutRepositoriesCargoHostedByRepositorynameUnauthorized() *PutRepositoriesCargoHostedByRepositorynameUnauthorized {
	return &PutRepositoriesCargoHostedByRepositorynameUnauthorized{}
}

/*
PutRepositoriesCargoHostedByRepositorynameUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type PutRepositoriesCargoHostedByRepositorynameUnauthorized struct {
}

// IsSuccess returns true when this put repositories cargo hosted by repositoryname unauthorized response has a 2xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cargo hosted by repositoryname unauthorized response has a 3xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cargo hosted by repositoryname unauthorized response has a 4xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cargo hosted by repositoryname unauthorized response has a 5xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cargo hosted by repositoryname unauthorized response a status code equal to that given
func (o *PutRepositoriesCargoHostedByRepositorynameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put repositories cargo hosted by repositoryname unauthorized response
func (o *PutRepositoriesCargoHostedByRepositorynameUnauthorized) Code() int {
	return 401
}

func (o *PutRepositoriesCargoHostedByRepositorynameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesCargoHostedByRepositorynameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositorynameUnauthorized", 401)
}

func (o *PutRepositoriesCargoHostedByRepositorynameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutRepositoriesCargoHostedByRepositorynameForbidden creates a PutRepositoriesCargoHostedByRepositorynameForbidden with default headers values
func NewPutRepositoriesCargoHostedByRepositorynameForbidden() *PutRepositoriesCargoHostedByRepositorynameForbidden {
	return &PutRepositoriesCargoHostedByRepositorynameForbidden{}
}

/*
PutRepositoriesCargoHostedByRepositorynameForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type PutRepositoriesCargoHostedByRepositorynameForbidden struct {
}

// IsSuccess returns true when this put repositories cargo hosted by repositoryname forbidden response has a 2xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put repositories cargo hosted by repositoryname forbidden response has a 3xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put repositories cargo hosted by repositoryname forbidden response has a 4xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put repositories cargo hosted by repositoryname forbidden response has a 5xx status code
func (o *PutRepositoriesCargoHostedByRepositorynameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put repositories cargo hosted by repositoryname forbidden response a status code equal to that given
func (o *PutRepositoriesCargoHostedByRepositorynameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put repositories cargo hosted by repositoryname forbidden response
func (o *PutRepositoriesCargoHostedByRepositorynameForbidden) Code() int {
	return 403
}

func (o *PutRepositoriesCargoHostedByRepositorynameForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesCargoHostedByRepositorynameForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/cargo/hosted/{repositoryName}][%d] putRepositoriesCargoHostedByRepositorynameForbidden", 403)
}

func (o *PutRepositoriesCargoHostedByRepositorynameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
