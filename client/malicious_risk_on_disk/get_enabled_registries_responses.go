// Code generated by go-swagger; DO NOT EDIT.

package malicious_risk_on_disk

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetEnabledRegistriesReader is a Reader for the GetEnabledRegistries structure.
type GetEnabledRegistriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnabledRegistriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnabledRegistriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEnabledRegistriesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEnabledRegistriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/malicious-risk/enabledRegistries] getEnabledRegistries", response, response.Code())
	}
}

// NewGetEnabledRegistriesOK creates a GetEnabledRegistriesOK with default headers values
func NewGetEnabledRegistriesOK() *GetEnabledRegistriesOK {
	return &GetEnabledRegistriesOK{}
}

/*
GetEnabledRegistriesOK describes a response with status code 200, with default header values.

RHC Enabled registries returned
*/
type GetEnabledRegistriesOK struct {
}

// IsSuccess returns true when this get enabled registries o k response has a 2xx status code
func (o *GetEnabledRegistriesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get enabled registries o k response has a 3xx status code
func (o *GetEnabledRegistriesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get enabled registries o k response has a 4xx status code
func (o *GetEnabledRegistriesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get enabled registries o k response has a 5xx status code
func (o *GetEnabledRegistriesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get enabled registries o k response a status code equal to that given
func (o *GetEnabledRegistriesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get enabled registries o k response
func (o *GetEnabledRegistriesOK) Code() int {
	return 200
}

func (o *GetEnabledRegistriesOK) Error() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/enabledRegistries][%d] getEnabledRegistriesOK", 200)
}

func (o *GetEnabledRegistriesOK) String() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/enabledRegistries][%d] getEnabledRegistriesOK", 200)
}

func (o *GetEnabledRegistriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnabledRegistriesUnauthorized creates a GetEnabledRegistriesUnauthorized with default headers values
func NewGetEnabledRegistriesUnauthorized() *GetEnabledRegistriesUnauthorized {
	return &GetEnabledRegistriesUnauthorized{}
}

/*
GetEnabledRegistriesUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type GetEnabledRegistriesUnauthorized struct {
}

// IsSuccess returns true when this get enabled registries unauthorized response has a 2xx status code
func (o *GetEnabledRegistriesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get enabled registries unauthorized response has a 3xx status code
func (o *GetEnabledRegistriesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get enabled registries unauthorized response has a 4xx status code
func (o *GetEnabledRegistriesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get enabled registries unauthorized response has a 5xx status code
func (o *GetEnabledRegistriesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get enabled registries unauthorized response a status code equal to that given
func (o *GetEnabledRegistriesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get enabled registries unauthorized response
func (o *GetEnabledRegistriesUnauthorized) Code() int {
	return 401
}

func (o *GetEnabledRegistriesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/enabledRegistries][%d] getEnabledRegistriesUnauthorized", 401)
}

func (o *GetEnabledRegistriesUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/enabledRegistries][%d] getEnabledRegistriesUnauthorized", 401)
}

func (o *GetEnabledRegistriesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnabledRegistriesForbidden creates a GetEnabledRegistriesForbidden with default headers values
func NewGetEnabledRegistriesForbidden() *GetEnabledRegistriesForbidden {
	return &GetEnabledRegistriesForbidden{}
}

/*
GetEnabledRegistriesForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type GetEnabledRegistriesForbidden struct {
}

// IsSuccess returns true when this get enabled registries forbidden response has a 2xx status code
func (o *GetEnabledRegistriesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get enabled registries forbidden response has a 3xx status code
func (o *GetEnabledRegistriesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get enabled registries forbidden response has a 4xx status code
func (o *GetEnabledRegistriesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get enabled registries forbidden response has a 5xx status code
func (o *GetEnabledRegistriesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get enabled registries forbidden response a status code equal to that given
func (o *GetEnabledRegistriesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get enabled registries forbidden response
func (o *GetEnabledRegistriesForbidden) Code() int {
	return 403
}

func (o *GetEnabledRegistriesForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/enabledRegistries][%d] getEnabledRegistriesForbidden", 403)
}

func (o *GetEnabledRegistriesForbidden) String() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/enabledRegistries][%d] getEnabledRegistriesForbidden", 403)
}

func (o *GetEnabledRegistriesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
