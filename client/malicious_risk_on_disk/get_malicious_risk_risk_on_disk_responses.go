// Code generated by go-swagger; DO NOT EDIT.

package malicious_risk_on_disk

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetMaliciousRiskRiskOnDiskReader is a Reader for the GetMaliciousRiskRiskOnDisk structure.
type GetMaliciousRiskRiskOnDiskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMaliciousRiskRiskOnDiskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMaliciousRiskRiskOnDiskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMaliciousRiskRiskOnDiskUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMaliciousRiskRiskOnDiskForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/malicious-risk/risk-on-disk] GetMaliciousRiskRiskOnDisk", response, response.Code())
	}
}

// NewGetMaliciousRiskRiskOnDiskOK creates a GetMaliciousRiskRiskOnDiskOK with default headers values
func NewGetMaliciousRiskRiskOnDiskOK() *GetMaliciousRiskRiskOnDiskOK {
	return &GetMaliciousRiskRiskOnDiskOK{}
}

/*
GetMaliciousRiskRiskOnDiskOK describes a response with status code 200, with default header values.

Malicious Risk On Disk Count returned
*/
type GetMaliciousRiskRiskOnDiskOK struct {
}

// IsSuccess returns true when this get malicious risk risk on disk o k response has a 2xx status code
func (o *GetMaliciousRiskRiskOnDiskOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get malicious risk risk on disk o k response has a 3xx status code
func (o *GetMaliciousRiskRiskOnDiskOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get malicious risk risk on disk o k response has a 4xx status code
func (o *GetMaliciousRiskRiskOnDiskOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get malicious risk risk on disk o k response has a 5xx status code
func (o *GetMaliciousRiskRiskOnDiskOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get malicious risk risk on disk o k response a status code equal to that given
func (o *GetMaliciousRiskRiskOnDiskOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get malicious risk risk on disk o k response
func (o *GetMaliciousRiskRiskOnDiskOK) Code() int {
	return 200
}

func (o *GetMaliciousRiskRiskOnDiskOK) Error() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/risk-on-disk][%d] getMaliciousRiskRiskOnDiskOK", 200)
}

func (o *GetMaliciousRiskRiskOnDiskOK) String() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/risk-on-disk][%d] getMaliciousRiskRiskOnDiskOK", 200)
}

func (o *GetMaliciousRiskRiskOnDiskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMaliciousRiskRiskOnDiskUnauthorized creates a GetMaliciousRiskRiskOnDiskUnauthorized with default headers values
func NewGetMaliciousRiskRiskOnDiskUnauthorized() *GetMaliciousRiskRiskOnDiskUnauthorized {
	return &GetMaliciousRiskRiskOnDiskUnauthorized{}
}

/*
GetMaliciousRiskRiskOnDiskUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type GetMaliciousRiskRiskOnDiskUnauthorized struct {
}

// IsSuccess returns true when this get malicious risk risk on disk unauthorized response has a 2xx status code
func (o *GetMaliciousRiskRiskOnDiskUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get malicious risk risk on disk unauthorized response has a 3xx status code
func (o *GetMaliciousRiskRiskOnDiskUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get malicious risk risk on disk unauthorized response has a 4xx status code
func (o *GetMaliciousRiskRiskOnDiskUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get malicious risk risk on disk unauthorized response has a 5xx status code
func (o *GetMaliciousRiskRiskOnDiskUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get malicious risk risk on disk unauthorized response a status code equal to that given
func (o *GetMaliciousRiskRiskOnDiskUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get malicious risk risk on disk unauthorized response
func (o *GetMaliciousRiskRiskOnDiskUnauthorized) Code() int {
	return 401
}

func (o *GetMaliciousRiskRiskOnDiskUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/risk-on-disk][%d] getMaliciousRiskRiskOnDiskUnauthorized", 401)
}

func (o *GetMaliciousRiskRiskOnDiskUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/risk-on-disk][%d] getMaliciousRiskRiskOnDiskUnauthorized", 401)
}

func (o *GetMaliciousRiskRiskOnDiskUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMaliciousRiskRiskOnDiskForbidden creates a GetMaliciousRiskRiskOnDiskForbidden with default headers values
func NewGetMaliciousRiskRiskOnDiskForbidden() *GetMaliciousRiskRiskOnDiskForbidden {
	return &GetMaliciousRiskRiskOnDiskForbidden{}
}

/*
GetMaliciousRiskRiskOnDiskForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type GetMaliciousRiskRiskOnDiskForbidden struct {
}

// IsSuccess returns true when this get malicious risk risk on disk forbidden response has a 2xx status code
func (o *GetMaliciousRiskRiskOnDiskForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get malicious risk risk on disk forbidden response has a 3xx status code
func (o *GetMaliciousRiskRiskOnDiskForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get malicious risk risk on disk forbidden response has a 4xx status code
func (o *GetMaliciousRiskRiskOnDiskForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get malicious risk risk on disk forbidden response has a 5xx status code
func (o *GetMaliciousRiskRiskOnDiskForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get malicious risk risk on disk forbidden response a status code equal to that given
func (o *GetMaliciousRiskRiskOnDiskForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get malicious risk risk on disk forbidden response
func (o *GetMaliciousRiskRiskOnDiskForbidden) Code() int {
	return 403
}

func (o *GetMaliciousRiskRiskOnDiskForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/risk-on-disk][%d] getMaliciousRiskRiskOnDiskForbidden", 403)
}

func (o *GetMaliciousRiskRiskOnDiskForbidden) String() string {
	return fmt.Sprintf("[GET /v1/malicious-risk/risk-on-disk][%d] getMaliciousRiskRiskOnDiskForbidden", 403)
}

func (o *GetMaliciousRiskRiskOnDiskForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
